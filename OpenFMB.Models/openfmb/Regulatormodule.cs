// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: regulatormodule/regulatormodule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace openfmb.regulatormodule {

  /// <summary>Holder for reflection information generated from regulatormodule/regulatormodule.proto</summary>
  public static partial class RegulatormoduleReflection {

    #region Descriptor
    /// <summary>File descriptor for regulatormodule/regulatormodule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RegulatormoduleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVyZWd1bGF0b3Jtb2R1bGUvcmVndWxhdG9ybW9kdWxlLnByb3RvEg9yZWd1",
            "bGF0b3Jtb2R1bGUaCXVtbC5wcm90bxofY29tbW9ubW9kdWxlL2NvbW1vbm1v",
            "ZHVsZS5wcm90byKQAgoPRGlyZWN0aW9uYWxBVENDEiYKBkJuZFdpZBgBIAEo",
            "CzIWLmNvbW1vbm1vZHVsZS5QaGFzZUFQQxIpCglDdGxEbFRtbXMYAiABKAsy",
            "Fi5jb21tb25tb2R1bGUuUGhhc2VJU0MSJAoETERDUhgDIAEoCzIWLmNvbW1v",
            "bm1vZHVsZS5QaGFzZUFQQxIkCgRMRENYGAQgASgLMhYuY29tbW9ubW9kdWxl",
            "LlBoYXNlQVBDEiYKBlZvbFNwdBgFIAEoCzIWLmNvbW1vbm1vZHVsZS5QaGFz",
            "ZUFQQxI2ChZ2b2x0YWdlU2V0UG9pbnRFbmFibGVkGAYgASgLMhYuY29tbW9u",
            "bW9kdWxlLlBoYXNlRFBDIowFChRSZWd1bGF0b3JDb250cm9sQVRDQxJIChVs",
            "b2dpY2FsTm9kZUZvckNvbnRyb2wYASABKAsyIy5jb21tb25tb2R1bGUuTG9n",
            "aWNhbE5vZGVGb3JDb250cm9sQgSAtRgBEjAKBkRpckZ3ZBgCIAEoCzIgLnJl",
            "Z3VsYXRvcm1vZHVsZS5EaXJlY3Rpb25hbEFUQ0MSOQoHRGlyTW9kZRgDIAEo",
            "CzIoLmNvbW1vbm1vZHVsZS5PcHRpb25hbF9EaXJlY3Rpb25Nb2RlS2luZBIw",
            "CgZEaXJSZXYYBCABKAsyIC5yZWd1bGF0b3Jtb2R1bGUuRGlyZWN0aW9uYWxB",
            "VENDEiYKBkRpclRoZBgFIAEoCzIWLmNvbW1vbm1vZHVsZS5QaGFzZUFQQxIl",
            "CgVQYXJPcBgGIAEoCzIWLmNvbW1vbm1vZHVsZS5QaGFzZVNQQxIpCglyYW1w",
            "UmF0ZXMYByABKAsyFi5jb21tb25tb2R1bGUuUmFtcFJhdGUSLwoFc3RhdGUY",
            "CCABKAsyIC5jb21tb25tb2R1bGUuT3B0aW9uYWxfU3RhdGVLaW5kEiYKBlRh",
            "cE9wTBgJIAEoCzIWLmNvbW1vbm1vZHVsZS5QaGFzZVNQQxImCgZUYXBPcFIY",
            "CiABKAsyFi5jb21tb25tb2R1bGUuUGhhc2VTUEMSKAoIVm9sTG10SGkYCyAB",
            "KAsyFi5jb21tb25tb2R1bGUuUGhhc2VBUEMSKAoIVm9sTG10TG8YDCABKAsy",
            "Fi5jb21tb25tb2R1bGUuUGhhc2VBUEMSPAoKVm9sTG10TW9kZRgNIAEoCzIo",
            "LmNvbW1vbm1vZHVsZS5PcHRpb25hbF9Wb2x0TGltaXRNb2RlS2luZCJ+Cg5S",
            "ZWd1bGF0b3JQb2ludBI2Cgdjb250cm9sGAEgASgLMiUucmVndWxhdG9ybW9k",
            "dWxlLlJlZ3VsYXRvckNvbnRyb2xBVENDEjQKCXN0YXJ0VGltZRgIIAEoCzIX",
            "LmNvbW1vbm1vZHVsZS5UaW1lc3RhbXBCCIi1GAGQtRgBIkkKDFJlZ3VsYXRv",
            "ckNTRxI5CgZjcnZQdHMYASADKAsyHy5yZWd1bGF0b3Jtb2R1bGUuUmVndWxh",
            "dG9yUG9pbnRCCIi1GAGQtRgBIlgKHFJlZ3VsYXRvckNvbnRyb2xTY2hlZHVs",
            "ZUZTQ0gSOAoHVmFsRENTRxgBIAEoCzIdLnJlZ3VsYXRvcm1vZHVsZS5SZWd1",
            "bGF0b3JDU0dCCIi1GAGQtRgBIqEBChRSZWd1bGF0b3JDb250cm9sRlNDQxI0",
            "Cgtjb250cm9sRlNDQxgBIAEoCzIZLmNvbW1vbm1vZHVsZS5Db250cm9sRlND",
            "Q0IEgLUYARJTChxyZWd1bGF0b3JDb250cm9sU2NoZWR1bGVGU0NIGAIgASgL",
            "Mi0ucmVndWxhdG9ybW9kdWxlLlJlZ3VsYXRvckNvbnRyb2xTY2hlZHVsZUZT",
            "Q0givQEKEFJlZ3VsYXRvckNvbnRyb2wSNgoMY29udHJvbFZhbHVlGAEgASgL",
            "MhouY29tbW9ubW9kdWxlLkNvbnRyb2xWYWx1ZUIEgLUYARIsCgVjaGVjaxgC",
            "IAEoCzIdLmNvbW1vbm1vZHVsZS5DaGVja0NvbmRpdGlvbnMSQwoUcmVndWxh",
            "dG9yQ29udHJvbEZTQ0MYAyABKAsyJS5yZWd1bGF0b3Jtb2R1bGUuUmVndWxh",
            "dG9yQ29udHJvbEZTQ0MiVwoPUmVndWxhdG9yU3lzdGVtEkQKE2NvbmR1Y3Rp",
            "bmdFcXVpcG1lbnQYASABKAsyIS5jb21tb25tb2R1bGUuQ29uZHVjdGluZ0Vx",
            "dWlwbWVudEIEgLUYASLvAQoXUmVndWxhdG9yQ29udHJvbFByb2ZpbGUSQgoS",
            "Y29udHJvbE1lc3NhZ2VJbmZvGAEgASgLMiAuY29tbW9ubW9kdWxlLkNvbnRy",
            "b2xNZXNzYWdlSW5mb0IEgLUYARJFChByZWd1bGF0b3JDb250cm9sGAIgASgL",
            "MiEucmVndWxhdG9ybW9kdWxlLlJlZ3VsYXRvckNvbnRyb2xCCIi1GAGQtRgB",
            "EkMKD3JlZ3VsYXRvclN5c3RlbRgDIAEoCzIgLnJlZ3VsYXRvcm1vZHVsZS5S",
            "ZWd1bGF0b3JTeXN0ZW1CCIi1GAGQtRgBOgTA8xgBIsUBChhSZWd1bGF0b3JE",
            "aXNjcmV0ZUNvbnRyb2wSNgoMY29udHJvbFZhbHVlGAEgASgLMhouY29tbW9u",
            "bW9kdWxlLkNvbnRyb2xWYWx1ZUIEgLUYARIsCgVjaGVjaxgCIAEoCzIdLmNv",
            "bW1vbm1vZHVsZS5DaGVja0NvbmRpdGlvbnMSQwoUcmVndWxhdG9yQ29udHJv",
            "bEFUQ0MYAyABKAsyJS5yZWd1bGF0b3Jtb2R1bGUuUmVndWxhdG9yQ29udHJv",
            "bEFUQ0MihwIKH1JlZ3VsYXRvckRpc2NyZXRlQ29udHJvbFByb2ZpbGUSQgoS",
            "Y29udHJvbE1lc3NhZ2VJbmZvGAEgASgLMiAuY29tbW9ubW9kdWxlLkNvbnRy",
            "b2xNZXNzYWdlSW5mb0IEgLUYARJVChhyZWd1bGF0b3JEaXNjcmV0ZUNvbnRy",
            "b2wYAiABKAsyKS5yZWd1bGF0b3Jtb2R1bGUuUmVndWxhdG9yRGlzY3JldGVD",
            "b250cm9sQgiItRgBkLUYARJDCg9yZWd1bGF0b3JTeXN0ZW0YAyABKAsyIC5y",
            "ZWd1bGF0b3Jtb2R1bGUuUmVndWxhdG9yU3lzdGVtQgiItRgBkLUYAToEwPMY",
            "ASKsBgobUmVndWxhdG9yRXZlbnRBbmRTdGF0dXNBVENDEiEKBkJuZEN0chgB",
            "IAEoCzIRLmNvbW1vbm1vZHVsZS5BU0cSIQoGQm5kV2lkGAIgASgLMhEuY29t",
            "bW9ubW9kdWxlLkFTRxIoCghCbmRXaWRIaRgDIAEoCzIWLmNvbW1vbm1vZHVs",
            "ZS5QaGFzZVNQUxIoCghCbmRXaWRMbxgEIAEoCzIWLmNvbW1vbm1vZHVsZS5Q",
            "aGFzZVNQUxIpCglEaXJDdGxSZXYYBSABKAsyFi5jb21tb25tb2R1bGUuUGhh",
            "c2VTUFMSJwoHRGlySW5kdBgGIAEoCzIWLmNvbW1vbm1vZHVsZS5QaGFzZVNQ",
            "UxImCgZEaXJSZXYYByABKAsyFi5jb21tb25tb2R1bGUuUGhhc2VTUFMSHwoE",
            "TERDUhgIIAEoCzIRLmNvbW1vbm1vZHVsZS5BU0cSHwoETERDWBgJIAEoCzIR",
            "LmNvbW1vbm1vZHVsZS5BU0cSJgoFUGFyT3AYCiABKAsyFy5jb21tb25tb2R1",
            "bGUuU3RhdHVzU1BTEikKCXJhbXBSYXRlcxgLIAEoCzIWLmNvbW1vbm1vZHVs",
            "ZS5SYW1wUmF0ZRIvCgVzdGF0ZRgMIAEoCzIgLmNvbW1vbm1vZHVsZS5PcHRp",
            "b25hbF9TdGF0ZUtpbmQSKQoIU3REbFRtbXMYDSABKAsyFy5jb21tb25tb2R1",
            "bGUuU3RhdHVzSU5DEikKCFRhcE9wRXJyGA4gASgLMhcuY29tbW9ubW9kdWxl",
            "LlN0YXR1c1NQUxImCgZUYXBQb3MYDyABKAsyFi5jb21tb25tb2R1bGUuUGhh",
            "c2VJTlMSKAoIVm9sTG10SGkYECABKAsyFi5jb21tb25tb2R1bGUuUGhhc2VT",
            "UFMSKAoIVm9sTG10TG8YESABKAsyFi5jb21tb25tb2R1bGUuUGhhc2VTUFMS",
            "JgoGVm9sU3B0GBIgASgLMhYuY29tbW9ubW9kdWxlLlBoYXNlQVBDEjcKFnZv",
            "bHRhZ2VTZXRQb2ludEVuYWJsZWQYEyABKAsyFy5jb21tb25tb2R1bGUuU3Rh",
            "dHVzU1BTIvABChtSZWd1bGF0b3JFdmVudEFuZFN0YXR1c0FOQ1ISVgocbG9n",
            "aWNhbE5vZGVGb3JFdmVudEFuZFN0YXR1cxgBIAEoCzIqLmNvbW1vbm1vZHVs",
            "ZS5Mb2dpY2FsTm9kZUZvckV2ZW50QW5kU3RhdHVzQgSAtRgBEjYKC0R5bmFt",
            "aWNUZXN0GAIgASgLMiEuY29tbW9ubW9kdWxlLkVOU19EeW5hbWljVGVzdEtp",
            "bmQSQQoLUG9pbnRTdGF0dXMYAyABKAsyLC5yZWd1bGF0b3Jtb2R1bGUuUmVn",
            "dWxhdG9yRXZlbnRBbmRTdGF0dXNBVENDIpcBCg5SZWd1bGF0b3JFdmVudBIy",
            "CgpldmVudFZhbHVlGAEgASgLMhguY29tbW9ubW9kdWxlLkV2ZW50VmFsdWVC",
            "BIC1GAESUQobcmVndWxhdG9yRXZlbnRBbmRTdGF0dXNBTkNSGAIgASgLMiwu",
            "cmVndWxhdG9ybW9kdWxlLlJlZ3VsYXRvckV2ZW50QW5kU3RhdHVzQU5DUiLl",
            "AQoVUmVndWxhdG9yRXZlbnRQcm9maWxlEj4KEGV2ZW50TWVzc2FnZUluZm8Y",
            "ASABKAsyHi5jb21tb25tb2R1bGUuRXZlbnRNZXNzYWdlSW5mb0IEgLUYARJB",
            "Cg5yZWd1bGF0b3JFdmVudBgCIAEoCzIfLnJlZ3VsYXRvcm1vZHVsZS5SZWd1",
            "bGF0b3JFdmVudEIIiLUYAZC1GAESQwoPcmVndWxhdG9yU3lzdGVtGAMgASgL",
            "MiAucmVndWxhdG9ybW9kdWxlLlJlZ3VsYXRvclN5c3RlbUIIiLUYAZC1GAE6",
            "BMDzGAEiuwIKEFJlZ3VsYXRvclJlYWRpbmcSYgoiY29uZHVjdGluZ0VxdWlw",
            "bWVudFRlcm1pbmFsUmVhZGluZxgBIAEoCzIwLmNvbW1vbm1vZHVsZS5Db25k",
            "dWN0aW5nRXF1aXBtZW50VGVybWluYWxSZWFkaW5nQgSAtRgBEioKCXBoYXNl",
            "TU1UThgCIAEoCzIXLmNvbW1vbm1vZHVsZS5QaGFzZU1NVE4SLgoLcmVhZGlu",
            "Z01NVFIYAyABKAsyGS5jb21tb25tb2R1bGUuUmVhZGluZ01NVFISLgoLcmVh",
            "ZGluZ01NWFUYBCABKAsyGS5jb21tb25tb2R1bGUuUmVhZGluZ01NWFUSNwoU",
            "c2Vjb25kYXJ5UmVhZGluZ01NWFUYBSABKAsyGS5jb21tb25tb2R1bGUuUmVh",
            "ZGluZ01NWFUi8wEKF1JlZ3VsYXRvclJlYWRpbmdQcm9maWxlEkIKEnJlYWRp",
            "bmdNZXNzYWdlSW5mbxgBIAEoCzIgLmNvbW1vbm1vZHVsZS5SZWFkaW5nTWVz",
            "c2FnZUluZm9CBIC1GAESSQoQcmVndWxhdG9yUmVhZGluZxgCIAMoCzIhLnJl",
            "Z3VsYXRvcm1vZHVsZS5SZWd1bGF0b3JSZWFkaW5nQgyItRgBkLUYAZi1GAIS",
            "QwoPcmVndWxhdG9yU3lzdGVtGAMgASgLMiAucmVndWxhdG9ybW9kdWxlLlJl",
            "Z3VsYXRvclN5c3RlbUIIiLUYAZC1GAE6BMDzGAEimgEKD1JlZ3VsYXRvclN0",
            "YXR1cxI0CgtzdGF0dXNWYWx1ZRgBIAEoCzIZLmNvbW1vbm1vZHVsZS5TdGF0",
            "dXNWYWx1ZUIEgLUYARJRChtyZWd1bGF0b3JFdmVudEFuZFN0YXR1c0FOQ1IY",
            "AiABKAsyLC5yZWd1bGF0b3Jtb2R1bGUuUmVndWxhdG9yRXZlbnRBbmRTdGF0",
            "dXNBTkNSIuoBChZSZWd1bGF0b3JTdGF0dXNQcm9maWxlEkAKEXN0YXR1c01l",
            "c3NhZ2VJbmZvGAEgASgLMh8uY29tbW9ubW9kdWxlLlN0YXR1c01lc3NhZ2VJ",
            "bmZvQgSAtRgBEkMKD3JlZ3VsYXRvclN0YXR1cxgCIAEoCzIgLnJlZ3VsYXRv",
            "cm1vZHVsZS5SZWd1bGF0b3JTdGF0dXNCCIi1GAGQtRgBEkMKD3JlZ3VsYXRv",
            "clN5c3RlbRgDIAEoCzIgLnJlZ3VsYXRvcm1vZHVsZS5SZWd1bGF0b3JTeXN0",
            "ZW1CCIi1GAGQtRgBOgTA8xgBQo0BChdvcGVuZm1iLnJlZ3VsYXRvcm1vZHVs",
            "ZVABWlZnaXRsYWIuY29tL29wZW5mbWIvcHNtL29wcy9wcm90b2J1Zi9nby1v",
            "cGVuZm1iLW9wcy1wcm90b2J1Zi92Mi9vcGVuZm1iL3JlZ3VsYXRvcm1vZHVs",
            "ZaoCF29wZW5mbWIucmVndWxhdG9ybW9kdWxlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::openfmb.UmlReflection.Descriptor, global::openfmb.commonmodule.CommonmoduleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.DirectionalATCC), global::openfmb.regulatormodule.DirectionalATCC.Parser, new[]{ "BndWid", "CtlDlTmms", "LDCR", "LDCX", "VolSpt", "VoltageSetPointEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorControlATCC), global::openfmb.regulatormodule.RegulatorControlATCC.Parser, new[]{ "LogicalNodeForControl", "DirFwd", "DirMode", "DirRev", "DirThd", "ParOp", "RampRates", "State", "TapOpL", "TapOpR", "VolLmtHi", "VolLmtLo", "VolLmtMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorPoint), global::openfmb.regulatormodule.RegulatorPoint.Parser, new[]{ "Control", "StartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorCSG), global::openfmb.regulatormodule.RegulatorCSG.Parser, new[]{ "CrvPts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorControlScheduleFSCH), global::openfmb.regulatormodule.RegulatorControlScheduleFSCH.Parser, new[]{ "ValDCSG" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorControlFSCC), global::openfmb.regulatormodule.RegulatorControlFSCC.Parser, new[]{ "ControlFSCC", "RegulatorControlScheduleFSCH" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorControl), global::openfmb.regulatormodule.RegulatorControl.Parser, new[]{ "ControlValue", "Check", "RegulatorControlFSCC" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorSystem), global::openfmb.regulatormodule.RegulatorSystem.Parser, new[]{ "ConductingEquipment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorControlProfile), global::openfmb.regulatormodule.RegulatorControlProfile.Parser, new[]{ "ControlMessageInfo", "RegulatorControl", "RegulatorSystem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorDiscreteControl), global::openfmb.regulatormodule.RegulatorDiscreteControl.Parser, new[]{ "ControlValue", "Check", "RegulatorControlATCC" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorDiscreteControlProfile), global::openfmb.regulatormodule.RegulatorDiscreteControlProfile.Parser, new[]{ "ControlMessageInfo", "RegulatorDiscreteControl", "RegulatorSystem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorEventAndStatusATCC), global::openfmb.regulatormodule.RegulatorEventAndStatusATCC.Parser, new[]{ "BndCtr", "BndWid", "BndWidHi", "BndWidLo", "DirCtlRev", "DirIndt", "DirRev", "LDCR", "LDCX", "ParOp", "RampRates", "State", "StDlTmms", "TapOpErr", "TapPos", "VolLmtHi", "VolLmtLo", "VolSpt", "VoltageSetPointEnabled" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorEventAndStatusANCR), global::openfmb.regulatormodule.RegulatorEventAndStatusANCR.Parser, new[]{ "LogicalNodeForEventAndStatus", "DynamicTest", "PointStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorEvent), global::openfmb.regulatormodule.RegulatorEvent.Parser, new[]{ "EventValue", "RegulatorEventAndStatusANCR" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorEventProfile), global::openfmb.regulatormodule.RegulatorEventProfile.Parser, new[]{ "EventMessageInfo", "RegulatorEvent", "RegulatorSystem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorReading), global::openfmb.regulatormodule.RegulatorReading.Parser, new[]{ "ConductingEquipmentTerminalReading", "PhaseMMTN", "ReadingMMTR", "ReadingMMXU", "SecondaryReadingMMXU" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorReadingProfile), global::openfmb.regulatormodule.RegulatorReadingProfile.Parser, new[]{ "ReadingMessageInfo", "RegulatorReading", "RegulatorSystem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorStatus), global::openfmb.regulatormodule.RegulatorStatus.Parser, new[]{ "StatusValue", "RegulatorEventAndStatusANCR" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.regulatormodule.RegulatorStatusProfile), global::openfmb.regulatormodule.RegulatorStatusProfile.Parser, new[]{ "StatusMessageInfo", "RegulatorStatus", "RegulatorSystem" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// LN: Automatic tap changer controller   Name: ATCC
  /// </summary>
  public sealed partial class DirectionalATCC : pb::IMessage<DirectionalATCC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DirectionalATCC> _parser = new pb::MessageParser<DirectionalATCC>(() => new DirectionalATCC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DirectionalATCC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirectionalATCC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirectionalATCC(DirectionalATCC other) : this() {
      bndWid_ = other.bndWid_ != null ? other.bndWid_.Clone() : null;
      ctlDlTmms_ = other.ctlDlTmms_ != null ? other.ctlDlTmms_.Clone() : null;
      lDCR_ = other.lDCR_ != null ? other.lDCR_.Clone() : null;
      lDCX_ = other.lDCX_ != null ? other.lDCX_.Clone() : null;
      volSpt_ = other.volSpt_ != null ? other.volSpt_.Clone() : null;
      voltageSetPointEnabled_ = other.voltageSetPointEnabled_ != null ? other.voltageSetPointEnabled_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DirectionalATCC Clone() {
      return new DirectionalATCC(this);
    }

    /// <summary>Field number for the "BndWid" field.</summary>
    public const int BndWidFieldNumber = 1;
    private global::openfmb.commonmodule.PhaseAPC bndWid_;
    /// <summary>
    /// Control (secondary) voltage bandwidth (i.e., range), given either as voltage value or percentage
    /// of the nominal voltage (forward power flow presumed).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC BndWid {
      get { return bndWid_; }
      set {
        bndWid_ = value;
      }
    }

    /// <summary>Field number for the "CtlDlTmms" field.</summary>
    public const int CtlDlTmmsFieldNumber = 2;
    private global::openfmb.commonmodule.PhaseISC ctlDlTmms_;
    /// <summary>
    /// Time to wait before operating, after reaching the control point (forward power flow presumed).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseISC CtlDlTmms {
      get { return ctlDlTmms_; }
      set {
        ctlDlTmms_ = value;
      }
    }

    /// <summary>Field number for the "LDCR" field.</summary>
    public const int LDCRFieldNumber = 3;
    private global::openfmb.commonmodule.PhaseAPC lDCR_;
    /// <summary>
    /// Line drop voltage due to line resistance component (forward power flow presumed) at rated current.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC LDCR {
      get { return lDCR_; }
      set {
        lDCR_ = value;
      }
    }

    /// <summary>Field number for the "LDCX" field.</summary>
    public const int LDCXFieldNumber = 4;
    private global::openfmb.commonmodule.PhaseAPC lDCX_;
    /// <summary>
    /// Line drop voltage due to line reactance component (forward power flow presumed) at rated current.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC LDCX {
      get { return lDCX_; }
      set {
        lDCX_ = value;
      }
    }

    /// <summary>Field number for the "VolSpt" field.</summary>
    public const int VolSptFieldNumber = 5;
    private global::openfmb.commonmodule.PhaseAPC volSpt_;
    /// <summary>
    /// (controllable) Voltage setpoint. Analog value (MX) feeds back the setpoint of the controller.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC VolSpt {
      get { return volSpt_; }
      set {
        volSpt_ = value;
      }
    }

    /// <summary>Field number for the "voltageSetPointEnabled" field.</summary>
    public const int VoltageSetPointEnabledFieldNumber = 6;
    private global::openfmb.commonmodule.PhaseDPC voltageSetPointEnabled_;
    /// <summary>
    /// Enable voltage set point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseDPC VoltageSetPointEnabled {
      get { return voltageSetPointEnabled_; }
      set {
        voltageSetPointEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DirectionalATCC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DirectionalATCC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BndWid, other.BndWid)) return false;
      if (!object.Equals(CtlDlTmms, other.CtlDlTmms)) return false;
      if (!object.Equals(LDCR, other.LDCR)) return false;
      if (!object.Equals(LDCX, other.LDCX)) return false;
      if (!object.Equals(VolSpt, other.VolSpt)) return false;
      if (!object.Equals(VoltageSetPointEnabled, other.VoltageSetPointEnabled)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (bndWid_ != null) hash ^= BndWid.GetHashCode();
      if (ctlDlTmms_ != null) hash ^= CtlDlTmms.GetHashCode();
      if (lDCR_ != null) hash ^= LDCR.GetHashCode();
      if (lDCX_ != null) hash ^= LDCX.GetHashCode();
      if (volSpt_ != null) hash ^= VolSpt.GetHashCode();
      if (voltageSetPointEnabled_ != null) hash ^= VoltageSetPointEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (bndWid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BndWid);
      }
      if (ctlDlTmms_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CtlDlTmms);
      }
      if (lDCR_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LDCR);
      }
      if (lDCX_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LDCX);
      }
      if (volSpt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VolSpt);
      }
      if (voltageSetPointEnabled_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VoltageSetPointEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (bndWid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BndWid);
      }
      if (ctlDlTmms_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CtlDlTmms);
      }
      if (lDCR_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LDCR);
      }
      if (lDCX_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LDCX);
      }
      if (volSpt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(VolSpt);
      }
      if (voltageSetPointEnabled_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(VoltageSetPointEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (bndWid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BndWid);
      }
      if (ctlDlTmms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CtlDlTmms);
      }
      if (lDCR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LDCR);
      }
      if (lDCX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LDCX);
      }
      if (volSpt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VolSpt);
      }
      if (voltageSetPointEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VoltageSetPointEnabled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DirectionalATCC other) {
      if (other == null) {
        return;
      }
      if (other.bndWid_ != null) {
        if (bndWid_ == null) {
          BndWid = new global::openfmb.commonmodule.PhaseAPC();
        }
        BndWid.MergeFrom(other.BndWid);
      }
      if (other.ctlDlTmms_ != null) {
        if (ctlDlTmms_ == null) {
          CtlDlTmms = new global::openfmb.commonmodule.PhaseISC();
        }
        CtlDlTmms.MergeFrom(other.CtlDlTmms);
      }
      if (other.lDCR_ != null) {
        if (lDCR_ == null) {
          LDCR = new global::openfmb.commonmodule.PhaseAPC();
        }
        LDCR.MergeFrom(other.LDCR);
      }
      if (other.lDCX_ != null) {
        if (lDCX_ == null) {
          LDCX = new global::openfmb.commonmodule.PhaseAPC();
        }
        LDCX.MergeFrom(other.LDCX);
      }
      if (other.volSpt_ != null) {
        if (volSpt_ == null) {
          VolSpt = new global::openfmb.commonmodule.PhaseAPC();
        }
        VolSpt.MergeFrom(other.VolSpt);
      }
      if (other.voltageSetPointEnabled_ != null) {
        if (voltageSetPointEnabled_ == null) {
          VoltageSetPointEnabled = new global::openfmb.commonmodule.PhaseDPC();
        }
        VoltageSetPointEnabled.MergeFrom(other.VoltageSetPointEnabled);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bndWid_ == null) {
              BndWid = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(BndWid);
            break;
          }
          case 18: {
            if (ctlDlTmms_ == null) {
              CtlDlTmms = new global::openfmb.commonmodule.PhaseISC();
            }
            input.ReadMessage(CtlDlTmms);
            break;
          }
          case 26: {
            if (lDCR_ == null) {
              LDCR = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(LDCR);
            break;
          }
          case 34: {
            if (lDCX_ == null) {
              LDCX = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(LDCX);
            break;
          }
          case 42: {
            if (volSpt_ == null) {
              VolSpt = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolSpt);
            break;
          }
          case 50: {
            if (voltageSetPointEnabled_ == null) {
              VoltageSetPointEnabled = new global::openfmb.commonmodule.PhaseDPC();
            }
            input.ReadMessage(VoltageSetPointEnabled);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (bndWid_ == null) {
              BndWid = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(BndWid);
            break;
          }
          case 18: {
            if (ctlDlTmms_ == null) {
              CtlDlTmms = new global::openfmb.commonmodule.PhaseISC();
            }
            input.ReadMessage(CtlDlTmms);
            break;
          }
          case 26: {
            if (lDCR_ == null) {
              LDCR = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(LDCR);
            break;
          }
          case 34: {
            if (lDCX_ == null) {
              LDCX = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(LDCX);
            break;
          }
          case 42: {
            if (volSpt_ == null) {
              VolSpt = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolSpt);
            break;
          }
          case 50: {
            if (voltageSetPointEnabled_ == null) {
              VoltageSetPointEnabled = new global::openfmb.commonmodule.PhaseDPC();
            }
            input.ReadMessage(VoltageSetPointEnabled);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LN: Automatic tap changer controller   Name: ATCC
  /// </summary>
  public sealed partial class RegulatorControlATCC : pb::IMessage<RegulatorControlATCC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorControlATCC> _parser = new pb::MessageParser<RegulatorControlATCC>(() => new RegulatorControlATCC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorControlATCC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlATCC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlATCC(RegulatorControlATCC other) : this() {
      logicalNodeForControl_ = other.logicalNodeForControl_ != null ? other.logicalNodeForControl_.Clone() : null;
      dirFwd_ = other.dirFwd_ != null ? other.dirFwd_.Clone() : null;
      dirMode_ = other.dirMode_ != null ? other.dirMode_.Clone() : null;
      dirRev_ = other.dirRev_ != null ? other.dirRev_.Clone() : null;
      dirThd_ = other.dirThd_ != null ? other.dirThd_.Clone() : null;
      parOp_ = other.parOp_ != null ? other.parOp_.Clone() : null;
      rampRates_ = other.rampRates_ != null ? other.rampRates_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      tapOpL_ = other.tapOpL_ != null ? other.tapOpL_.Clone() : null;
      tapOpR_ = other.tapOpR_ != null ? other.tapOpR_.Clone() : null;
      volLmtHi_ = other.volLmtHi_ != null ? other.volLmtHi_.Clone() : null;
      volLmtLo_ = other.volLmtLo_ != null ? other.volLmtLo_.Clone() : null;
      volLmtMode_ = other.volLmtMode_ != null ? other.volLmtMode_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlATCC Clone() {
      return new RegulatorControlATCC(this);
    }

    /// <summary>Field number for the "logicalNodeForControl" field.</summary>
    public const int LogicalNodeForControlFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNodeForControl logicalNodeForControl_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.LogicalNodeForControl LogicalNodeForControl {
      get { return logicalNodeForControl_; }
      set {
        logicalNodeForControl_ = value;
      }
    }

    /// <summary>Field number for the "DirFwd" field.</summary>
    public const int DirFwdFieldNumber = 2;
    private global::openfmb.regulatormodule.DirectionalATCC dirFwd_;
    /// <summary>
    /// Forward voltage regulation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.DirectionalATCC DirFwd {
      get { return dirFwd_; }
      set {
        dirFwd_ = value;
      }
    }

    /// <summary>Field number for the "DirMode" field.</summary>
    public const int DirModeFieldNumber = 3;
    private global::openfmb.commonmodule.Optional_DirectionModeKind dirMode_;
    /// <summary>
    /// The control characteristics for power flow operation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.Optional_DirectionModeKind DirMode {
      get { return dirMode_; }
      set {
        dirMode_ = value;
      }
    }

    /// <summary>Field number for the "DirRev" field.</summary>
    public const int DirRevFieldNumber = 4;
    private global::openfmb.regulatormodule.DirectionalATCC dirRev_;
    /// <summary>
    /// Reverse voltage regulation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.DirectionalATCC DirRev {
      get { return dirRev_; }
      set {
        dirRev_ = value;
      }
    }

    /// <summary>Field number for the "DirThd" field.</summary>
    public const int DirThdFieldNumber = 5;
    private global::openfmb.commonmodule.PhaseAPC dirThd_;
    /// <summary>
    /// This is the percentage used to determine the current threshold at which the control recognizes
    /// current flow direction. Below the threshold, the current flow is considered to be indeterminate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC DirThd {
      get { return dirThd_; }
      set {
        dirThd_ = value;
      }
    }

    /// <summary>Field number for the "ParOp" field.</summary>
    public const int ParOpFieldNumber = 6;
    private global::openfmb.commonmodule.PhaseSPC parOp_;
    /// <summary>
    /// (controllable) If true, transformers operate in parallel, otherwise they operate independently.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPC ParOp {
      get { return parOp_; }
      set {
        parOp_ = value;
      }
    }

    /// <summary>Field number for the "rampRates" field.</summary>
    public const int RampRatesFieldNumber = 7;
    private global::openfmb.commonmodule.RampRate rampRates_;
    /// <summary>
    /// Ramp rates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.RampRate RampRates {
      get { return rampRates_; }
      set {
        rampRates_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 8;
    private global::openfmb.commonmodule.Optional_StateKind state_;
    /// <summary>
    /// (controllable) Tap position change to the specified value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.Optional_StateKind State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "TapOpL" field.</summary>
    public const int TapOpLFieldNumber = 9;
    private global::openfmb.commonmodule.PhaseSPC tapOpL_;
    /// <summary>
    /// If true, tap position shall be lowered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPC TapOpL {
      get { return tapOpL_; }
      set {
        tapOpL_ = value;
      }
    }

    /// <summary>Field number for the "TapOpR" field.</summary>
    public const int TapOpRFieldNumber = 10;
    private global::openfmb.commonmodule.PhaseSPC tapOpR_;
    /// <summary>
    /// If true, tap position shall be raised.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPC TapOpR {
      get { return tapOpR_; }
      set {
        tapOpR_ = value;
      }
    }

    /// <summary>Field number for the "VolLmtHi" field.</summary>
    public const int VolLmtHiFieldNumber = 11;
    private global::openfmb.commonmodule.PhaseAPC volLmtHi_;
    /// <summary>
    /// High voltage limit for Voltage Limiter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC VolLmtHi {
      get { return volLmtHi_; }
      set {
        volLmtHi_ = value;
      }
    }

    /// <summary>Field number for the "VolLmtLo" field.</summary>
    public const int VolLmtLoFieldNumber = 12;
    private global::openfmb.commonmodule.PhaseAPC volLmtLo_;
    /// <summary>
    /// Low voltage limit for Voltage Limiter
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC VolLmtLo {
      get { return volLmtLo_; }
      set {
        volLmtLo_ = value;
      }
    }

    /// <summary>Field number for the "VolLmtMode" field.</summary>
    public const int VolLmtModeFieldNumber = 13;
    private global::openfmb.commonmodule.Optional_VoltLimitModeKind volLmtMode_;
    /// <summary>
    /// Voltage-limiting types
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.Optional_VoltLimitModeKind VolLmtMode {
      get { return volLmtMode_; }
      set {
        volLmtMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorControlATCC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorControlATCC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNodeForControl, other.LogicalNodeForControl)) return false;
      if (!object.Equals(DirFwd, other.DirFwd)) return false;
      if (!object.Equals(DirMode, other.DirMode)) return false;
      if (!object.Equals(DirRev, other.DirRev)) return false;
      if (!object.Equals(DirThd, other.DirThd)) return false;
      if (!object.Equals(ParOp, other.ParOp)) return false;
      if (!object.Equals(RampRates, other.RampRates)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(TapOpL, other.TapOpL)) return false;
      if (!object.Equals(TapOpR, other.TapOpR)) return false;
      if (!object.Equals(VolLmtHi, other.VolLmtHi)) return false;
      if (!object.Equals(VolLmtLo, other.VolLmtLo)) return false;
      if (!object.Equals(VolLmtMode, other.VolLmtMode)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNodeForControl_ != null) hash ^= LogicalNodeForControl.GetHashCode();
      if (dirFwd_ != null) hash ^= DirFwd.GetHashCode();
      if (dirMode_ != null) hash ^= DirMode.GetHashCode();
      if (dirRev_ != null) hash ^= DirRev.GetHashCode();
      if (dirThd_ != null) hash ^= DirThd.GetHashCode();
      if (parOp_ != null) hash ^= ParOp.GetHashCode();
      if (rampRates_ != null) hash ^= RampRates.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (tapOpL_ != null) hash ^= TapOpL.GetHashCode();
      if (tapOpR_ != null) hash ^= TapOpR.GetHashCode();
      if (volLmtHi_ != null) hash ^= VolLmtHi.GetHashCode();
      if (volLmtLo_ != null) hash ^= VolLmtLo.GetHashCode();
      if (volLmtMode_ != null) hash ^= VolLmtMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNodeForControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForControl);
      }
      if (dirFwd_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DirFwd);
      }
      if (dirMode_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DirMode);
      }
      if (dirRev_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DirRev);
      }
      if (dirThd_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DirThd);
      }
      if (parOp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParOp);
      }
      if (rampRates_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RampRates);
      }
      if (state_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(State);
      }
      if (tapOpL_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TapOpL);
      }
      if (tapOpR_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TapOpR);
      }
      if (volLmtHi_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(VolLmtHi);
      }
      if (volLmtLo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(VolLmtLo);
      }
      if (volLmtMode_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VolLmtMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNodeForControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForControl);
      }
      if (dirFwd_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DirFwd);
      }
      if (dirMode_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DirMode);
      }
      if (dirRev_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DirRev);
      }
      if (dirThd_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DirThd);
      }
      if (parOp_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParOp);
      }
      if (rampRates_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(RampRates);
      }
      if (state_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(State);
      }
      if (tapOpL_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TapOpL);
      }
      if (tapOpR_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(TapOpR);
      }
      if (volLmtHi_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(VolLmtHi);
      }
      if (volLmtLo_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(VolLmtLo);
      }
      if (volLmtMode_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(VolLmtMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logicalNodeForControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNodeForControl);
      }
      if (dirFwd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirFwd);
      }
      if (dirMode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirMode);
      }
      if (dirRev_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirRev);
      }
      if (dirThd_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirThd);
      }
      if (parOp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParOp);
      }
      if (rampRates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RampRates);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (tapOpL_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TapOpL);
      }
      if (tapOpR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TapOpR);
      }
      if (volLmtHi_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VolLmtHi);
      }
      if (volLmtLo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VolLmtLo);
      }
      if (volLmtMode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VolLmtMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorControlATCC other) {
      if (other == null) {
        return;
      }
      if (other.logicalNodeForControl_ != null) {
        if (logicalNodeForControl_ == null) {
          LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
        }
        LogicalNodeForControl.MergeFrom(other.LogicalNodeForControl);
      }
      if (other.dirFwd_ != null) {
        if (dirFwd_ == null) {
          DirFwd = new global::openfmb.regulatormodule.DirectionalATCC();
        }
        DirFwd.MergeFrom(other.DirFwd);
      }
      if (other.dirMode_ != null) {
        if (dirMode_ == null) {
          DirMode = new global::openfmb.commonmodule.Optional_DirectionModeKind();
        }
        DirMode.MergeFrom(other.DirMode);
      }
      if (other.dirRev_ != null) {
        if (dirRev_ == null) {
          DirRev = new global::openfmb.regulatormodule.DirectionalATCC();
        }
        DirRev.MergeFrom(other.DirRev);
      }
      if (other.dirThd_ != null) {
        if (dirThd_ == null) {
          DirThd = new global::openfmb.commonmodule.PhaseAPC();
        }
        DirThd.MergeFrom(other.DirThd);
      }
      if (other.parOp_ != null) {
        if (parOp_ == null) {
          ParOp = new global::openfmb.commonmodule.PhaseSPC();
        }
        ParOp.MergeFrom(other.ParOp);
      }
      if (other.rampRates_ != null) {
        if (rampRates_ == null) {
          RampRates = new global::openfmb.commonmodule.RampRate();
        }
        RampRates.MergeFrom(other.RampRates);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::openfmb.commonmodule.Optional_StateKind();
        }
        State.MergeFrom(other.State);
      }
      if (other.tapOpL_ != null) {
        if (tapOpL_ == null) {
          TapOpL = new global::openfmb.commonmodule.PhaseSPC();
        }
        TapOpL.MergeFrom(other.TapOpL);
      }
      if (other.tapOpR_ != null) {
        if (tapOpR_ == null) {
          TapOpR = new global::openfmb.commonmodule.PhaseSPC();
        }
        TapOpR.MergeFrom(other.TapOpR);
      }
      if (other.volLmtHi_ != null) {
        if (volLmtHi_ == null) {
          VolLmtHi = new global::openfmb.commonmodule.PhaseAPC();
        }
        VolLmtHi.MergeFrom(other.VolLmtHi);
      }
      if (other.volLmtLo_ != null) {
        if (volLmtLo_ == null) {
          VolLmtLo = new global::openfmb.commonmodule.PhaseAPC();
        }
        VolLmtLo.MergeFrom(other.VolLmtLo);
      }
      if (other.volLmtMode_ != null) {
        if (volLmtMode_ == null) {
          VolLmtMode = new global::openfmb.commonmodule.Optional_VoltLimitModeKind();
        }
        VolLmtMode.MergeFrom(other.VolLmtMode);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNodeForControl_ == null) {
              LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
            }
            input.ReadMessage(LogicalNodeForControl);
            break;
          }
          case 18: {
            if (dirFwd_ == null) {
              DirFwd = new global::openfmb.regulatormodule.DirectionalATCC();
            }
            input.ReadMessage(DirFwd);
            break;
          }
          case 26: {
            if (dirMode_ == null) {
              DirMode = new global::openfmb.commonmodule.Optional_DirectionModeKind();
            }
            input.ReadMessage(DirMode);
            break;
          }
          case 34: {
            if (dirRev_ == null) {
              DirRev = new global::openfmb.regulatormodule.DirectionalATCC();
            }
            input.ReadMessage(DirRev);
            break;
          }
          case 42: {
            if (dirThd_ == null) {
              DirThd = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(DirThd);
            break;
          }
          case 50: {
            if (parOp_ == null) {
              ParOp = new global::openfmb.commonmodule.PhaseSPC();
            }
            input.ReadMessage(ParOp);
            break;
          }
          case 58: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 66: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
          case 74: {
            if (tapOpL_ == null) {
              TapOpL = new global::openfmb.commonmodule.PhaseSPC();
            }
            input.ReadMessage(TapOpL);
            break;
          }
          case 82: {
            if (tapOpR_ == null) {
              TapOpR = new global::openfmb.commonmodule.PhaseSPC();
            }
            input.ReadMessage(TapOpR);
            break;
          }
          case 90: {
            if (volLmtHi_ == null) {
              VolLmtHi = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolLmtHi);
            break;
          }
          case 98: {
            if (volLmtLo_ == null) {
              VolLmtLo = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolLmtLo);
            break;
          }
          case 106: {
            if (volLmtMode_ == null) {
              VolLmtMode = new global::openfmb.commonmodule.Optional_VoltLimitModeKind();
            }
            input.ReadMessage(VolLmtMode);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNodeForControl_ == null) {
              LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
            }
            input.ReadMessage(LogicalNodeForControl);
            break;
          }
          case 18: {
            if (dirFwd_ == null) {
              DirFwd = new global::openfmb.regulatormodule.DirectionalATCC();
            }
            input.ReadMessage(DirFwd);
            break;
          }
          case 26: {
            if (dirMode_ == null) {
              DirMode = new global::openfmb.commonmodule.Optional_DirectionModeKind();
            }
            input.ReadMessage(DirMode);
            break;
          }
          case 34: {
            if (dirRev_ == null) {
              DirRev = new global::openfmb.regulatormodule.DirectionalATCC();
            }
            input.ReadMessage(DirRev);
            break;
          }
          case 42: {
            if (dirThd_ == null) {
              DirThd = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(DirThd);
            break;
          }
          case 50: {
            if (parOp_ == null) {
              ParOp = new global::openfmb.commonmodule.PhaseSPC();
            }
            input.ReadMessage(ParOp);
            break;
          }
          case 58: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 66: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
          case 74: {
            if (tapOpL_ == null) {
              TapOpL = new global::openfmb.commonmodule.PhaseSPC();
            }
            input.ReadMessage(TapOpL);
            break;
          }
          case 82: {
            if (tapOpR_ == null) {
              TapOpR = new global::openfmb.commonmodule.PhaseSPC();
            }
            input.ReadMessage(TapOpR);
            break;
          }
          case 90: {
            if (volLmtHi_ == null) {
              VolLmtHi = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolLmtHi);
            break;
          }
          case 98: {
            if (volLmtLo_ == null) {
              VolLmtLo = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolLmtLo);
            break;
          }
          case 106: {
            if (volLmtMode_ == null) {
              VolLmtMode = new global::openfmb.commonmodule.Optional_VoltLimitModeKind();
            }
            input.ReadMessage(VolLmtMode);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Point definition (Point)
  /// </summary>
  public sealed partial class RegulatorPoint : pb::IMessage<RegulatorPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorPoint> _parser = new pb::MessageParser<RegulatorPoint>(() => new RegulatorPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorPoint(RegulatorPoint other) : this() {
      control_ = other.control_ != null ? other.control_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorPoint Clone() {
      return new RegulatorPoint(this);
    }

    /// <summary>Field number for the "control" field.</summary>
    public const int ControlFieldNumber = 1;
    private global::openfmb.regulatormodule.RegulatorControlATCC control_;
    /// <summary>
    /// Regulator control
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorControlATCC Control {
      get { return control_; }
      set {
        control_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 8;
    private global::openfmb.commonmodule.Timestamp startTime_;
    /// <summary>
    /// Start time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.Timestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Control, other.Control)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (control_ != null) hash ^= Control.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (control_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Control);
      }
      if (startTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (control_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Control);
      }
      if (startTime_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (control_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Control);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorPoint other) {
      if (other == null) {
        return;
      }
      if (other.control_ != null) {
        if (control_ == null) {
          Control = new global::openfmb.regulatormodule.RegulatorControlATCC();
        }
        Control.MergeFrom(other.Control);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::openfmb.commonmodule.Timestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (control_ == null) {
              Control = new global::openfmb.regulatormodule.RegulatorControlATCC();
            }
            input.ReadMessage(Control);
            break;
          }
          case 66: {
            if (startTime_ == null) {
              StartTime = new global::openfmb.commonmodule.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (control_ == null) {
              Control = new global::openfmb.regulatormodule.RegulatorControlATCC();
            }
            input.ReadMessage(Control);
            break;
          }
          case 66: {
            if (startTime_ == null) {
              StartTime = new global::openfmb.commonmodule.Timestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Curve shape setting (FC=SP) (CSG_SP)
  /// </summary>
  public sealed partial class RegulatorCSG : pb::IMessage<RegulatorCSG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorCSG> _parser = new pb::MessageParser<RegulatorCSG>(() => new RegulatorCSG());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorCSG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorCSG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorCSG(RegulatorCSG other) : this() {
      crvPts_ = other.crvPts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorCSG Clone() {
      return new RegulatorCSG(this);
    }

    /// <summary>Field number for the "crvPts" field.</summary>
    public const int CrvPtsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::openfmb.regulatormodule.RegulatorPoint> _repeated_crvPts_codec
        = pb::FieldCodec.ForMessage(10, global::openfmb.regulatormodule.RegulatorPoint.Parser);
    private readonly pbc::RepeatedField<global::openfmb.regulatormodule.RegulatorPoint> crvPts_ = new pbc::RepeatedField<global::openfmb.regulatormodule.RegulatorPoint>();
    /// <summary>
    /// The array with the points specifying a curve shape.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::openfmb.regulatormodule.RegulatorPoint> CrvPts {
      get { return crvPts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorCSG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorCSG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!crvPts_.Equals(other.crvPts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= crvPts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      crvPts_.WriteTo(output, _repeated_crvPts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      crvPts_.WriteTo(ref output, _repeated_crvPts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += crvPts_.CalculateSize(_repeated_crvPts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorCSG other) {
      if (other == null) {
        return;
      }
      crvPts_.Add(other.crvPts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            crvPts_.AddEntriesFrom(input, _repeated_crvPts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            crvPts_.AddEntriesFrom(ref input, _repeated_crvPts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
  /// </summary>
  public sealed partial class RegulatorControlScheduleFSCH : pb::IMessage<RegulatorControlScheduleFSCH>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorControlScheduleFSCH> _parser = new pb::MessageParser<RegulatorControlScheduleFSCH>(() => new RegulatorControlScheduleFSCH());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorControlScheduleFSCH> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlScheduleFSCH() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlScheduleFSCH(RegulatorControlScheduleFSCH other) : this() {
      valDCSG_ = other.valDCSG_ != null ? other.valDCSG_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlScheduleFSCH Clone() {
      return new RegulatorControlScheduleFSCH(this);
    }

    /// <summary>Field number for the "ValDCSG" field.</summary>
    public const int ValDCSGFieldNumber = 1;
    private global::openfmb.regulatormodule.RegulatorCSG valDCSG_;
    /// <summary>
    /// Discrete value in RegulatorCSG type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorCSG ValDCSG {
      get { return valDCSG_; }
      set {
        valDCSG_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorControlScheduleFSCH);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorControlScheduleFSCH other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ValDCSG, other.ValDCSG)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (valDCSG_ != null) hash ^= ValDCSG.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (valDCSG_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ValDCSG);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (valDCSG_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ValDCSG);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (valDCSG_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValDCSG);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorControlScheduleFSCH other) {
      if (other == null) {
        return;
      }
      if (other.valDCSG_ != null) {
        if (valDCSG_ == null) {
          ValDCSG = new global::openfmb.regulatormodule.RegulatorCSG();
        }
        ValDCSG.MergeFrom(other.ValDCSG);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (valDCSG_ == null) {
              ValDCSG = new global::openfmb.regulatormodule.RegulatorCSG();
            }
            input.ReadMessage(ValDCSG);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (valDCSG_ == null) {
              ValDCSG = new global::openfmb.regulatormodule.RegulatorCSG();
            }
            input.ReadMessage(ValDCSG);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Using 61850 FSCC for regulator control
  /// </summary>
  public sealed partial class RegulatorControlFSCC : pb::IMessage<RegulatorControlFSCC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorControlFSCC> _parser = new pb::MessageParser<RegulatorControlFSCC>(() => new RegulatorControlFSCC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorControlFSCC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlFSCC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlFSCC(RegulatorControlFSCC other) : this() {
      controlFSCC_ = other.controlFSCC_ != null ? other.controlFSCC_.Clone() : null;
      regulatorControlScheduleFSCH_ = other.regulatorControlScheduleFSCH_ != null ? other.regulatorControlScheduleFSCH_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlFSCC Clone() {
      return new RegulatorControlFSCC(this);
    }

    /// <summary>Field number for the "controlFSCC" field.</summary>
    public const int ControlFSCCFieldNumber = 1;
    private global::openfmb.commonmodule.ControlFSCC controlFSCC_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlFSCC ControlFSCC {
      get { return controlFSCC_; }
      set {
        controlFSCC_ = value;
      }
    }

    /// <summary>Field number for the "regulatorControlScheduleFSCH" field.</summary>
    public const int RegulatorControlScheduleFSCHFieldNumber = 2;
    private global::openfmb.regulatormodule.RegulatorControlScheduleFSCH regulatorControlScheduleFSCH_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorControlScheduleFSCH RegulatorControlScheduleFSCH {
      get { return regulatorControlScheduleFSCH_; }
      set {
        regulatorControlScheduleFSCH_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorControlFSCC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorControlFSCC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlFSCC, other.ControlFSCC)) return false;
      if (!object.Equals(RegulatorControlScheduleFSCH, other.RegulatorControlScheduleFSCH)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (controlFSCC_ != null) hash ^= ControlFSCC.GetHashCode();
      if (regulatorControlScheduleFSCH_ != null) hash ^= RegulatorControlScheduleFSCH.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlFSCC_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlFSCC);
      }
      if (regulatorControlScheduleFSCH_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorControlScheduleFSCH);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlFSCC_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlFSCC);
      }
      if (regulatorControlScheduleFSCH_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorControlScheduleFSCH);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (controlFSCC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlFSCC);
      }
      if (regulatorControlScheduleFSCH_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorControlScheduleFSCH);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorControlFSCC other) {
      if (other == null) {
        return;
      }
      if (other.controlFSCC_ != null) {
        if (controlFSCC_ == null) {
          ControlFSCC = new global::openfmb.commonmodule.ControlFSCC();
        }
        ControlFSCC.MergeFrom(other.ControlFSCC);
      }
      if (other.regulatorControlScheduleFSCH_ != null) {
        if (regulatorControlScheduleFSCH_ == null) {
          RegulatorControlScheduleFSCH = new global::openfmb.regulatormodule.RegulatorControlScheduleFSCH();
        }
        RegulatorControlScheduleFSCH.MergeFrom(other.RegulatorControlScheduleFSCH);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlFSCC_ == null) {
              ControlFSCC = new global::openfmb.commonmodule.ControlFSCC();
            }
            input.ReadMessage(ControlFSCC);
            break;
          }
          case 18: {
            if (regulatorControlScheduleFSCH_ == null) {
              RegulatorControlScheduleFSCH = new global::openfmb.regulatormodule.RegulatorControlScheduleFSCH();
            }
            input.ReadMessage(RegulatorControlScheduleFSCH);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlFSCC_ == null) {
              ControlFSCC = new global::openfmb.commonmodule.ControlFSCC();
            }
            input.ReadMessage(ControlFSCC);
            break;
          }
          case 18: {
            if (regulatorControlScheduleFSCH_ == null) {
              RegulatorControlScheduleFSCH = new global::openfmb.regulatormodule.RegulatorControlScheduleFSCH();
            }
            input.ReadMessage(RegulatorControlScheduleFSCH);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator control
  /// </summary>
  public sealed partial class RegulatorControl : pb::IMessage<RegulatorControl>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorControl> _parser = new pb::MessageParser<RegulatorControl>(() => new RegulatorControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControl(RegulatorControl other) : this() {
      controlValue_ = other.controlValue_ != null ? other.controlValue_.Clone() : null;
      check_ = other.check_ != null ? other.check_.Clone() : null;
      regulatorControlFSCC_ = other.regulatorControlFSCC_ != null ? other.regulatorControlFSCC_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControl Clone() {
      return new RegulatorControl(this);
    }

    /// <summary>Field number for the "controlValue" field.</summary>
    public const int ControlValueFieldNumber = 1;
    private global::openfmb.commonmodule.ControlValue controlValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlValue ControlValue {
      get { return controlValue_; }
      set {
        controlValue_ = value;
      }
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 2;
    private global::openfmb.commonmodule.CheckConditions check_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.CheckConditions Check {
      get { return check_; }
      set {
        check_ = value;
      }
    }

    /// <summary>Field number for the "regulatorControlFSCC" field.</summary>
    public const int RegulatorControlFSCCFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorControlFSCC regulatorControlFSCC_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorControlFSCC RegulatorControlFSCC {
      get { return regulatorControlFSCC_; }
      set {
        regulatorControlFSCC_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlValue, other.ControlValue)) return false;
      if (!object.Equals(Check, other.Check)) return false;
      if (!object.Equals(RegulatorControlFSCC, other.RegulatorControlFSCC)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (controlValue_ != null) hash ^= ControlValue.GetHashCode();
      if (check_ != null) hash ^= Check.GetHashCode();
      if (regulatorControlFSCC_ != null) hash ^= RegulatorControlFSCC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (regulatorControlFSCC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorControlFSCC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (regulatorControlFSCC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorControlFSCC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (controlValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlValue);
      }
      if (check_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Check);
      }
      if (regulatorControlFSCC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorControlFSCC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorControl other) {
      if (other == null) {
        return;
      }
      if (other.controlValue_ != null) {
        if (controlValue_ == null) {
          ControlValue = new global::openfmb.commonmodule.ControlValue();
        }
        ControlValue.MergeFrom(other.ControlValue);
      }
      if (other.check_ != null) {
        if (check_ == null) {
          Check = new global::openfmb.commonmodule.CheckConditions();
        }
        Check.MergeFrom(other.Check);
      }
      if (other.regulatorControlFSCC_ != null) {
        if (regulatorControlFSCC_ == null) {
          RegulatorControlFSCC = new global::openfmb.regulatormodule.RegulatorControlFSCC();
        }
        RegulatorControlFSCC.MergeFrom(other.RegulatorControlFSCC);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (regulatorControlFSCC_ == null) {
              RegulatorControlFSCC = new global::openfmb.regulatormodule.RegulatorControlFSCC();
            }
            input.ReadMessage(RegulatorControlFSCC);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (regulatorControlFSCC_ == null) {
              RegulatorControlFSCC = new global::openfmb.regulatormodule.RegulatorControlFSCC();
            }
            input.ReadMessage(RegulatorControlFSCC);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Pole-mounted fault interrupter with built-in phase and ground relays, current transformer (CT),
  /// and supplemental controls.
  /// </summary>
  public sealed partial class RegulatorSystem : pb::IMessage<RegulatorSystem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorSystem> _parser = new pb::MessageParser<RegulatorSystem>(() => new RegulatorSystem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorSystem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorSystem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorSystem(RegulatorSystem other) : this() {
      conductingEquipment_ = other.conductingEquipment_ != null ? other.conductingEquipment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorSystem Clone() {
      return new RegulatorSystem(this);
    }

    /// <summary>Field number for the "conductingEquipment" field.</summary>
    public const int ConductingEquipmentFieldNumber = 1;
    private global::openfmb.commonmodule.ConductingEquipment conductingEquipment_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ConductingEquipment ConductingEquipment {
      get { return conductingEquipment_; }
      set {
        conductingEquipment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorSystem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorSystem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConductingEquipment, other.ConductingEquipment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (conductingEquipment_ != null) hash ^= ConductingEquipment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (conductingEquipment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (conductingEquipment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (conductingEquipment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConductingEquipment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorSystem other) {
      if (other == null) {
        return;
      }
      if (other.conductingEquipment_ != null) {
        if (conductingEquipment_ == null) {
          ConductingEquipment = new global::openfmb.commonmodule.ConductingEquipment();
        }
        ConductingEquipment.MergeFrom(other.ConductingEquipment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (conductingEquipment_ == null) {
              ConductingEquipment = new global::openfmb.commonmodule.ConductingEquipment();
            }
            input.ReadMessage(ConductingEquipment);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (conductingEquipment_ == null) {
              ConductingEquipment = new global::openfmb.commonmodule.ConductingEquipment();
            }
            input.ReadMessage(ConductingEquipment);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator control profile.  Instructs an end device (or an end device group) to perform a
  /// specified action.
  /// </summary>
  public sealed partial class RegulatorControlProfile : pb::IMessage<RegulatorControlProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorControlProfile> _parser = new pb::MessageParser<RegulatorControlProfile>(() => new RegulatorControlProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorControlProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlProfile(RegulatorControlProfile other) : this() {
      controlMessageInfo_ = other.controlMessageInfo_ != null ? other.controlMessageInfo_.Clone() : null;
      regulatorControl_ = other.regulatorControl_ != null ? other.regulatorControl_.Clone() : null;
      regulatorSystem_ = other.regulatorSystem_ != null ? other.regulatorSystem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorControlProfile Clone() {
      return new RegulatorControlProfile(this);
    }

    /// <summary>Field number for the "controlMessageInfo" field.</summary>
    public const int ControlMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ControlMessageInfo controlMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlMessageInfo ControlMessageInfo {
      get { return controlMessageInfo_; }
      set {
        controlMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "regulatorControl" field.</summary>
    public const int RegulatorControlFieldNumber = 2;
    private global::openfmb.regulatormodule.RegulatorControl regulatorControl_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorControl RegulatorControl {
      get { return regulatorControl_; }
      set {
        regulatorControl_ = value;
      }
    }

    /// <summary>Field number for the "regulatorSystem" field.</summary>
    public const int RegulatorSystemFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorSystem regulatorSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorSystem RegulatorSystem {
      get { return regulatorSystem_; }
      set {
        regulatorSystem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorControlProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorControlProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlMessageInfo, other.ControlMessageInfo)) return false;
      if (!object.Equals(RegulatorControl, other.RegulatorControl)) return false;
      if (!object.Equals(RegulatorSystem, other.RegulatorSystem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (controlMessageInfo_ != null) hash ^= ControlMessageInfo.GetHashCode();
      if (regulatorControl_ != null) hash ^= RegulatorControl.GetHashCode();
      if (regulatorSystem_ != null) hash ^= RegulatorSystem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (regulatorControl_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorControl);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (regulatorControl_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorControl);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (controlMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlMessageInfo);
      }
      if (regulatorControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorControl);
      }
      if (regulatorSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorSystem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorControlProfile other) {
      if (other == null) {
        return;
      }
      if (other.controlMessageInfo_ != null) {
        if (controlMessageInfo_ == null) {
          ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
        }
        ControlMessageInfo.MergeFrom(other.ControlMessageInfo);
      }
      if (other.regulatorControl_ != null) {
        if (regulatorControl_ == null) {
          RegulatorControl = new global::openfmb.regulatormodule.RegulatorControl();
        }
        RegulatorControl.MergeFrom(other.RegulatorControl);
      }
      if (other.regulatorSystem_ != null) {
        if (regulatorSystem_ == null) {
          RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
        }
        RegulatorSystem.MergeFrom(other.RegulatorSystem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (regulatorControl_ == null) {
              RegulatorControl = new global::openfmb.regulatormodule.RegulatorControl();
            }
            input.ReadMessage(RegulatorControl);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (regulatorControl_ == null) {
              RegulatorControl = new global::openfmb.regulatormodule.RegulatorControl();
            }
            input.ReadMessage(RegulatorControl);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator control
  /// </summary>
  public sealed partial class RegulatorDiscreteControl : pb::IMessage<RegulatorDiscreteControl>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorDiscreteControl> _parser = new pb::MessageParser<RegulatorDiscreteControl>(() => new RegulatorDiscreteControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorDiscreteControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorDiscreteControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorDiscreteControl(RegulatorDiscreteControl other) : this() {
      controlValue_ = other.controlValue_ != null ? other.controlValue_.Clone() : null;
      check_ = other.check_ != null ? other.check_.Clone() : null;
      regulatorControlATCC_ = other.regulatorControlATCC_ != null ? other.regulatorControlATCC_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorDiscreteControl Clone() {
      return new RegulatorDiscreteControl(this);
    }

    /// <summary>Field number for the "controlValue" field.</summary>
    public const int ControlValueFieldNumber = 1;
    private global::openfmb.commonmodule.ControlValue controlValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlValue ControlValue {
      get { return controlValue_; }
      set {
        controlValue_ = value;
      }
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 2;
    private global::openfmb.commonmodule.CheckConditions check_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.CheckConditions Check {
      get { return check_; }
      set {
        check_ = value;
      }
    }

    /// <summary>Field number for the "regulatorControlATCC" field.</summary>
    public const int RegulatorControlATCCFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorControlATCC regulatorControlATCC_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorControlATCC RegulatorControlATCC {
      get { return regulatorControlATCC_; }
      set {
        regulatorControlATCC_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorDiscreteControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorDiscreteControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlValue, other.ControlValue)) return false;
      if (!object.Equals(Check, other.Check)) return false;
      if (!object.Equals(RegulatorControlATCC, other.RegulatorControlATCC)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (controlValue_ != null) hash ^= ControlValue.GetHashCode();
      if (check_ != null) hash ^= Check.GetHashCode();
      if (regulatorControlATCC_ != null) hash ^= RegulatorControlATCC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (regulatorControlATCC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorControlATCC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (regulatorControlATCC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorControlATCC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (controlValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlValue);
      }
      if (check_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Check);
      }
      if (regulatorControlATCC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorControlATCC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorDiscreteControl other) {
      if (other == null) {
        return;
      }
      if (other.controlValue_ != null) {
        if (controlValue_ == null) {
          ControlValue = new global::openfmb.commonmodule.ControlValue();
        }
        ControlValue.MergeFrom(other.ControlValue);
      }
      if (other.check_ != null) {
        if (check_ == null) {
          Check = new global::openfmb.commonmodule.CheckConditions();
        }
        Check.MergeFrom(other.Check);
      }
      if (other.regulatorControlATCC_ != null) {
        if (regulatorControlATCC_ == null) {
          RegulatorControlATCC = new global::openfmb.regulatormodule.RegulatorControlATCC();
        }
        RegulatorControlATCC.MergeFrom(other.RegulatorControlATCC);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (regulatorControlATCC_ == null) {
              RegulatorControlATCC = new global::openfmb.regulatormodule.RegulatorControlATCC();
            }
            input.ReadMessage(RegulatorControlATCC);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (regulatorControlATCC_ == null) {
              RegulatorControlATCC = new global::openfmb.regulatormodule.RegulatorControlATCC();
            }
            input.ReadMessage(RegulatorControlATCC);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator control profile.  Instructs an end device (or an end device group) to perform a
  /// specified action.
  /// </summary>
  public sealed partial class RegulatorDiscreteControlProfile : pb::IMessage<RegulatorDiscreteControlProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorDiscreteControlProfile> _parser = new pb::MessageParser<RegulatorDiscreteControlProfile>(() => new RegulatorDiscreteControlProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorDiscreteControlProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorDiscreteControlProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorDiscreteControlProfile(RegulatorDiscreteControlProfile other) : this() {
      controlMessageInfo_ = other.controlMessageInfo_ != null ? other.controlMessageInfo_.Clone() : null;
      regulatorDiscreteControl_ = other.regulatorDiscreteControl_ != null ? other.regulatorDiscreteControl_.Clone() : null;
      regulatorSystem_ = other.regulatorSystem_ != null ? other.regulatorSystem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorDiscreteControlProfile Clone() {
      return new RegulatorDiscreteControlProfile(this);
    }

    /// <summary>Field number for the "controlMessageInfo" field.</summary>
    public const int ControlMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ControlMessageInfo controlMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlMessageInfo ControlMessageInfo {
      get { return controlMessageInfo_; }
      set {
        controlMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "regulatorDiscreteControl" field.</summary>
    public const int RegulatorDiscreteControlFieldNumber = 2;
    private global::openfmb.regulatormodule.RegulatorDiscreteControl regulatorDiscreteControl_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorDiscreteControl RegulatorDiscreteControl {
      get { return regulatorDiscreteControl_; }
      set {
        regulatorDiscreteControl_ = value;
      }
    }

    /// <summary>Field number for the "regulatorSystem" field.</summary>
    public const int RegulatorSystemFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorSystem regulatorSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorSystem RegulatorSystem {
      get { return regulatorSystem_; }
      set {
        regulatorSystem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorDiscreteControlProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorDiscreteControlProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlMessageInfo, other.ControlMessageInfo)) return false;
      if (!object.Equals(RegulatorDiscreteControl, other.RegulatorDiscreteControl)) return false;
      if (!object.Equals(RegulatorSystem, other.RegulatorSystem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (controlMessageInfo_ != null) hash ^= ControlMessageInfo.GetHashCode();
      if (regulatorDiscreteControl_ != null) hash ^= RegulatorDiscreteControl.GetHashCode();
      if (regulatorSystem_ != null) hash ^= RegulatorSystem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (regulatorDiscreteControl_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorDiscreteControl);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (regulatorDiscreteControl_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorDiscreteControl);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (controlMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlMessageInfo);
      }
      if (regulatorDiscreteControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorDiscreteControl);
      }
      if (regulatorSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorSystem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorDiscreteControlProfile other) {
      if (other == null) {
        return;
      }
      if (other.controlMessageInfo_ != null) {
        if (controlMessageInfo_ == null) {
          ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
        }
        ControlMessageInfo.MergeFrom(other.ControlMessageInfo);
      }
      if (other.regulatorDiscreteControl_ != null) {
        if (regulatorDiscreteControl_ == null) {
          RegulatorDiscreteControl = new global::openfmb.regulatormodule.RegulatorDiscreteControl();
        }
        RegulatorDiscreteControl.MergeFrom(other.RegulatorDiscreteControl);
      }
      if (other.regulatorSystem_ != null) {
        if (regulatorSystem_ == null) {
          RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
        }
        RegulatorSystem.MergeFrom(other.RegulatorSystem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (regulatorDiscreteControl_ == null) {
              RegulatorDiscreteControl = new global::openfmb.regulatormodule.RegulatorDiscreteControl();
            }
            input.ReadMessage(RegulatorDiscreteControl);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (regulatorDiscreteControl_ == null) {
              RegulatorDiscreteControl = new global::openfmb.regulatormodule.RegulatorDiscreteControl();
            }
            input.ReadMessage(RegulatorDiscreteControl);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// LN: Automatic tap changer controller   Name: ATCC
  /// </summary>
  public sealed partial class RegulatorEventAndStatusATCC : pb::IMessage<RegulatorEventAndStatusATCC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorEventAndStatusATCC> _parser = new pb::MessageParser<RegulatorEventAndStatusATCC>(() => new RegulatorEventAndStatusATCC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorEventAndStatusATCC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventAndStatusATCC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventAndStatusATCC(RegulatorEventAndStatusATCC other) : this() {
      bndCtr_ = other.bndCtr_ != null ? other.bndCtr_.Clone() : null;
      bndWid_ = other.bndWid_ != null ? other.bndWid_.Clone() : null;
      bndWidHi_ = other.bndWidHi_ != null ? other.bndWidHi_.Clone() : null;
      bndWidLo_ = other.bndWidLo_ != null ? other.bndWidLo_.Clone() : null;
      dirCtlRev_ = other.dirCtlRev_ != null ? other.dirCtlRev_.Clone() : null;
      dirIndt_ = other.dirIndt_ != null ? other.dirIndt_.Clone() : null;
      dirRev_ = other.dirRev_ != null ? other.dirRev_.Clone() : null;
      lDCR_ = other.lDCR_ != null ? other.lDCR_.Clone() : null;
      lDCX_ = other.lDCX_ != null ? other.lDCX_.Clone() : null;
      parOp_ = other.parOp_ != null ? other.parOp_.Clone() : null;
      rampRates_ = other.rampRates_ != null ? other.rampRates_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      stDlTmms_ = other.stDlTmms_ != null ? other.stDlTmms_.Clone() : null;
      tapOpErr_ = other.tapOpErr_ != null ? other.tapOpErr_.Clone() : null;
      tapPos_ = other.tapPos_ != null ? other.tapPos_.Clone() : null;
      volLmtHi_ = other.volLmtHi_ != null ? other.volLmtHi_.Clone() : null;
      volLmtLo_ = other.volLmtLo_ != null ? other.volLmtLo_.Clone() : null;
      volSpt_ = other.volSpt_ != null ? other.volSpt_.Clone() : null;
      voltageSetPointEnabled_ = other.voltageSetPointEnabled_ != null ? other.voltageSetPointEnabled_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventAndStatusATCC Clone() {
      return new RegulatorEventAndStatusATCC(this);
    }

    /// <summary>Field number for the "BndCtr" field.</summary>
    public const int BndCtrFieldNumber = 1;
    private global::openfmb.commonmodule.ASG bndCtr_;
    /// <summary>
    /// Centre of voltage control bandwidth (forward power flow presumed).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ASG BndCtr {
      get { return bndCtr_; }
      set {
        bndCtr_ = value;
      }
    }

    /// <summary>Field number for the "BndWid" field.</summary>
    public const int BndWidFieldNumber = 2;
    private global::openfmb.commonmodule.ASG bndWid_;
    /// <summary>
    /// Control (secondary) voltage bandwidth (i.e., range), given either as voltage value or percentage
    /// of the nominal voltage (forward power flow presumed).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ASG BndWid {
      get { return bndWid_; }
      set {
        bndWid_ = value;
      }
    }

    /// <summary>Field number for the "BndWidHi" field.</summary>
    public const int BndWidHiFieldNumber = 3;
    private global::openfmb.commonmodule.PhaseSPS bndWidHi_;
    /// <summary>
    /// Compensated Voltage Secondary compared with set point plus or minus Bandwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS BndWidHi {
      get { return bndWidHi_; }
      set {
        bndWidHi_ = value;
      }
    }

    /// <summary>Field number for the "BndWidLo" field.</summary>
    public const int BndWidLoFieldNumber = 4;
    private global::openfmb.commonmodule.PhaseSPS bndWidLo_;
    /// <summary>
    /// Compensated Voltage Secondary compared with set point plus or minus Bandwidth
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS BndWidLo {
      get { return bndWidLo_; }
      set {
        bndWidLo_ = value;
      }
    }

    /// <summary>Field number for the "DirCtlRev" field.</summary>
    public const int DirCtlRevFieldNumber = 5;
    private global::openfmb.commonmodule.PhaseSPS dirCtlRev_;
    /// <summary>
    /// Current Power Direction is the direction that regulator is regulating.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS DirCtlRev {
      get { return dirCtlRev_; }
      set {
        dirCtlRev_ = value;
      }
    }

    /// <summary>Field number for the "DirIndt" field.</summary>
    public const int DirIndtFieldNumber = 6;
    private global::openfmb.commonmodule.PhaseSPS dirIndt_;
    /// <summary>
    /// True if direction is indeterminate.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS DirIndt {
      get { return dirIndt_; }
      set {
        dirIndt_ = value;
      }
    }

    /// <summary>Field number for the "DirRev" field.</summary>
    public const int DirRevFieldNumber = 7;
    private global::openfmb.commonmodule.PhaseSPS dirRev_;
    /// <summary>
    /// True if the current direction is the same as the System Direction
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS DirRev {
      get { return dirRev_; }
      set {
        dirRev_ = value;
      }
    }

    /// <summary>Field number for the "LDCR" field.</summary>
    public const int LDCRFieldNumber = 8;
    private global::openfmb.commonmodule.ASG lDCR_;
    /// <summary>
    /// Line drop voltage due to line resistance component (forward power flow presumed) at rated current.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ASG LDCR {
      get { return lDCR_; }
      set {
        lDCR_ = value;
      }
    }

    /// <summary>Field number for the "LDCX" field.</summary>
    public const int LDCXFieldNumber = 9;
    private global::openfmb.commonmodule.ASG lDCX_;
    /// <summary>
    /// Line drop voltage due to line reactance component (forward power flow presumed) at rated current.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ASG LDCX {
      get { return lDCX_; }
      set {
        lDCX_ = value;
      }
    }

    /// <summary>Field number for the "ParOp" field.</summary>
    public const int ParOpFieldNumber = 10;
    private global::openfmb.commonmodule.StatusSPS parOp_;
    /// <summary>
    /// (controllable) If true, transformers operate in parallel, otherwise they operate independently.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusSPS ParOp {
      get { return parOp_; }
      set {
        parOp_ = value;
      }
    }

    /// <summary>Field number for the "rampRates" field.</summary>
    public const int RampRatesFieldNumber = 11;
    private global::openfmb.commonmodule.RampRate rampRates_;
    /// <summary>
    /// Ramp rates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.RampRate RampRates {
      get { return rampRates_; }
      set {
        rampRates_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 12;
    private global::openfmb.commonmodule.Optional_StateKind state_;
    /// <summary>
    /// State
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.Optional_StateKind State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "StDlTmms" field.</summary>
    public const int StDlTmmsFieldNumber = 13;
    private global::openfmb.commonmodule.StatusINC stDlTmms_;
    /// <summary>
    /// OpenFMB extension:  Status for the time to wait before operating (CtrlDlTmms)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusINC StDlTmms {
      get { return stDlTmms_; }
      set {
        stDlTmms_ = value;
      }
    }

    /// <summary>Field number for the "TapOpErr" field.</summary>
    public const int TapOpErrFieldNumber = 14;
    private global::openfmb.commonmodule.StatusSPS tapOpErr_;
    /// <summary>
    /// If true, there was an error in tap position change, or in tap indication (for instance, wrong
    /// Binary Coded Decimal (BCD) code).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusSPS TapOpErr {
      get { return tapOpErr_; }
      set {
        tapOpErr_ = value;
      }
    }

    /// <summary>Field number for the "TapPos" field.</summary>
    public const int TapPosFieldNumber = 15;
    private global::openfmb.commonmodule.PhaseINS tapPos_;
    /// <summary>
    /// (controllable) Tap position change to the specified value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseINS TapPos {
      get { return tapPos_; }
      set {
        tapPos_ = value;
      }
    }

    /// <summary>Field number for the "VolLmtHi" field.</summary>
    public const int VolLmtHiFieldNumber = 16;
    private global::openfmb.commonmodule.PhaseSPS volLmtHi_;
    /// <summary>
    /// Load Voltage Secondary compared with VolLmtHi
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS VolLmtHi {
      get { return volLmtHi_; }
      set {
        volLmtHi_ = value;
      }
    }

    /// <summary>Field number for the "VolLmtLo" field.</summary>
    public const int VolLmtLoFieldNumber = 17;
    private global::openfmb.commonmodule.PhaseSPS volLmtLo_;
    /// <summary>
    /// Load Voltage Secondary compared with VolLmtLo
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS VolLmtLo {
      get { return volLmtLo_; }
      set {
        volLmtLo_ = value;
      }
    }

    /// <summary>Field number for the "VolSpt" field.</summary>
    public const int VolSptFieldNumber = 18;
    private global::openfmb.commonmodule.PhaseAPC volSpt_;
    /// <summary>
    /// (controllable) Voltage setpoint. Analog value (MX) feeds back the setpoint of the controller.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseAPC VolSpt {
      get { return volSpt_; }
      set {
        volSpt_ = value;
      }
    }

    /// <summary>Field number for the "voltageSetPointEnabled" field.</summary>
    public const int VoltageSetPointEnabledFieldNumber = 19;
    private global::openfmb.commonmodule.StatusSPS voltageSetPointEnabled_;
    /// <summary>
    /// Voltage set point status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusSPS VoltageSetPointEnabled {
      get { return voltageSetPointEnabled_; }
      set {
        voltageSetPointEnabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorEventAndStatusATCC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorEventAndStatusATCC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(BndCtr, other.BndCtr)) return false;
      if (!object.Equals(BndWid, other.BndWid)) return false;
      if (!object.Equals(BndWidHi, other.BndWidHi)) return false;
      if (!object.Equals(BndWidLo, other.BndWidLo)) return false;
      if (!object.Equals(DirCtlRev, other.DirCtlRev)) return false;
      if (!object.Equals(DirIndt, other.DirIndt)) return false;
      if (!object.Equals(DirRev, other.DirRev)) return false;
      if (!object.Equals(LDCR, other.LDCR)) return false;
      if (!object.Equals(LDCX, other.LDCX)) return false;
      if (!object.Equals(ParOp, other.ParOp)) return false;
      if (!object.Equals(RampRates, other.RampRates)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(StDlTmms, other.StDlTmms)) return false;
      if (!object.Equals(TapOpErr, other.TapOpErr)) return false;
      if (!object.Equals(TapPos, other.TapPos)) return false;
      if (!object.Equals(VolLmtHi, other.VolLmtHi)) return false;
      if (!object.Equals(VolLmtLo, other.VolLmtLo)) return false;
      if (!object.Equals(VolSpt, other.VolSpt)) return false;
      if (!object.Equals(VoltageSetPointEnabled, other.VoltageSetPointEnabled)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (bndCtr_ != null) hash ^= BndCtr.GetHashCode();
      if (bndWid_ != null) hash ^= BndWid.GetHashCode();
      if (bndWidHi_ != null) hash ^= BndWidHi.GetHashCode();
      if (bndWidLo_ != null) hash ^= BndWidLo.GetHashCode();
      if (dirCtlRev_ != null) hash ^= DirCtlRev.GetHashCode();
      if (dirIndt_ != null) hash ^= DirIndt.GetHashCode();
      if (dirRev_ != null) hash ^= DirRev.GetHashCode();
      if (lDCR_ != null) hash ^= LDCR.GetHashCode();
      if (lDCX_ != null) hash ^= LDCX.GetHashCode();
      if (parOp_ != null) hash ^= ParOp.GetHashCode();
      if (rampRates_ != null) hash ^= RampRates.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (stDlTmms_ != null) hash ^= StDlTmms.GetHashCode();
      if (tapOpErr_ != null) hash ^= TapOpErr.GetHashCode();
      if (tapPos_ != null) hash ^= TapPos.GetHashCode();
      if (volLmtHi_ != null) hash ^= VolLmtHi.GetHashCode();
      if (volLmtLo_ != null) hash ^= VolLmtLo.GetHashCode();
      if (volSpt_ != null) hash ^= VolSpt.GetHashCode();
      if (voltageSetPointEnabled_ != null) hash ^= VoltageSetPointEnabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (bndCtr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BndCtr);
      }
      if (bndWid_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BndWid);
      }
      if (bndWidHi_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BndWidHi);
      }
      if (bndWidLo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BndWidLo);
      }
      if (dirCtlRev_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DirCtlRev);
      }
      if (dirIndt_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DirIndt);
      }
      if (dirRev_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DirRev);
      }
      if (lDCR_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LDCR);
      }
      if (lDCX_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LDCX);
      }
      if (parOp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ParOp);
      }
      if (rampRates_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RampRates);
      }
      if (state_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(State);
      }
      if (stDlTmms_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StDlTmms);
      }
      if (tapOpErr_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(TapOpErr);
      }
      if (tapPos_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(TapPos);
      }
      if (volLmtHi_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(VolLmtHi);
      }
      if (volLmtLo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(VolLmtLo);
      }
      if (volSpt_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(VolSpt);
      }
      if (voltageSetPointEnabled_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(VoltageSetPointEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (bndCtr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(BndCtr);
      }
      if (bndWid_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BndWid);
      }
      if (bndWidHi_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(BndWidHi);
      }
      if (bndWidLo_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(BndWidLo);
      }
      if (dirCtlRev_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DirCtlRev);
      }
      if (dirIndt_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DirIndt);
      }
      if (dirRev_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(DirRev);
      }
      if (lDCR_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LDCR);
      }
      if (lDCX_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LDCX);
      }
      if (parOp_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(ParOp);
      }
      if (rampRates_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(RampRates);
      }
      if (state_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(State);
      }
      if (stDlTmms_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(StDlTmms);
      }
      if (tapOpErr_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(TapOpErr);
      }
      if (tapPos_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(TapPos);
      }
      if (volLmtHi_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(VolLmtHi);
      }
      if (volLmtLo_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(VolLmtLo);
      }
      if (volSpt_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(VolSpt);
      }
      if (voltageSetPointEnabled_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(VoltageSetPointEnabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (bndCtr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BndCtr);
      }
      if (bndWid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BndWid);
      }
      if (bndWidHi_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BndWidHi);
      }
      if (bndWidLo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BndWidLo);
      }
      if (dirCtlRev_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirCtlRev);
      }
      if (dirIndt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirIndt);
      }
      if (dirRev_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DirRev);
      }
      if (lDCR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LDCR);
      }
      if (lDCX_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LDCX);
      }
      if (parOp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParOp);
      }
      if (rampRates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RampRates);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (stDlTmms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StDlTmms);
      }
      if (tapOpErr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TapOpErr);
      }
      if (tapPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TapPos);
      }
      if (volLmtHi_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VolLmtHi);
      }
      if (volLmtLo_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VolLmtLo);
      }
      if (volSpt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VolSpt);
      }
      if (voltageSetPointEnabled_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(VoltageSetPointEnabled);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorEventAndStatusATCC other) {
      if (other == null) {
        return;
      }
      if (other.bndCtr_ != null) {
        if (bndCtr_ == null) {
          BndCtr = new global::openfmb.commonmodule.ASG();
        }
        BndCtr.MergeFrom(other.BndCtr);
      }
      if (other.bndWid_ != null) {
        if (bndWid_ == null) {
          BndWid = new global::openfmb.commonmodule.ASG();
        }
        BndWid.MergeFrom(other.BndWid);
      }
      if (other.bndWidHi_ != null) {
        if (bndWidHi_ == null) {
          BndWidHi = new global::openfmb.commonmodule.PhaseSPS();
        }
        BndWidHi.MergeFrom(other.BndWidHi);
      }
      if (other.bndWidLo_ != null) {
        if (bndWidLo_ == null) {
          BndWidLo = new global::openfmb.commonmodule.PhaseSPS();
        }
        BndWidLo.MergeFrom(other.BndWidLo);
      }
      if (other.dirCtlRev_ != null) {
        if (dirCtlRev_ == null) {
          DirCtlRev = new global::openfmb.commonmodule.PhaseSPS();
        }
        DirCtlRev.MergeFrom(other.DirCtlRev);
      }
      if (other.dirIndt_ != null) {
        if (dirIndt_ == null) {
          DirIndt = new global::openfmb.commonmodule.PhaseSPS();
        }
        DirIndt.MergeFrom(other.DirIndt);
      }
      if (other.dirRev_ != null) {
        if (dirRev_ == null) {
          DirRev = new global::openfmb.commonmodule.PhaseSPS();
        }
        DirRev.MergeFrom(other.DirRev);
      }
      if (other.lDCR_ != null) {
        if (lDCR_ == null) {
          LDCR = new global::openfmb.commonmodule.ASG();
        }
        LDCR.MergeFrom(other.LDCR);
      }
      if (other.lDCX_ != null) {
        if (lDCX_ == null) {
          LDCX = new global::openfmb.commonmodule.ASG();
        }
        LDCX.MergeFrom(other.LDCX);
      }
      if (other.parOp_ != null) {
        if (parOp_ == null) {
          ParOp = new global::openfmb.commonmodule.StatusSPS();
        }
        ParOp.MergeFrom(other.ParOp);
      }
      if (other.rampRates_ != null) {
        if (rampRates_ == null) {
          RampRates = new global::openfmb.commonmodule.RampRate();
        }
        RampRates.MergeFrom(other.RampRates);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::openfmb.commonmodule.Optional_StateKind();
        }
        State.MergeFrom(other.State);
      }
      if (other.stDlTmms_ != null) {
        if (stDlTmms_ == null) {
          StDlTmms = new global::openfmb.commonmodule.StatusINC();
        }
        StDlTmms.MergeFrom(other.StDlTmms);
      }
      if (other.tapOpErr_ != null) {
        if (tapOpErr_ == null) {
          TapOpErr = new global::openfmb.commonmodule.StatusSPS();
        }
        TapOpErr.MergeFrom(other.TapOpErr);
      }
      if (other.tapPos_ != null) {
        if (tapPos_ == null) {
          TapPos = new global::openfmb.commonmodule.PhaseINS();
        }
        TapPos.MergeFrom(other.TapPos);
      }
      if (other.volLmtHi_ != null) {
        if (volLmtHi_ == null) {
          VolLmtHi = new global::openfmb.commonmodule.PhaseSPS();
        }
        VolLmtHi.MergeFrom(other.VolLmtHi);
      }
      if (other.volLmtLo_ != null) {
        if (volLmtLo_ == null) {
          VolLmtLo = new global::openfmb.commonmodule.PhaseSPS();
        }
        VolLmtLo.MergeFrom(other.VolLmtLo);
      }
      if (other.volSpt_ != null) {
        if (volSpt_ == null) {
          VolSpt = new global::openfmb.commonmodule.PhaseAPC();
        }
        VolSpt.MergeFrom(other.VolSpt);
      }
      if (other.voltageSetPointEnabled_ != null) {
        if (voltageSetPointEnabled_ == null) {
          VoltageSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
        }
        VoltageSetPointEnabled.MergeFrom(other.VoltageSetPointEnabled);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bndCtr_ == null) {
              BndCtr = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(BndCtr);
            break;
          }
          case 18: {
            if (bndWid_ == null) {
              BndWid = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(BndWid);
            break;
          }
          case 26: {
            if (bndWidHi_ == null) {
              BndWidHi = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(BndWidHi);
            break;
          }
          case 34: {
            if (bndWidLo_ == null) {
              BndWidLo = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(BndWidLo);
            break;
          }
          case 42: {
            if (dirCtlRev_ == null) {
              DirCtlRev = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(DirCtlRev);
            break;
          }
          case 50: {
            if (dirIndt_ == null) {
              DirIndt = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(DirIndt);
            break;
          }
          case 58: {
            if (dirRev_ == null) {
              DirRev = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(DirRev);
            break;
          }
          case 66: {
            if (lDCR_ == null) {
              LDCR = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(LDCR);
            break;
          }
          case 74: {
            if (lDCX_ == null) {
              LDCX = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(LDCX);
            break;
          }
          case 82: {
            if (parOp_ == null) {
              ParOp = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(ParOp);
            break;
          }
          case 90: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 98: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
          case 106: {
            if (stDlTmms_ == null) {
              StDlTmms = new global::openfmb.commonmodule.StatusINC();
            }
            input.ReadMessage(StDlTmms);
            break;
          }
          case 114: {
            if (tapOpErr_ == null) {
              TapOpErr = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(TapOpErr);
            break;
          }
          case 122: {
            if (tapPos_ == null) {
              TapPos = new global::openfmb.commonmodule.PhaseINS();
            }
            input.ReadMessage(TapPos);
            break;
          }
          case 130: {
            if (volLmtHi_ == null) {
              VolLmtHi = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(VolLmtHi);
            break;
          }
          case 138: {
            if (volLmtLo_ == null) {
              VolLmtLo = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(VolLmtLo);
            break;
          }
          case 146: {
            if (volSpt_ == null) {
              VolSpt = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolSpt);
            break;
          }
          case 154: {
            if (voltageSetPointEnabled_ == null) {
              VoltageSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(VoltageSetPointEnabled);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (bndCtr_ == null) {
              BndCtr = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(BndCtr);
            break;
          }
          case 18: {
            if (bndWid_ == null) {
              BndWid = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(BndWid);
            break;
          }
          case 26: {
            if (bndWidHi_ == null) {
              BndWidHi = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(BndWidHi);
            break;
          }
          case 34: {
            if (bndWidLo_ == null) {
              BndWidLo = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(BndWidLo);
            break;
          }
          case 42: {
            if (dirCtlRev_ == null) {
              DirCtlRev = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(DirCtlRev);
            break;
          }
          case 50: {
            if (dirIndt_ == null) {
              DirIndt = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(DirIndt);
            break;
          }
          case 58: {
            if (dirRev_ == null) {
              DirRev = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(DirRev);
            break;
          }
          case 66: {
            if (lDCR_ == null) {
              LDCR = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(LDCR);
            break;
          }
          case 74: {
            if (lDCX_ == null) {
              LDCX = new global::openfmb.commonmodule.ASG();
            }
            input.ReadMessage(LDCX);
            break;
          }
          case 82: {
            if (parOp_ == null) {
              ParOp = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(ParOp);
            break;
          }
          case 90: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 98: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
          case 106: {
            if (stDlTmms_ == null) {
              StDlTmms = new global::openfmb.commonmodule.StatusINC();
            }
            input.ReadMessage(StDlTmms);
            break;
          }
          case 114: {
            if (tapOpErr_ == null) {
              TapOpErr = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(TapOpErr);
            break;
          }
          case 122: {
            if (tapPos_ == null) {
              TapPos = new global::openfmb.commonmodule.PhaseINS();
            }
            input.ReadMessage(TapPos);
            break;
          }
          case 130: {
            if (volLmtHi_ == null) {
              VolLmtHi = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(VolLmtHi);
            break;
          }
          case 138: {
            if (volLmtLo_ == null) {
              VolLmtLo = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(VolLmtLo);
            break;
          }
          case 146: {
            if (volSpt_ == null) {
              VolSpt = new global::openfmb.commonmodule.PhaseAPC();
            }
            input.ReadMessage(VolSpt);
            break;
          }
          case 154: {
            if (voltageSetPointEnabled_ == null) {
              VoltageSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(VoltageSetPointEnabled);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB 61850 specialization for both RegulatorEventProfile and RegulatorStatusProfile
  /// </summary>
  public sealed partial class RegulatorEventAndStatusANCR : pb::IMessage<RegulatorEventAndStatusANCR>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorEventAndStatusANCR> _parser = new pb::MessageParser<RegulatorEventAndStatusANCR>(() => new RegulatorEventAndStatusANCR());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorEventAndStatusANCR> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventAndStatusANCR() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventAndStatusANCR(RegulatorEventAndStatusANCR other) : this() {
      logicalNodeForEventAndStatus_ = other.logicalNodeForEventAndStatus_ != null ? other.logicalNodeForEventAndStatus_.Clone() : null;
      dynamicTest_ = other.dynamicTest_ != null ? other.dynamicTest_.Clone() : null;
      pointStatus_ = other.pointStatus_ != null ? other.pointStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventAndStatusANCR Clone() {
      return new RegulatorEventAndStatusANCR(this);
    }

    /// <summary>Field number for the "logicalNodeForEventAndStatus" field.</summary>
    public const int LogicalNodeForEventAndStatusFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.LogicalNodeForEventAndStatus LogicalNodeForEventAndStatus {
      get { return logicalNodeForEventAndStatus_; }
      set {
        logicalNodeForEventAndStatus_ = value;
      }
    }

    /// <summary>Field number for the "DynamicTest" field.</summary>
    public const int DynamicTestFieldNumber = 2;
    private global::openfmb.commonmodule.ENS_DynamicTestKind dynamicTest_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ENS_DynamicTestKind DynamicTest {
      get { return dynamicTest_; }
      set {
        dynamicTest_ = value;
      }
    }

    /// <summary>Field number for the "PointStatus" field.</summary>
    public const int PointStatusFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorEventAndStatusATCC pointStatus_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorEventAndStatusATCC PointStatus {
      get { return pointStatus_; }
      set {
        pointStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorEventAndStatusANCR);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorEventAndStatusANCR other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNodeForEventAndStatus, other.LogicalNodeForEventAndStatus)) return false;
      if (!object.Equals(DynamicTest, other.DynamicTest)) return false;
      if (!object.Equals(PointStatus, other.PointStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNodeForEventAndStatus_ != null) hash ^= LogicalNodeForEventAndStatus.GetHashCode();
      if (dynamicTest_ != null) hash ^= DynamicTest.GetHashCode();
      if (pointStatus_ != null) hash ^= PointStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (pointStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PointStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (pointStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PointStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logicalNodeForEventAndStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicTest);
      }
      if (pointStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PointStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorEventAndStatusANCR other) {
      if (other == null) {
        return;
      }
      if (other.logicalNodeForEventAndStatus_ != null) {
        if (logicalNodeForEventAndStatus_ == null) {
          LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
        }
        LogicalNodeForEventAndStatus.MergeFrom(other.LogicalNodeForEventAndStatus);
      }
      if (other.dynamicTest_ != null) {
        if (dynamicTest_ == null) {
          DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
        }
        DynamicTest.MergeFrom(other.DynamicTest);
      }
      if (other.pointStatus_ != null) {
        if (pointStatus_ == null) {
          PointStatus = new global::openfmb.regulatormodule.RegulatorEventAndStatusATCC();
        }
        PointStatus.MergeFrom(other.PointStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 26: {
            if (pointStatus_ == null) {
              PointStatus = new global::openfmb.regulatormodule.RegulatorEventAndStatusATCC();
            }
            input.ReadMessage(PointStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 26: {
            if (pointStatus_ == null) {
              PointStatus = new global::openfmb.regulatormodule.RegulatorEventAndStatusATCC();
            }
            input.ReadMessage(PointStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator event
  /// </summary>
  public sealed partial class RegulatorEvent : pb::IMessage<RegulatorEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorEvent> _parser = new pb::MessageParser<RegulatorEvent>(() => new RegulatorEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEvent(RegulatorEvent other) : this() {
      eventValue_ = other.eventValue_ != null ? other.eventValue_.Clone() : null;
      regulatorEventAndStatusANCR_ = other.regulatorEventAndStatusANCR_ != null ? other.regulatorEventAndStatusANCR_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEvent Clone() {
      return new RegulatorEvent(this);
    }

    /// <summary>Field number for the "eventValue" field.</summary>
    public const int EventValueFieldNumber = 1;
    private global::openfmb.commonmodule.EventValue eventValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.EventValue EventValue {
      get { return eventValue_; }
      set {
        eventValue_ = value;
      }
    }

    /// <summary>Field number for the "regulatorEventAndStatusANCR" field.</summary>
    public const int RegulatorEventAndStatusANCRFieldNumber = 2;
    private global::openfmb.regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorEventAndStatusANCR RegulatorEventAndStatusANCR {
      get { return regulatorEventAndStatusANCR_; }
      set {
        regulatorEventAndStatusANCR_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventValue, other.EventValue)) return false;
      if (!object.Equals(RegulatorEventAndStatusANCR, other.RegulatorEventAndStatusANCR)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (eventValue_ != null) hash ^= EventValue.GetHashCode();
      if (regulatorEventAndStatusANCR_ != null) hash ^= RegulatorEventAndStatusANCR.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventValue);
      }
      if (regulatorEventAndStatusANCR_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorEventAndStatusANCR);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventValue);
      }
      if (regulatorEventAndStatusANCR_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorEventAndStatusANCR);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (eventValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventValue);
      }
      if (regulatorEventAndStatusANCR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorEventAndStatusANCR);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorEvent other) {
      if (other == null) {
        return;
      }
      if (other.eventValue_ != null) {
        if (eventValue_ == null) {
          EventValue = new global::openfmb.commonmodule.EventValue();
        }
        EventValue.MergeFrom(other.EventValue);
      }
      if (other.regulatorEventAndStatusANCR_ != null) {
        if (regulatorEventAndStatusANCR_ == null) {
          RegulatorEventAndStatusANCR = new global::openfmb.regulatormodule.RegulatorEventAndStatusANCR();
        }
        RegulatorEventAndStatusANCR.MergeFrom(other.RegulatorEventAndStatusANCR);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventValue_ == null) {
              EventValue = new global::openfmb.commonmodule.EventValue();
            }
            input.ReadMessage(EventValue);
            break;
          }
          case 18: {
            if (regulatorEventAndStatusANCR_ == null) {
              RegulatorEventAndStatusANCR = new global::openfmb.regulatormodule.RegulatorEventAndStatusANCR();
            }
            input.ReadMessage(RegulatorEventAndStatusANCR);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventValue_ == null) {
              EventValue = new global::openfmb.commonmodule.EventValue();
            }
            input.ReadMessage(EventValue);
            break;
          }
          case 18: {
            if (regulatorEventAndStatusANCR_ == null) {
              RegulatorEventAndStatusANCR = new global::openfmb.regulatormodule.RegulatorEventAndStatusANCR();
            }
            input.ReadMessage(RegulatorEventAndStatusANCR);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator event profile
  /// </summary>
  public sealed partial class RegulatorEventProfile : pb::IMessage<RegulatorEventProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorEventProfile> _parser = new pb::MessageParser<RegulatorEventProfile>(() => new RegulatorEventProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorEventProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventProfile(RegulatorEventProfile other) : this() {
      eventMessageInfo_ = other.eventMessageInfo_ != null ? other.eventMessageInfo_.Clone() : null;
      regulatorEvent_ = other.regulatorEvent_ != null ? other.regulatorEvent_.Clone() : null;
      regulatorSystem_ = other.regulatorSystem_ != null ? other.regulatorSystem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorEventProfile Clone() {
      return new RegulatorEventProfile(this);
    }

    /// <summary>Field number for the "eventMessageInfo" field.</summary>
    public const int EventMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.EventMessageInfo eventMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.EventMessageInfo EventMessageInfo {
      get { return eventMessageInfo_; }
      set {
        eventMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "regulatorEvent" field.</summary>
    public const int RegulatorEventFieldNumber = 2;
    private global::openfmb.regulatormodule.RegulatorEvent regulatorEvent_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorEvent RegulatorEvent {
      get { return regulatorEvent_; }
      set {
        regulatorEvent_ = value;
      }
    }

    /// <summary>Field number for the "regulatorSystem" field.</summary>
    public const int RegulatorSystemFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorSystem regulatorSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorSystem RegulatorSystem {
      get { return regulatorSystem_; }
      set {
        regulatorSystem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorEventProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorEventProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventMessageInfo, other.EventMessageInfo)) return false;
      if (!object.Equals(RegulatorEvent, other.RegulatorEvent)) return false;
      if (!object.Equals(RegulatorSystem, other.RegulatorSystem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (eventMessageInfo_ != null) hash ^= EventMessageInfo.GetHashCode();
      if (regulatorEvent_ != null) hash ^= RegulatorEvent.GetHashCode();
      if (regulatorSystem_ != null) hash ^= RegulatorSystem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (regulatorEvent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorEvent);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (regulatorEvent_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorEvent);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (eventMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventMessageInfo);
      }
      if (regulatorEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorEvent);
      }
      if (regulatorSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorSystem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorEventProfile other) {
      if (other == null) {
        return;
      }
      if (other.eventMessageInfo_ != null) {
        if (eventMessageInfo_ == null) {
          EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
        }
        EventMessageInfo.MergeFrom(other.EventMessageInfo);
      }
      if (other.regulatorEvent_ != null) {
        if (regulatorEvent_ == null) {
          RegulatorEvent = new global::openfmb.regulatormodule.RegulatorEvent();
        }
        RegulatorEvent.MergeFrom(other.RegulatorEvent);
      }
      if (other.regulatorSystem_ != null) {
        if (regulatorSystem_ == null) {
          RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
        }
        RegulatorSystem.MergeFrom(other.RegulatorSystem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (regulatorEvent_ == null) {
              RegulatorEvent = new global::openfmb.regulatormodule.RegulatorEvent();
            }
            input.ReadMessage(RegulatorEvent);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (regulatorEvent_ == null) {
              RegulatorEvent = new global::openfmb.regulatormodule.RegulatorEvent();
            }
            input.ReadMessage(RegulatorEvent);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator reading value
  /// </summary>
  public sealed partial class RegulatorReading : pb::IMessage<RegulatorReading>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorReading> _parser = new pb::MessageParser<RegulatorReading>(() => new RegulatorReading());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorReading> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorReading() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorReading(RegulatorReading other) : this() {
      conductingEquipmentTerminalReading_ = other.conductingEquipmentTerminalReading_ != null ? other.conductingEquipmentTerminalReading_.Clone() : null;
      phaseMMTN_ = other.phaseMMTN_ != null ? other.phaseMMTN_.Clone() : null;
      readingMMTR_ = other.readingMMTR_ != null ? other.readingMMTR_.Clone() : null;
      readingMMXU_ = other.readingMMXU_ != null ? other.readingMMXU_.Clone() : null;
      secondaryReadingMMXU_ = other.secondaryReadingMMXU_ != null ? other.secondaryReadingMMXU_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorReading Clone() {
      return new RegulatorReading(this);
    }

    /// <summary>Field number for the "conductingEquipmentTerminalReading" field.</summary>
    public const int ConductingEquipmentTerminalReadingFieldNumber = 1;
    private global::openfmb.commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ConductingEquipmentTerminalReading ConductingEquipmentTerminalReading {
      get { return conductingEquipmentTerminalReading_; }
      set {
        conductingEquipmentTerminalReading_ = value;
      }
    }

    /// <summary>Field number for the "phaseMMTN" field.</summary>
    public const int PhaseMMTNFieldNumber = 2;
    private global::openfmb.commonmodule.PhaseMMTN phaseMMTN_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseMMTN PhaseMMTN {
      get { return phaseMMTN_; }
      set {
        phaseMMTN_ = value;
      }
    }

    /// <summary>Field number for the "readingMMTR" field.</summary>
    public const int ReadingMMTRFieldNumber = 3;
    private global::openfmb.commonmodule.ReadingMMTR readingMMTR_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMMTR ReadingMMTR {
      get { return readingMMTR_; }
      set {
        readingMMTR_ = value;
      }
    }

    /// <summary>Field number for the "readingMMXU" field.</summary>
    public const int ReadingMMXUFieldNumber = 4;
    private global::openfmb.commonmodule.ReadingMMXU readingMMXU_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMMXU ReadingMMXU {
      get { return readingMMXU_; }
      set {
        readingMMXU_ = value;
      }
    }

    /// <summary>Field number for the "secondaryReadingMMXU" field.</summary>
    public const int SecondaryReadingMMXUFieldNumber = 5;
    private global::openfmb.commonmodule.ReadingMMXU secondaryReadingMMXU_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMMXU SecondaryReadingMMXU {
      get { return secondaryReadingMMXU_; }
      set {
        secondaryReadingMMXU_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorReading);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorReading other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConductingEquipmentTerminalReading, other.ConductingEquipmentTerminalReading)) return false;
      if (!object.Equals(PhaseMMTN, other.PhaseMMTN)) return false;
      if (!object.Equals(ReadingMMTR, other.ReadingMMTR)) return false;
      if (!object.Equals(ReadingMMXU, other.ReadingMMXU)) return false;
      if (!object.Equals(SecondaryReadingMMXU, other.SecondaryReadingMMXU)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (conductingEquipmentTerminalReading_ != null) hash ^= ConductingEquipmentTerminalReading.GetHashCode();
      if (phaseMMTN_ != null) hash ^= PhaseMMTN.GetHashCode();
      if (readingMMTR_ != null) hash ^= ReadingMMTR.GetHashCode();
      if (readingMMXU_ != null) hash ^= ReadingMMXU.GetHashCode();
      if (secondaryReadingMMXU_ != null) hash ^= SecondaryReadingMMXU.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (conductingEquipmentTerminalReading_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipmentTerminalReading);
      }
      if (phaseMMTN_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadingMMXU);
      }
      if (secondaryReadingMMXU_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SecondaryReadingMMXU);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (conductingEquipmentTerminalReading_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipmentTerminalReading);
      }
      if (phaseMMTN_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadingMMXU);
      }
      if (secondaryReadingMMXU_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SecondaryReadingMMXU);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (conductingEquipmentTerminalReading_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConductingEquipmentTerminalReading);
      }
      if (phaseMMTN_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMMXU);
      }
      if (secondaryReadingMMXU_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SecondaryReadingMMXU);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorReading other) {
      if (other == null) {
        return;
      }
      if (other.conductingEquipmentTerminalReading_ != null) {
        if (conductingEquipmentTerminalReading_ == null) {
          ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
        }
        ConductingEquipmentTerminalReading.MergeFrom(other.ConductingEquipmentTerminalReading);
      }
      if (other.phaseMMTN_ != null) {
        if (phaseMMTN_ == null) {
          PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
        }
        PhaseMMTN.MergeFrom(other.PhaseMMTN);
      }
      if (other.readingMMTR_ != null) {
        if (readingMMTR_ == null) {
          ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
        }
        ReadingMMTR.MergeFrom(other.ReadingMMTR);
      }
      if (other.readingMMXU_ != null) {
        if (readingMMXU_ == null) {
          ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
        }
        ReadingMMXU.MergeFrom(other.ReadingMMXU);
      }
      if (other.secondaryReadingMMXU_ != null) {
        if (secondaryReadingMMXU_ == null) {
          SecondaryReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
        }
        SecondaryReadingMMXU.MergeFrom(other.SecondaryReadingMMXU);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (conductingEquipmentTerminalReading_ == null) {
              ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
            }
            input.ReadMessage(ConductingEquipmentTerminalReading);
            break;
          }
          case 18: {
            if (phaseMMTN_ == null) {
              PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
            }
            input.ReadMessage(PhaseMMTN);
            break;
          }
          case 26: {
            if (readingMMTR_ == null) {
              ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
            }
            input.ReadMessage(ReadingMMTR);
            break;
          }
          case 34: {
            if (readingMMXU_ == null) {
              ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(ReadingMMXU);
            break;
          }
          case 42: {
            if (secondaryReadingMMXU_ == null) {
              SecondaryReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(SecondaryReadingMMXU);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (conductingEquipmentTerminalReading_ == null) {
              ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
            }
            input.ReadMessage(ConductingEquipmentTerminalReading);
            break;
          }
          case 18: {
            if (phaseMMTN_ == null) {
              PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
            }
            input.ReadMessage(PhaseMMTN);
            break;
          }
          case 26: {
            if (readingMMTR_ == null) {
              ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
            }
            input.ReadMessage(ReadingMMTR);
            break;
          }
          case 34: {
            if (readingMMXU_ == null) {
              ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(ReadingMMXU);
            break;
          }
          case 42: {
            if (secondaryReadingMMXU_ == null) {
              SecondaryReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(SecondaryReadingMMXU);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator reading profile
  /// </summary>
  public sealed partial class RegulatorReadingProfile : pb::IMessage<RegulatorReadingProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorReadingProfile> _parser = new pb::MessageParser<RegulatorReadingProfile>(() => new RegulatorReadingProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorReadingProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorReadingProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorReadingProfile(RegulatorReadingProfile other) : this() {
      readingMessageInfo_ = other.readingMessageInfo_ != null ? other.readingMessageInfo_.Clone() : null;
      regulatorReading_ = other.regulatorReading_.Clone();
      regulatorSystem_ = other.regulatorSystem_ != null ? other.regulatorSystem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorReadingProfile Clone() {
      return new RegulatorReadingProfile(this);
    }

    /// <summary>Field number for the "readingMessageInfo" field.</summary>
    public const int ReadingMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ReadingMessageInfo readingMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMessageInfo ReadingMessageInfo {
      get { return readingMessageInfo_; }
      set {
        readingMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "regulatorReading" field.</summary>
    public const int RegulatorReadingFieldNumber = 2;
    private static readonly pb::FieldCodec<global::openfmb.regulatormodule.RegulatorReading> _repeated_regulatorReading_codec
        = pb::FieldCodec.ForMessage(18, global::openfmb.regulatormodule.RegulatorReading.Parser);
    private readonly pbc::RepeatedField<global::openfmb.regulatormodule.RegulatorReading> regulatorReading_ = new pbc::RepeatedField<global::openfmb.regulatormodule.RegulatorReading>();
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::openfmb.regulatormodule.RegulatorReading> RegulatorReading {
      get { return regulatorReading_; }
    }

    /// <summary>Field number for the "regulatorSystem" field.</summary>
    public const int RegulatorSystemFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorSystem regulatorSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorSystem RegulatorSystem {
      get { return regulatorSystem_; }
      set {
        regulatorSystem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorReadingProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorReadingProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReadingMessageInfo, other.ReadingMessageInfo)) return false;
      if(!regulatorReading_.Equals(other.regulatorReading_)) return false;
      if (!object.Equals(RegulatorSystem, other.RegulatorSystem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (readingMessageInfo_ != null) hash ^= ReadingMessageInfo.GetHashCode();
      hash ^= regulatorReading_.GetHashCode();
      if (regulatorSystem_ != null) hash ^= RegulatorSystem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (readingMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadingMessageInfo);
      }
      regulatorReading_.WriteTo(output, _repeated_regulatorReading_codec);
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (readingMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadingMessageInfo);
      }
      regulatorReading_.WriteTo(ref output, _repeated_regulatorReading_codec);
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (readingMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMessageInfo);
      }
      size += regulatorReading_.CalculateSize(_repeated_regulatorReading_codec);
      if (regulatorSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorSystem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorReadingProfile other) {
      if (other == null) {
        return;
      }
      if (other.readingMessageInfo_ != null) {
        if (readingMessageInfo_ == null) {
          ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
        }
        ReadingMessageInfo.MergeFrom(other.ReadingMessageInfo);
      }
      regulatorReading_.Add(other.regulatorReading_);
      if (other.regulatorSystem_ != null) {
        if (regulatorSystem_ == null) {
          RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
        }
        RegulatorSystem.MergeFrom(other.RegulatorSystem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (readingMessageInfo_ == null) {
              ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
            }
            input.ReadMessage(ReadingMessageInfo);
            break;
          }
          case 18: {
            regulatorReading_.AddEntriesFrom(input, _repeated_regulatorReading_codec);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (readingMessageInfo_ == null) {
              ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
            }
            input.ReadMessage(ReadingMessageInfo);
            break;
          }
          case 18: {
            regulatorReading_.AddEntriesFrom(ref input, _repeated_regulatorReading_codec);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator status
  /// </summary>
  public sealed partial class RegulatorStatus : pb::IMessage<RegulatorStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorStatus> _parser = new pb::MessageParser<RegulatorStatus>(() => new RegulatorStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorStatus(RegulatorStatus other) : this() {
      statusValue_ = other.statusValue_ != null ? other.statusValue_.Clone() : null;
      regulatorEventAndStatusANCR_ = other.regulatorEventAndStatusANCR_ != null ? other.regulatorEventAndStatusANCR_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorStatus Clone() {
      return new RegulatorStatus(this);
    }

    /// <summary>Field number for the "statusValue" field.</summary>
    public const int StatusValueFieldNumber = 1;
    private global::openfmb.commonmodule.StatusValue statusValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusValue StatusValue {
      get { return statusValue_; }
      set {
        statusValue_ = value;
      }
    }

    /// <summary>Field number for the "regulatorEventAndStatusANCR" field.</summary>
    public const int RegulatorEventAndStatusANCRFieldNumber = 2;
    private global::openfmb.regulatormodule.RegulatorEventAndStatusANCR regulatorEventAndStatusANCR_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorEventAndStatusANCR RegulatorEventAndStatusANCR {
      get { return regulatorEventAndStatusANCR_; }
      set {
        regulatorEventAndStatusANCR_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusValue, other.StatusValue)) return false;
      if (!object.Equals(RegulatorEventAndStatusANCR, other.RegulatorEventAndStatusANCR)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (statusValue_ != null) hash ^= StatusValue.GetHashCode();
      if (regulatorEventAndStatusANCR_ != null) hash ^= RegulatorEventAndStatusANCR.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusValue);
      }
      if (regulatorEventAndStatusANCR_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorEventAndStatusANCR);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusValue);
      }
      if (regulatorEventAndStatusANCR_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorEventAndStatusANCR);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (statusValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusValue);
      }
      if (regulatorEventAndStatusANCR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorEventAndStatusANCR);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorStatus other) {
      if (other == null) {
        return;
      }
      if (other.statusValue_ != null) {
        if (statusValue_ == null) {
          StatusValue = new global::openfmb.commonmodule.StatusValue();
        }
        StatusValue.MergeFrom(other.StatusValue);
      }
      if (other.regulatorEventAndStatusANCR_ != null) {
        if (regulatorEventAndStatusANCR_ == null) {
          RegulatorEventAndStatusANCR = new global::openfmb.regulatormodule.RegulatorEventAndStatusANCR();
        }
        RegulatorEventAndStatusANCR.MergeFrom(other.RegulatorEventAndStatusANCR);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusValue_ == null) {
              StatusValue = new global::openfmb.commonmodule.StatusValue();
            }
            input.ReadMessage(StatusValue);
            break;
          }
          case 18: {
            if (regulatorEventAndStatusANCR_ == null) {
              RegulatorEventAndStatusANCR = new global::openfmb.regulatormodule.RegulatorEventAndStatusANCR();
            }
            input.ReadMessage(RegulatorEventAndStatusANCR);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusValue_ == null) {
              StatusValue = new global::openfmb.commonmodule.StatusValue();
            }
            input.ReadMessage(StatusValue);
            break;
          }
          case 18: {
            if (regulatorEventAndStatusANCR_ == null) {
              RegulatorEventAndStatusANCR = new global::openfmb.regulatormodule.RegulatorEventAndStatusANCR();
            }
            input.ReadMessage(RegulatorEventAndStatusANCR);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Regulator status profile
  /// </summary>
  public sealed partial class RegulatorStatusProfile : pb::IMessage<RegulatorStatusProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorStatusProfile> _parser = new pb::MessageParser<RegulatorStatusProfile>(() => new RegulatorStatusProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorStatusProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.regulatormodule.RegulatormoduleReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorStatusProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorStatusProfile(RegulatorStatusProfile other) : this() {
      statusMessageInfo_ = other.statusMessageInfo_ != null ? other.statusMessageInfo_.Clone() : null;
      regulatorStatus_ = other.regulatorStatus_ != null ? other.regulatorStatus_.Clone() : null;
      regulatorSystem_ = other.regulatorSystem_ != null ? other.regulatorSystem_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorStatusProfile Clone() {
      return new RegulatorStatusProfile(this);
    }

    /// <summary>Field number for the "statusMessageInfo" field.</summary>
    public const int StatusMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.StatusMessageInfo statusMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusMessageInfo StatusMessageInfo {
      get { return statusMessageInfo_; }
      set {
        statusMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "regulatorStatus" field.</summary>
    public const int RegulatorStatusFieldNumber = 2;
    private global::openfmb.regulatormodule.RegulatorStatus regulatorStatus_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorStatus RegulatorStatus {
      get { return regulatorStatus_; }
      set {
        regulatorStatus_ = value;
      }
    }

    /// <summary>Field number for the "regulatorSystem" field.</summary>
    public const int RegulatorSystemFieldNumber = 3;
    private global::openfmb.regulatormodule.RegulatorSystem regulatorSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.regulatormodule.RegulatorSystem RegulatorSystem {
      get { return regulatorSystem_; }
      set {
        regulatorSystem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorStatusProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorStatusProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusMessageInfo, other.StatusMessageInfo)) return false;
      if (!object.Equals(RegulatorStatus, other.RegulatorStatus)) return false;
      if (!object.Equals(RegulatorSystem, other.RegulatorSystem)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (statusMessageInfo_ != null) hash ^= StatusMessageInfo.GetHashCode();
      if (regulatorStatus_ != null) hash ^= RegulatorStatus.GetHashCode();
      if (regulatorSystem_ != null) hash ^= RegulatorSystem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusMessageInfo);
      }
      if (regulatorStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorStatus);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusMessageInfo);
      }
      if (regulatorStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RegulatorStatus);
      }
      if (regulatorSystem_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RegulatorSystem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (statusMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusMessageInfo);
      }
      if (regulatorStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorStatus);
      }
      if (regulatorSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegulatorSystem);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorStatusProfile other) {
      if (other == null) {
        return;
      }
      if (other.statusMessageInfo_ != null) {
        if (statusMessageInfo_ == null) {
          StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
        }
        StatusMessageInfo.MergeFrom(other.StatusMessageInfo);
      }
      if (other.regulatorStatus_ != null) {
        if (regulatorStatus_ == null) {
          RegulatorStatus = new global::openfmb.regulatormodule.RegulatorStatus();
        }
        RegulatorStatus.MergeFrom(other.RegulatorStatus);
      }
      if (other.regulatorSystem_ != null) {
        if (regulatorSystem_ == null) {
          RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
        }
        RegulatorSystem.MergeFrom(other.RegulatorSystem);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusMessageInfo_ == null) {
              StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
            }
            input.ReadMessage(StatusMessageInfo);
            break;
          }
          case 18: {
            if (regulatorStatus_ == null) {
              RegulatorStatus = new global::openfmb.regulatormodule.RegulatorStatus();
            }
            input.ReadMessage(RegulatorStatus);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusMessageInfo_ == null) {
              StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
            }
            input.ReadMessage(StatusMessageInfo);
            break;
          }
          case 18: {
            if (regulatorStatus_ == null) {
              RegulatorStatus = new global::openfmb.regulatormodule.RegulatorStatus();
            }
            input.ReadMessage(RegulatorStatus);
            break;
          }
          case 26: {
            if (regulatorSystem_ == null) {
              RegulatorSystem = new global::openfmb.regulatormodule.RegulatorSystem();
            }
            input.ReadMessage(RegulatorSystem);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
