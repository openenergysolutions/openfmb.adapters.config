// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: loadmodule/loadmodule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace openfmb.loadmodule {

  /// <summary>Holder for reflection information generated from loadmodule/loadmodule.proto</summary>
  public static partial class LoadmoduleReflection {

    #region Descriptor
    /// <summary>File descriptor for loadmodule/loadmodule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LoadmoduleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chtsb2FkbW9kdWxlL2xvYWRtb2R1bGUucHJvdG8SCmxvYWRtb2R1bGUaCXVt",
            "bC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9jb21t",
            "b25tb2R1bGUvY29tbW9ubW9kdWxlLnByb3RvIsUCCglMb2FkUG9pbnQSKQoJ",
            "cmFtcFJhdGVzGAEgASgLMhYuY29tbW9ubW9kdWxlLlJhbXBSYXRlEjwKGnJl",
            "YWN0aXZlUHdyU2V0UG9pbnRFbmFibGVkGAIgASgLMhguY29tbW9ubW9kdWxl",
            "LkNvbnRyb2xTUEMSOAoWcmVhbFB3clNldFBvaW50RW5hYmxlZBgDIAEoCzIY",
            "LmNvbW1vbm1vZHVsZS5Db250cm9sU1BDEicKBXJlc2V0GAQgASgLMhguY29t",
            "bW9ubW9kdWxlLkNvbnRyb2xTUEMSLwoFc3RhdGUYBSABKAsyIC5jb21tb25t",
            "b2R1bGUuT3B0aW9uYWxfU3RhdGVLaW5kEjsKCXN0YXJ0VGltZRgGIAEoCzIe",
            "LmNvbW1vbm1vZHVsZS5Db250cm9sVGltZXN0YW1wQgiItRgBkLUYASI6CgdM",
            "b2FkQ1NHEi8KBmNydlB0cxgBIAMoCzIVLmxvYWRtb2R1bGUuTG9hZFBvaW50",
            "QgiItRgBkLUYASJJChdMb2FkQ29udHJvbFNjaGVkdWxlRlNDSBIuCgdWYWxE",
            "Q1NHGAEgASgLMhMubG9hZG1vZHVsZS5Mb2FkQ1NHQgiItRgBkLUYASKNAQoP",
            "TG9hZENvbnRyb2xGU0NDEjQKC2NvbnRyb2xGU0NDGAEgASgLMhkuY29tbW9u",
            "bW9kdWxlLkNvbnRyb2xGU0NDQgSAtRgBEkQKF2xvYWRDb250cm9sU2NoZWR1",
            "bGVGU0NIGAIgASgLMiMubG9hZG1vZHVsZS5Mb2FkQ29udHJvbFNjaGVkdWxl",
            "RlNDSCKpAQoLTG9hZENvbnRyb2wSNgoMY29udHJvbFZhbHVlGAEgASgLMhou",
            "Y29tbW9ubW9kdWxlLkNvbnRyb2xWYWx1ZUIEgLUYARIsCgVjaGVjaxgCIAEo",
            "CzIdLmNvbW1vbm1vZHVsZS5DaGVja0NvbmRpdGlvbnMSNAoPbG9hZENvbnRy",
            "b2xGU0NDGAMgASgLMhsubG9hZG1vZHVsZS5Mb2FkQ29udHJvbEZTQ0Mi1gEK",
            "EkxvYWRDb250cm9sUHJvZmlsZRJCChJjb250cm9sTWVzc2FnZUluZm8YASAB",
            "KAsyIC5jb21tb25tb2R1bGUuQ29udHJvbE1lc3NhZ2VJbmZvQgSAtRgBEj4K",
            "DmVuZXJneUNvbnN1bWVyGAIgASgLMhwuY29tbW9ubW9kdWxlLkVuZXJneUNv",
            "bnN1bWVyQgiItRgBkLUYARI2Cgtsb2FkQ29udHJvbBgDIAEoCzIXLmxvYWRt",
            "b2R1bGUuTG9hZENvbnRyb2xCCIi1GAGQtRgBOgTA8xgBIosCCg9Mb2FkUG9p",
            "bnRTdGF0dXMSKQoJcmFtcFJhdGVzGAEgASgLMhYuY29tbW9ubW9kdWxlLlJh",
            "bXBSYXRlEjsKGnJlYWN0aXZlUHdyU2V0UG9pbnRFbmFibGVkGAIgASgLMhcu",
            "Y29tbW9ubW9kdWxlLlN0YXR1c1NQUxI3ChZyZWFsUHdyU2V0UG9pbnRFbmFi",
            "bGVkGAMgASgLMhcuY29tbW9ubW9kdWxlLlN0YXR1c1NQUxImCgVyZXNldBgE",
            "IAEoCzIXLmNvbW1vbm1vZHVsZS5TdGF0dXNTUFMSLwoFc3RhdGUYBSABKAsy",
            "IC5jb21tb25tb2R1bGUuT3B0aW9uYWxfU3RhdGVLaW5kIoQCChZMb2FkRXZl",
            "bnRBbmRTdGF0dXNaR0xEElYKHGxvZ2ljYWxOb2RlRm9yRXZlbnRBbmRTdGF0",
            "dXMYASABKAsyKi5jb21tb25tb2R1bGUuTG9naWNhbE5vZGVGb3JFdmVudEFu",
            "ZFN0YXR1c0IEgLUYARI2CgtEeW5hbWljVGVzdBgCIAEoCzIhLmNvbW1vbm1v",
            "ZHVsZS5FTlNfRHluYW1pY1Rlc3RLaW5kEigKB0VtZ1N0b3AYAyABKAsyFy5j",
            "b21tb25tb2R1bGUuU3RhdHVzU1BTEjAKC1BvaW50U3RhdHVzGAQgASgLMhsu",
            "bG9hZG1vZHVsZS5Mb2FkUG9pbnRTdGF0dXMiWQoNTG9hZEV2ZW50WkdMRBJI",
            "ChZsb2FkRXZlbnRBbmRTdGF0dXNaR0xEGAEgASgLMiIubG9hZG1vZHVsZS5M",
            "b2FkRXZlbnRBbmRTdGF0dXNaR0xEQgSAtRgBInEKCUxvYWRFdmVudBIyCgpl",
            "dmVudFZhbHVlGAEgASgLMhguY29tbW9ubW9kdWxlLkV2ZW50VmFsdWVCBIC1",
            "GAESMAoNbG9hZEV2ZW50WkdMRBgCIAEoCzIZLmxvYWRtb2R1bGUuTG9hZEV2",
            "ZW50WkdMRCLMAQoQTG9hZEV2ZW50UHJvZmlsZRI+ChBldmVudE1lc3NhZ2VJ",
            "bmZvGAEgASgLMh4uY29tbW9ubW9kdWxlLkV2ZW50TWVzc2FnZUluZm9CBIC1",
            "GAESPgoOZW5lcmd5Q29uc3VtZXIYAiABKAsyHC5jb21tb25tb2R1bGUuRW5l",
            "cmd5Q29uc3VtZXJCCIi1GAGQtRgBEjIKCWxvYWRFdmVudBgDIAEoCzIVLmxv",
            "YWRtb2R1bGUuTG9hZEV2ZW50QgiItRgBkLUYAToEwPMYASL9AQoLTG9hZFJl",
            "YWRpbmcSYgoiY29uZHVjdGluZ0VxdWlwbWVudFRlcm1pbmFsUmVhZGluZxgB",
            "IAEoCzIwLmNvbW1vbm1vZHVsZS5Db25kdWN0aW5nRXF1aXBtZW50VGVybWlu",
            "YWxSZWFkaW5nQgSAtRgBEioKCXBoYXNlTU1UThgCIAEoCzIXLmNvbW1vbm1v",
            "ZHVsZS5QaGFzZU1NVE4SLgoLcmVhZGluZ01NVFIYAyABKAsyGS5jb21tb25t",
            "b2R1bGUuUmVhZGluZ01NVFISLgoLcmVhZGluZ01NWFUYBCABKAsyGS5jb21t",
            "b25tb2R1bGUuUmVhZGluZ01NWFUi1gEKEkxvYWRSZWFkaW5nUHJvZmlsZRJC",
            "ChJyZWFkaW5nTWVzc2FnZUluZm8YASABKAsyIC5jb21tb25tb2R1bGUuUmVh",
            "ZGluZ01lc3NhZ2VJbmZvQgSAtRgBEj4KDmVuZXJneUNvbnN1bWVyGAIgASgL",
            "MhwuY29tbW9ubW9kdWxlLkVuZXJneUNvbnN1bWVyQgiItRgBkLUYARI2Cgts",
            "b2FkUmVhZGluZxgDIAEoCzIXLmxvYWRtb2R1bGUuTG9hZFJlYWRpbmdCCIi1",
            "GAGQtRgBOgTA8xgBIloKDkxvYWRTdGF0dXNaR0xEEkgKFmxvYWRFdmVudEFu",
            "ZFN0YXR1c1pHTEQYASABKAsyIi5sb2FkbW9kdWxlLkxvYWRFdmVudEFuZFN0",
            "YXR1c1pHTERCBIC1GAEirAEKCkxvYWRTdGF0dXMSNAoLc3RhdHVzVmFsdWUY",
            "ASABKAsyGS5jb21tb25tb2R1bGUuU3RhdHVzVmFsdWVCBIC1GAESNAoQaXNV",
            "bmNvbnRyb2xsYWJsZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFs",
            "dWUSMgoObG9hZFN0YXR1c1pHTEQYAyABKAsyGi5sb2FkbW9kdWxlLkxvYWRT",
            "dGF0dXNaR0xEItEBChFMb2FkU3RhdHVzUHJvZmlsZRJAChFzdGF0dXNNZXNz",
            "YWdlSW5mbxgBIAEoCzIfLmNvbW1vbm1vZHVsZS5TdGF0dXNNZXNzYWdlSW5m",
            "b0IEgLUYARI+Cg5lbmVyZ3lDb25zdW1lchgCIAEoCzIcLmNvbW1vbm1vZHVs",
            "ZS5FbmVyZ3lDb25zdW1lckIIiLUYAZC1GAESNAoKbG9hZFN0YXR1cxgDIAEo",
            "CzIWLmxvYWRtb2R1bGUuTG9hZFN0YXR1c0IIiLUYAZC1GAE6BMDzGAFCfgoS",
            "b3BlbmZtYi5sb2FkbW9kdWxlUAFaUWdpdGxhYi5jb20vb3BlbmZtYi9wc20v",
            "b3BzL3Byb3RvYnVmL2dvLW9wZW5mbWItb3BzLXByb3RvYnVmL3YyL29wZW5m",
            "bWIvbG9hZG1vZHVsZaoCEm9wZW5mbWIubG9hZG1vZHVsZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::openfmb.UmlReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::openfmb.commonmodule.CommonmoduleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadPoint), global::openfmb.loadmodule.LoadPoint.Parser, new[]{ "RampRates", "ReactivePwrSetPointEnabled", "RealPwrSetPointEnabled", "Reset", "State", "StartTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadCSG), global::openfmb.loadmodule.LoadCSG.Parser, new[]{ "CrvPts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadControlScheduleFSCH), global::openfmb.loadmodule.LoadControlScheduleFSCH.Parser, new[]{ "ValDCSG" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadControlFSCC), global::openfmb.loadmodule.LoadControlFSCC.Parser, new[]{ "ControlFSCC", "LoadControlScheduleFSCH" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadControl), global::openfmb.loadmodule.LoadControl.Parser, new[]{ "ControlValue", "Check", "LoadControlFSCC" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadControlProfile), global::openfmb.loadmodule.LoadControlProfile.Parser, new[]{ "ControlMessageInfo", "EnergyConsumer", "LoadControl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadPointStatus), global::openfmb.loadmodule.LoadPointStatus.Parser, new[]{ "RampRates", "ReactivePwrSetPointEnabled", "RealPwrSetPointEnabled", "Reset", "State" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadEventAndStatusZGLD), global::openfmb.loadmodule.LoadEventAndStatusZGLD.Parser, new[]{ "LogicalNodeForEventAndStatus", "DynamicTest", "EmgStop", "PointStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadEventZGLD), global::openfmb.loadmodule.LoadEventZGLD.Parser, new[]{ "LoadEventAndStatusZGLD" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadEvent), global::openfmb.loadmodule.LoadEvent.Parser, new[]{ "EventValue", "LoadEventZGLD" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadEventProfile), global::openfmb.loadmodule.LoadEventProfile.Parser, new[]{ "EventMessageInfo", "EnergyConsumer", "LoadEvent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadReading), global::openfmb.loadmodule.LoadReading.Parser, new[]{ "ConductingEquipmentTerminalReading", "PhaseMMTN", "ReadingMMTR", "ReadingMMXU" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadReadingProfile), global::openfmb.loadmodule.LoadReadingProfile.Parser, new[]{ "ReadingMessageInfo", "EnergyConsumer", "LoadReading" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadStatusZGLD), global::openfmb.loadmodule.LoadStatusZGLD.Parser, new[]{ "LoadEventAndStatusZGLD" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadStatus), global::openfmb.loadmodule.LoadStatus.Parser, new[]{ "StatusValue", "IsUncontrollable", "LoadStatusZGLD" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.loadmodule.LoadStatusProfile), global::openfmb.loadmodule.LoadStatusProfile.Parser, new[]{ "StatusMessageInfo", "EnergyConsumer", "LoadStatus" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Point definition (Point)
  /// </summary>
  public sealed partial class LoadPoint : pb::IMessage<LoadPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadPoint> _parser = new pb::MessageParser<LoadPoint>(() => new LoadPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadPoint(LoadPoint other) : this() {
      rampRates_ = other.rampRates_ != null ? other.rampRates_.Clone() : null;
      reactivePwrSetPointEnabled_ = other.reactivePwrSetPointEnabled_ != null ? other.reactivePwrSetPointEnabled_.Clone() : null;
      realPwrSetPointEnabled_ = other.realPwrSetPointEnabled_ != null ? other.realPwrSetPointEnabled_.Clone() : null;
      reset_ = other.reset_ != null ? other.reset_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      startTime_ = other.startTime_ != null ? other.startTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadPoint Clone() {
      return new LoadPoint(this);
    }

    /// <summary>Field number for the "rampRates" field.</summary>
    public const int RampRatesFieldNumber = 1;
    private global::openfmb.commonmodule.RampRate rampRates_;
    /// <summary>
    /// Ramp rates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.RampRate RampRates {
      get { return rampRates_; }
      set {
        rampRates_ = value;
      }
    }

    /// <summary>Field number for the "reactivePwrSetPointEnabled" field.</summary>
    public const int ReactivePwrSetPointEnabledFieldNumber = 2;
    private global::openfmb.commonmodule.ControlSPC reactivePwrSetPointEnabled_;
    /// <summary>
    /// Enable reactive power set point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlSPC ReactivePwrSetPointEnabled {
      get { return reactivePwrSetPointEnabled_; }
      set {
        reactivePwrSetPointEnabled_ = value;
      }
    }

    /// <summary>Field number for the "realPwrSetPointEnabled" field.</summary>
    public const int RealPwrSetPointEnabledFieldNumber = 3;
    private global::openfmb.commonmodule.ControlSPC realPwrSetPointEnabled_;
    /// <summary>
    /// Enable joint real power set point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlSPC RealPwrSetPointEnabled {
      get { return realPwrSetPointEnabled_; }
      set {
        realPwrSetPointEnabled_ = value;
      }
    }

    /// <summary>Field number for the "reset" field.</summary>
    public const int ResetFieldNumber = 4;
    private global::openfmb.commonmodule.ControlSPC reset_;
    /// <summary>
    /// Reset device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlSPC Reset {
      get { return reset_; }
      set {
        reset_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::openfmb.commonmodule.Optional_StateKind state_;
    /// <summary>
    /// ESS state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.Optional_StateKind State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 6;
    private global::openfmb.commonmodule.ControlTimestamp startTime_;
    /// <summary>
    /// Start time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlTimestamp StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RampRates, other.RampRates)) return false;
      if (!object.Equals(ReactivePwrSetPointEnabled, other.ReactivePwrSetPointEnabled)) return false;
      if (!object.Equals(RealPwrSetPointEnabled, other.RealPwrSetPointEnabled)) return false;
      if (!object.Equals(Reset, other.Reset)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(StartTime, other.StartTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rampRates_ != null) hash ^= RampRates.GetHashCode();
      if (reactivePwrSetPointEnabled_ != null) hash ^= ReactivePwrSetPointEnabled.GetHashCode();
      if (realPwrSetPointEnabled_ != null) hash ^= RealPwrSetPointEnabled.GetHashCode();
      if (reset_ != null) hash ^= Reset.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (startTime_ != null) hash ^= StartTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rampRates_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RampRates);
      }
      if (reactivePwrSetPointEnabled_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReactivePwrSetPointEnabled);
      }
      if (realPwrSetPointEnabled_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RealPwrSetPointEnabled);
      }
      if (reset_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Reset);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (startTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rampRates_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RampRates);
      }
      if (reactivePwrSetPointEnabled_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReactivePwrSetPointEnabled);
      }
      if (realPwrSetPointEnabled_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RealPwrSetPointEnabled);
      }
      if (reset_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Reset);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (startTime_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(StartTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rampRates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RampRates);
      }
      if (reactivePwrSetPointEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReactivePwrSetPointEnabled);
      }
      if (realPwrSetPointEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RealPwrSetPointEnabled);
      }
      if (reset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reset);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (startTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadPoint other) {
      if (other == null) {
        return;
      }
      if (other.rampRates_ != null) {
        if (rampRates_ == null) {
          RampRates = new global::openfmb.commonmodule.RampRate();
        }
        RampRates.MergeFrom(other.RampRates);
      }
      if (other.reactivePwrSetPointEnabled_ != null) {
        if (reactivePwrSetPointEnabled_ == null) {
          ReactivePwrSetPointEnabled = new global::openfmb.commonmodule.ControlSPC();
        }
        ReactivePwrSetPointEnabled.MergeFrom(other.ReactivePwrSetPointEnabled);
      }
      if (other.realPwrSetPointEnabled_ != null) {
        if (realPwrSetPointEnabled_ == null) {
          RealPwrSetPointEnabled = new global::openfmb.commonmodule.ControlSPC();
        }
        RealPwrSetPointEnabled.MergeFrom(other.RealPwrSetPointEnabled);
      }
      if (other.reset_ != null) {
        if (reset_ == null) {
          Reset = new global::openfmb.commonmodule.ControlSPC();
        }
        Reset.MergeFrom(other.Reset);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::openfmb.commonmodule.Optional_StateKind();
        }
        State.MergeFrom(other.State);
      }
      if (other.startTime_ != null) {
        if (startTime_ == null) {
          StartTime = new global::openfmb.commonmodule.ControlTimestamp();
        }
        StartTime.MergeFrom(other.StartTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 18: {
            if (reactivePwrSetPointEnabled_ == null) {
              ReactivePwrSetPointEnabled = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(ReactivePwrSetPointEnabled);
            break;
          }
          case 26: {
            if (realPwrSetPointEnabled_ == null) {
              RealPwrSetPointEnabled = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(RealPwrSetPointEnabled);
            break;
          }
          case 34: {
            if (reset_ == null) {
              Reset = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(Reset);
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
          case 50: {
            if (startTime_ == null) {
              StartTime = new global::openfmb.commonmodule.ControlTimestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 18: {
            if (reactivePwrSetPointEnabled_ == null) {
              ReactivePwrSetPointEnabled = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(ReactivePwrSetPointEnabled);
            break;
          }
          case 26: {
            if (realPwrSetPointEnabled_ == null) {
              RealPwrSetPointEnabled = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(RealPwrSetPointEnabled);
            break;
          }
          case 34: {
            if (reset_ == null) {
              Reset = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(Reset);
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
          case 50: {
            if (startTime_ == null) {
              StartTime = new global::openfmb.commonmodule.ControlTimestamp();
            }
            input.ReadMessage(StartTime);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Curve shape setting (FC=SP) (CSG_SP)
  /// </summary>
  public sealed partial class LoadCSG : pb::IMessage<LoadCSG>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadCSG> _parser = new pb::MessageParser<LoadCSG>(() => new LoadCSG());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadCSG> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadCSG() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadCSG(LoadCSG other) : this() {
      crvPts_ = other.crvPts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadCSG Clone() {
      return new LoadCSG(this);
    }

    /// <summary>Field number for the "crvPts" field.</summary>
    public const int CrvPtsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::openfmb.loadmodule.LoadPoint> _repeated_crvPts_codec
        = pb::FieldCodec.ForMessage(10, global::openfmb.loadmodule.LoadPoint.Parser);
    private readonly pbc::RepeatedField<global::openfmb.loadmodule.LoadPoint> crvPts_ = new pbc::RepeatedField<global::openfmb.loadmodule.LoadPoint>();
    /// <summary>
    /// The array with the points specifying a curve shape.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::openfmb.loadmodule.LoadPoint> CrvPts {
      get { return crvPts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadCSG);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadCSG other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!crvPts_.Equals(other.crvPts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= crvPts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      crvPts_.WriteTo(output, _repeated_crvPts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      crvPts_.WriteTo(ref output, _repeated_crvPts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += crvPts_.CalculateSize(_repeated_crvPts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadCSG other) {
      if (other == null) {
        return;
      }
      crvPts_.Add(other.crvPts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            crvPts_.AddEntriesFrom(input, _repeated_crvPts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            crvPts_.AddEntriesFrom(ref input, _repeated_crvPts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB specialization for control schedule using:  LN: Schedule   Name: FSCH
  /// </summary>
  public sealed partial class LoadControlScheduleFSCH : pb::IMessage<LoadControlScheduleFSCH>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadControlScheduleFSCH> _parser = new pb::MessageParser<LoadControlScheduleFSCH>(() => new LoadControlScheduleFSCH());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadControlScheduleFSCH> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlScheduleFSCH() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlScheduleFSCH(LoadControlScheduleFSCH other) : this() {
      valDCSG_ = other.valDCSG_ != null ? other.valDCSG_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlScheduleFSCH Clone() {
      return new LoadControlScheduleFSCH(this);
    }

    /// <summary>Field number for the "ValDCSG" field.</summary>
    public const int ValDCSGFieldNumber = 1;
    private global::openfmb.loadmodule.LoadCSG valDCSG_;
    /// <summary>
    /// Discrete value in LoadCSG type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadCSG ValDCSG {
      get { return valDCSG_; }
      set {
        valDCSG_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadControlScheduleFSCH);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadControlScheduleFSCH other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ValDCSG, other.ValDCSG)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (valDCSG_ != null) hash ^= ValDCSG.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (valDCSG_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ValDCSG);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (valDCSG_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ValDCSG);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (valDCSG_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ValDCSG);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadControlScheduleFSCH other) {
      if (other == null) {
        return;
      }
      if (other.valDCSG_ != null) {
        if (valDCSG_ == null) {
          ValDCSG = new global::openfmb.loadmodule.LoadCSG();
        }
        ValDCSG.MergeFrom(other.ValDCSG);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (valDCSG_ == null) {
              ValDCSG = new global::openfmb.loadmodule.LoadCSG();
            }
            input.ReadMessage(ValDCSG);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (valDCSG_ == null) {
              ValDCSG = new global::openfmb.loadmodule.LoadCSG();
            }
            input.ReadMessage(ValDCSG);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specialized FSCC 61850 class.  LN: Schedule controller   Name: FSCC
  /// </summary>
  public sealed partial class LoadControlFSCC : pb::IMessage<LoadControlFSCC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadControlFSCC> _parser = new pb::MessageParser<LoadControlFSCC>(() => new LoadControlFSCC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadControlFSCC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlFSCC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlFSCC(LoadControlFSCC other) : this() {
      controlFSCC_ = other.controlFSCC_ != null ? other.controlFSCC_.Clone() : null;
      loadControlScheduleFSCH_ = other.loadControlScheduleFSCH_ != null ? other.loadControlScheduleFSCH_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlFSCC Clone() {
      return new LoadControlFSCC(this);
    }

    /// <summary>Field number for the "controlFSCC" field.</summary>
    public const int ControlFSCCFieldNumber = 1;
    private global::openfmb.commonmodule.ControlFSCC controlFSCC_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlFSCC ControlFSCC {
      get { return controlFSCC_; }
      set {
        controlFSCC_ = value;
      }
    }

    /// <summary>Field number for the "loadControlScheduleFSCH" field.</summary>
    public const int LoadControlScheduleFSCHFieldNumber = 2;
    private global::openfmb.loadmodule.LoadControlScheduleFSCH loadControlScheduleFSCH_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadControlScheduleFSCH LoadControlScheduleFSCH {
      get { return loadControlScheduleFSCH_; }
      set {
        loadControlScheduleFSCH_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadControlFSCC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadControlFSCC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlFSCC, other.ControlFSCC)) return false;
      if (!object.Equals(LoadControlScheduleFSCH, other.LoadControlScheduleFSCH)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (controlFSCC_ != null) hash ^= ControlFSCC.GetHashCode();
      if (loadControlScheduleFSCH_ != null) hash ^= LoadControlScheduleFSCH.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlFSCC_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlFSCC);
      }
      if (loadControlScheduleFSCH_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LoadControlScheduleFSCH);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlFSCC_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlFSCC);
      }
      if (loadControlScheduleFSCH_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LoadControlScheduleFSCH);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (controlFSCC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlFSCC);
      }
      if (loadControlScheduleFSCH_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadControlScheduleFSCH);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadControlFSCC other) {
      if (other == null) {
        return;
      }
      if (other.controlFSCC_ != null) {
        if (controlFSCC_ == null) {
          ControlFSCC = new global::openfmb.commonmodule.ControlFSCC();
        }
        ControlFSCC.MergeFrom(other.ControlFSCC);
      }
      if (other.loadControlScheduleFSCH_ != null) {
        if (loadControlScheduleFSCH_ == null) {
          LoadControlScheduleFSCH = new global::openfmb.loadmodule.LoadControlScheduleFSCH();
        }
        LoadControlScheduleFSCH.MergeFrom(other.LoadControlScheduleFSCH);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlFSCC_ == null) {
              ControlFSCC = new global::openfmb.commonmodule.ControlFSCC();
            }
            input.ReadMessage(ControlFSCC);
            break;
          }
          case 18: {
            if (loadControlScheduleFSCH_ == null) {
              LoadControlScheduleFSCH = new global::openfmb.loadmodule.LoadControlScheduleFSCH();
            }
            input.ReadMessage(LoadControlScheduleFSCH);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlFSCC_ == null) {
              ControlFSCC = new global::openfmb.commonmodule.ControlFSCC();
            }
            input.ReadMessage(ControlFSCC);
            break;
          }
          case 18: {
            if (loadControlScheduleFSCH_ == null) {
              LoadControlScheduleFSCH = new global::openfmb.loadmodule.LoadControlScheduleFSCH();
            }
            input.ReadMessage(LoadControlScheduleFSCH);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load control
  /// </summary>
  public sealed partial class LoadControl : pb::IMessage<LoadControl>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadControl> _parser = new pb::MessageParser<LoadControl>(() => new LoadControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControl(LoadControl other) : this() {
      controlValue_ = other.controlValue_ != null ? other.controlValue_.Clone() : null;
      check_ = other.check_ != null ? other.check_.Clone() : null;
      loadControlFSCC_ = other.loadControlFSCC_ != null ? other.loadControlFSCC_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControl Clone() {
      return new LoadControl(this);
    }

    /// <summary>Field number for the "controlValue" field.</summary>
    public const int ControlValueFieldNumber = 1;
    private global::openfmb.commonmodule.ControlValue controlValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlValue ControlValue {
      get { return controlValue_; }
      set {
        controlValue_ = value;
      }
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 2;
    private global::openfmb.commonmodule.CheckConditions check_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.CheckConditions Check {
      get { return check_; }
      set {
        check_ = value;
      }
    }

    /// <summary>Field number for the "loadControlFSCC" field.</summary>
    public const int LoadControlFSCCFieldNumber = 3;
    private global::openfmb.loadmodule.LoadControlFSCC loadControlFSCC_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadControlFSCC LoadControlFSCC {
      get { return loadControlFSCC_; }
      set {
        loadControlFSCC_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlValue, other.ControlValue)) return false;
      if (!object.Equals(Check, other.Check)) return false;
      if (!object.Equals(LoadControlFSCC, other.LoadControlFSCC)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (controlValue_ != null) hash ^= ControlValue.GetHashCode();
      if (check_ != null) hash ^= Check.GetHashCode();
      if (loadControlFSCC_ != null) hash ^= LoadControlFSCC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (loadControlFSCC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadControlFSCC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (loadControlFSCC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadControlFSCC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (controlValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlValue);
      }
      if (check_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Check);
      }
      if (loadControlFSCC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadControlFSCC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadControl other) {
      if (other == null) {
        return;
      }
      if (other.controlValue_ != null) {
        if (controlValue_ == null) {
          ControlValue = new global::openfmb.commonmodule.ControlValue();
        }
        ControlValue.MergeFrom(other.ControlValue);
      }
      if (other.check_ != null) {
        if (check_ == null) {
          Check = new global::openfmb.commonmodule.CheckConditions();
        }
        Check.MergeFrom(other.Check);
      }
      if (other.loadControlFSCC_ != null) {
        if (loadControlFSCC_ == null) {
          LoadControlFSCC = new global::openfmb.loadmodule.LoadControlFSCC();
        }
        LoadControlFSCC.MergeFrom(other.LoadControlFSCC);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (loadControlFSCC_ == null) {
              LoadControlFSCC = new global::openfmb.loadmodule.LoadControlFSCC();
            }
            input.ReadMessage(LoadControlFSCC);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (loadControlFSCC_ == null) {
              LoadControlFSCC = new global::openfmb.loadmodule.LoadControlFSCC();
            }
            input.ReadMessage(LoadControlFSCC);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load control profile
  /// </summary>
  public sealed partial class LoadControlProfile : pb::IMessage<LoadControlProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadControlProfile> _parser = new pb::MessageParser<LoadControlProfile>(() => new LoadControlProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadControlProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlProfile(LoadControlProfile other) : this() {
      controlMessageInfo_ = other.controlMessageInfo_ != null ? other.controlMessageInfo_.Clone() : null;
      energyConsumer_ = other.energyConsumer_ != null ? other.energyConsumer_.Clone() : null;
      loadControl_ = other.loadControl_ != null ? other.loadControl_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadControlProfile Clone() {
      return new LoadControlProfile(this);
    }

    /// <summary>Field number for the "controlMessageInfo" field.</summary>
    public const int ControlMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ControlMessageInfo controlMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlMessageInfo ControlMessageInfo {
      get { return controlMessageInfo_; }
      set {
        controlMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "energyConsumer" field.</summary>
    public const int EnergyConsumerFieldNumber = 2;
    private global::openfmb.commonmodule.EnergyConsumer energyConsumer_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EnergyConsumer EnergyConsumer {
      get { return energyConsumer_; }
      set {
        energyConsumer_ = value;
      }
    }

    /// <summary>Field number for the "loadControl" field.</summary>
    public const int LoadControlFieldNumber = 3;
    private global::openfmb.loadmodule.LoadControl loadControl_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadControl LoadControl {
      get { return loadControl_; }
      set {
        loadControl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadControlProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadControlProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlMessageInfo, other.ControlMessageInfo)) return false;
      if (!object.Equals(EnergyConsumer, other.EnergyConsumer)) return false;
      if (!object.Equals(LoadControl, other.LoadControl)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (controlMessageInfo_ != null) hash ^= ControlMessageInfo.GetHashCode();
      if (energyConsumer_ != null) hash ^= EnergyConsumer.GetHashCode();
      if (loadControl_ != null) hash ^= LoadControl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadControl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadControl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (controlMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlMessageInfo);
      }
      if (energyConsumer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnergyConsumer);
      }
      if (loadControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadControl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadControlProfile other) {
      if (other == null) {
        return;
      }
      if (other.controlMessageInfo_ != null) {
        if (controlMessageInfo_ == null) {
          ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
        }
        ControlMessageInfo.MergeFrom(other.ControlMessageInfo);
      }
      if (other.energyConsumer_ != null) {
        if (energyConsumer_ == null) {
          EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
        }
        EnergyConsumer.MergeFrom(other.EnergyConsumer);
      }
      if (other.loadControl_ != null) {
        if (loadControl_ == null) {
          LoadControl = new global::openfmb.loadmodule.LoadControl();
        }
        LoadControl.MergeFrom(other.LoadControl);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadControl_ == null) {
              LoadControl = new global::openfmb.loadmodule.LoadControl();
            }
            input.ReadMessage(LoadControl);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadControl_ == null) {
              LoadControl = new global::openfmb.loadmodule.LoadControl();
            }
            input.ReadMessage(LoadControl);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Point definition (Point)
  /// </summary>
  public sealed partial class LoadPointStatus : pb::IMessage<LoadPointStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadPointStatus> _parser = new pb::MessageParser<LoadPointStatus>(() => new LoadPointStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadPointStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadPointStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadPointStatus(LoadPointStatus other) : this() {
      rampRates_ = other.rampRates_ != null ? other.rampRates_.Clone() : null;
      reactivePwrSetPointEnabled_ = other.reactivePwrSetPointEnabled_ != null ? other.reactivePwrSetPointEnabled_.Clone() : null;
      realPwrSetPointEnabled_ = other.realPwrSetPointEnabled_ != null ? other.realPwrSetPointEnabled_.Clone() : null;
      reset_ = other.reset_ != null ? other.reset_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadPointStatus Clone() {
      return new LoadPointStatus(this);
    }

    /// <summary>Field number for the "rampRates" field.</summary>
    public const int RampRatesFieldNumber = 1;
    private global::openfmb.commonmodule.RampRate rampRates_;
    /// <summary>
    /// Ramp rates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.RampRate RampRates {
      get { return rampRates_; }
      set {
        rampRates_ = value;
      }
    }

    /// <summary>Field number for the "reactivePwrSetPointEnabled" field.</summary>
    public const int ReactivePwrSetPointEnabledFieldNumber = 2;
    private global::openfmb.commonmodule.StatusSPS reactivePwrSetPointEnabled_;
    /// <summary>
    /// Enable reactive power set point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS ReactivePwrSetPointEnabled {
      get { return reactivePwrSetPointEnabled_; }
      set {
        reactivePwrSetPointEnabled_ = value;
      }
    }

    /// <summary>Field number for the "realPwrSetPointEnabled" field.</summary>
    public const int RealPwrSetPointEnabledFieldNumber = 3;
    private global::openfmb.commonmodule.StatusSPS realPwrSetPointEnabled_;
    /// <summary>
    /// Enable joint real power set point
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS RealPwrSetPointEnabled {
      get { return realPwrSetPointEnabled_; }
      set {
        realPwrSetPointEnabled_ = value;
      }
    }

    /// <summary>Field number for the "reset" field.</summary>
    public const int ResetFieldNumber = 4;
    private global::openfmb.commonmodule.StatusSPS reset_;
    /// <summary>
    /// Reset device
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS Reset {
      get { return reset_; }
      set {
        reset_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 5;
    private global::openfmb.commonmodule.Optional_StateKind state_;
    /// <summary>
    /// ESS state
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.Optional_StateKind State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadPointStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadPointStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RampRates, other.RampRates)) return false;
      if (!object.Equals(ReactivePwrSetPointEnabled, other.ReactivePwrSetPointEnabled)) return false;
      if (!object.Equals(RealPwrSetPointEnabled, other.RealPwrSetPointEnabled)) return false;
      if (!object.Equals(Reset, other.Reset)) return false;
      if (!object.Equals(State, other.State)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rampRates_ != null) hash ^= RampRates.GetHashCode();
      if (reactivePwrSetPointEnabled_ != null) hash ^= ReactivePwrSetPointEnabled.GetHashCode();
      if (realPwrSetPointEnabled_ != null) hash ^= RealPwrSetPointEnabled.GetHashCode();
      if (reset_ != null) hash ^= Reset.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rampRates_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RampRates);
      }
      if (reactivePwrSetPointEnabled_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReactivePwrSetPointEnabled);
      }
      if (realPwrSetPointEnabled_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RealPwrSetPointEnabled);
      }
      if (reset_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Reset);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rampRates_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RampRates);
      }
      if (reactivePwrSetPointEnabled_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ReactivePwrSetPointEnabled);
      }
      if (realPwrSetPointEnabled_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RealPwrSetPointEnabled);
      }
      if (reset_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Reset);
      }
      if (state_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rampRates_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RampRates);
      }
      if (reactivePwrSetPointEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReactivePwrSetPointEnabled);
      }
      if (realPwrSetPointEnabled_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RealPwrSetPointEnabled);
      }
      if (reset_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reset);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadPointStatus other) {
      if (other == null) {
        return;
      }
      if (other.rampRates_ != null) {
        if (rampRates_ == null) {
          RampRates = new global::openfmb.commonmodule.RampRate();
        }
        RampRates.MergeFrom(other.RampRates);
      }
      if (other.reactivePwrSetPointEnabled_ != null) {
        if (reactivePwrSetPointEnabled_ == null) {
          ReactivePwrSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
        }
        ReactivePwrSetPointEnabled.MergeFrom(other.ReactivePwrSetPointEnabled);
      }
      if (other.realPwrSetPointEnabled_ != null) {
        if (realPwrSetPointEnabled_ == null) {
          RealPwrSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
        }
        RealPwrSetPointEnabled.MergeFrom(other.RealPwrSetPointEnabled);
      }
      if (other.reset_ != null) {
        if (reset_ == null) {
          Reset = new global::openfmb.commonmodule.StatusSPS();
        }
        Reset.MergeFrom(other.Reset);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          State = new global::openfmb.commonmodule.Optional_StateKind();
        }
        State.MergeFrom(other.State);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 18: {
            if (reactivePwrSetPointEnabled_ == null) {
              ReactivePwrSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(ReactivePwrSetPointEnabled);
            break;
          }
          case 26: {
            if (realPwrSetPointEnabled_ == null) {
              RealPwrSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(RealPwrSetPointEnabled);
            break;
          }
          case 34: {
            if (reset_ == null) {
              Reset = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(Reset);
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (rampRates_ == null) {
              RampRates = new global::openfmb.commonmodule.RampRate();
            }
            input.ReadMessage(RampRates);
            break;
          }
          case 18: {
            if (reactivePwrSetPointEnabled_ == null) {
              ReactivePwrSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(ReactivePwrSetPointEnabled);
            break;
          }
          case 26: {
            if (realPwrSetPointEnabled_ == null) {
              RealPwrSetPointEnabled = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(RealPwrSetPointEnabled);
            break;
          }
          case 34: {
            if (reset_ == null) {
              Reset = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(Reset);
            break;
          }
          case 42: {
            if (state_ == null) {
              State = new global::openfmb.commonmodule.Optional_StateKind();
            }
            input.ReadMessage(State);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specialized 61850 ZGLD class
  /// </summary>
  public sealed partial class LoadEventAndStatusZGLD : pb::IMessage<LoadEventAndStatusZGLD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadEventAndStatusZGLD> _parser = new pb::MessageParser<LoadEventAndStatusZGLD>(() => new LoadEventAndStatusZGLD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadEventAndStatusZGLD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventAndStatusZGLD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventAndStatusZGLD(LoadEventAndStatusZGLD other) : this() {
      logicalNodeForEventAndStatus_ = other.logicalNodeForEventAndStatus_ != null ? other.logicalNodeForEventAndStatus_.Clone() : null;
      dynamicTest_ = other.dynamicTest_ != null ? other.dynamicTest_.Clone() : null;
      emgStop_ = other.emgStop_ != null ? other.emgStop_.Clone() : null;
      pointStatus_ = other.pointStatus_ != null ? other.pointStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventAndStatusZGLD Clone() {
      return new LoadEventAndStatusZGLD(this);
    }

    /// <summary>Field number for the "logicalNodeForEventAndStatus" field.</summary>
    public const int LogicalNodeForEventAndStatusFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.LogicalNodeForEventAndStatus LogicalNodeForEventAndStatus {
      get { return logicalNodeForEventAndStatus_; }
      set {
        logicalNodeForEventAndStatus_ = value;
      }
    }

    /// <summary>Field number for the "DynamicTest" field.</summary>
    public const int DynamicTestFieldNumber = 2;
    private global::openfmb.commonmodule.ENS_DynamicTestKind dynamicTest_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ENS_DynamicTestKind DynamicTest {
      get { return dynamicTest_; }
      set {
        dynamicTest_ = value;
      }
    }

    /// <summary>Field number for the "EmgStop" field.</summary>
    public const int EmgStopFieldNumber = 3;
    private global::openfmb.commonmodule.StatusSPS emgStop_;
    /// <summary>
    /// Emergency stop
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS EmgStop {
      get { return emgStop_; }
      set {
        emgStop_ = value;
      }
    }

    /// <summary>Field number for the "PointStatus" field.</summary>
    public const int PointStatusFieldNumber = 4;
    private global::openfmb.loadmodule.LoadPointStatus pointStatus_;
    /// <summary>
    /// Point status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadPointStatus PointStatus {
      get { return pointStatus_; }
      set {
        pointStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadEventAndStatusZGLD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadEventAndStatusZGLD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNodeForEventAndStatus, other.LogicalNodeForEventAndStatus)) return false;
      if (!object.Equals(DynamicTest, other.DynamicTest)) return false;
      if (!object.Equals(EmgStop, other.EmgStop)) return false;
      if (!object.Equals(PointStatus, other.PointStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNodeForEventAndStatus_ != null) hash ^= LogicalNodeForEventAndStatus.GetHashCode();
      if (dynamicTest_ != null) hash ^= DynamicTest.GetHashCode();
      if (emgStop_ != null) hash ^= EmgStop.GetHashCode();
      if (pointStatus_ != null) hash ^= PointStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (emgStop_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EmgStop);
      }
      if (pointStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PointStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (emgStop_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(EmgStop);
      }
      if (pointStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PointStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (logicalNodeForEventAndStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicTest);
      }
      if (emgStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmgStop);
      }
      if (pointStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PointStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadEventAndStatusZGLD other) {
      if (other == null) {
        return;
      }
      if (other.logicalNodeForEventAndStatus_ != null) {
        if (logicalNodeForEventAndStatus_ == null) {
          LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
        }
        LogicalNodeForEventAndStatus.MergeFrom(other.LogicalNodeForEventAndStatus);
      }
      if (other.dynamicTest_ != null) {
        if (dynamicTest_ == null) {
          DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
        }
        DynamicTest.MergeFrom(other.DynamicTest);
      }
      if (other.emgStop_ != null) {
        if (emgStop_ == null) {
          EmgStop = new global::openfmb.commonmodule.StatusSPS();
        }
        EmgStop.MergeFrom(other.EmgStop);
      }
      if (other.pointStatus_ != null) {
        if (pointStatus_ == null) {
          PointStatus = new global::openfmb.loadmodule.LoadPointStatus();
        }
        PointStatus.MergeFrom(other.PointStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 26: {
            if (emgStop_ == null) {
              EmgStop = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(EmgStop);
            break;
          }
          case 34: {
            if (pointStatus_ == null) {
              PointStatus = new global::openfmb.loadmodule.LoadPointStatus();
            }
            input.ReadMessage(PointStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 26: {
            if (emgStop_ == null) {
              EmgStop = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(EmgStop);
            break;
          }
          case 34: {
            if (pointStatus_ == null) {
              PointStatus = new global::openfmb.loadmodule.LoadPointStatus();
            }
            input.ReadMessage(PointStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specialized 61850 ZGLD LN class
  /// </summary>
  public sealed partial class LoadEventZGLD : pb::IMessage<LoadEventZGLD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadEventZGLD> _parser = new pb::MessageParser<LoadEventZGLD>(() => new LoadEventZGLD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadEventZGLD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventZGLD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventZGLD(LoadEventZGLD other) : this() {
      loadEventAndStatusZGLD_ = other.loadEventAndStatusZGLD_ != null ? other.loadEventAndStatusZGLD_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventZGLD Clone() {
      return new LoadEventZGLD(this);
    }

    /// <summary>Field number for the "loadEventAndStatusZGLD" field.</summary>
    public const int LoadEventAndStatusZGLDFieldNumber = 1;
    private global::openfmb.loadmodule.LoadEventAndStatusZGLD loadEventAndStatusZGLD_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadEventAndStatusZGLD LoadEventAndStatusZGLD {
      get { return loadEventAndStatusZGLD_; }
      set {
        loadEventAndStatusZGLD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadEventZGLD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadEventZGLD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoadEventAndStatusZGLD, other.LoadEventAndStatusZGLD)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loadEventAndStatusZGLD_ != null) hash ^= LoadEventAndStatusZGLD.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (loadEventAndStatusZGLD_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LoadEventAndStatusZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (loadEventAndStatusZGLD_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LoadEventAndStatusZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loadEventAndStatusZGLD_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadEventAndStatusZGLD);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadEventZGLD other) {
      if (other == null) {
        return;
      }
      if (other.loadEventAndStatusZGLD_ != null) {
        if (loadEventAndStatusZGLD_ == null) {
          LoadEventAndStatusZGLD = new global::openfmb.loadmodule.LoadEventAndStatusZGLD();
        }
        LoadEventAndStatusZGLD.MergeFrom(other.LoadEventAndStatusZGLD);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (loadEventAndStatusZGLD_ == null) {
              LoadEventAndStatusZGLD = new global::openfmb.loadmodule.LoadEventAndStatusZGLD();
            }
            input.ReadMessage(LoadEventAndStatusZGLD);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (loadEventAndStatusZGLD_ == null) {
              LoadEventAndStatusZGLD = new global::openfmb.loadmodule.LoadEventAndStatusZGLD();
            }
            input.ReadMessage(LoadEventAndStatusZGLD);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load event
  /// </summary>
  public sealed partial class LoadEvent : pb::IMessage<LoadEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadEvent> _parser = new pb::MessageParser<LoadEvent>(() => new LoadEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEvent(LoadEvent other) : this() {
      eventValue_ = other.eventValue_ != null ? other.eventValue_.Clone() : null;
      loadEventZGLD_ = other.loadEventZGLD_ != null ? other.loadEventZGLD_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEvent Clone() {
      return new LoadEvent(this);
    }

    /// <summary>Field number for the "eventValue" field.</summary>
    public const int EventValueFieldNumber = 1;
    private global::openfmb.commonmodule.EventValue eventValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EventValue EventValue {
      get { return eventValue_; }
      set {
        eventValue_ = value;
      }
    }

    /// <summary>Field number for the "loadEventZGLD" field.</summary>
    public const int LoadEventZGLDFieldNumber = 2;
    private global::openfmb.loadmodule.LoadEventZGLD loadEventZGLD_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadEventZGLD LoadEventZGLD {
      get { return loadEventZGLD_; }
      set {
        loadEventZGLD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventValue, other.EventValue)) return false;
      if (!object.Equals(LoadEventZGLD, other.LoadEventZGLD)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventValue_ != null) hash ^= EventValue.GetHashCode();
      if (loadEventZGLD_ != null) hash ^= LoadEventZGLD.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventValue);
      }
      if (loadEventZGLD_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LoadEventZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventValue);
      }
      if (loadEventZGLD_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LoadEventZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventValue);
      }
      if (loadEventZGLD_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadEventZGLD);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadEvent other) {
      if (other == null) {
        return;
      }
      if (other.eventValue_ != null) {
        if (eventValue_ == null) {
          EventValue = new global::openfmb.commonmodule.EventValue();
        }
        EventValue.MergeFrom(other.EventValue);
      }
      if (other.loadEventZGLD_ != null) {
        if (loadEventZGLD_ == null) {
          LoadEventZGLD = new global::openfmb.loadmodule.LoadEventZGLD();
        }
        LoadEventZGLD.MergeFrom(other.LoadEventZGLD);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventValue_ == null) {
              EventValue = new global::openfmb.commonmodule.EventValue();
            }
            input.ReadMessage(EventValue);
            break;
          }
          case 18: {
            if (loadEventZGLD_ == null) {
              LoadEventZGLD = new global::openfmb.loadmodule.LoadEventZGLD();
            }
            input.ReadMessage(LoadEventZGLD);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventValue_ == null) {
              EventValue = new global::openfmb.commonmodule.EventValue();
            }
            input.ReadMessage(EventValue);
            break;
          }
          case 18: {
            if (loadEventZGLD_ == null) {
              LoadEventZGLD = new global::openfmb.loadmodule.LoadEventZGLD();
            }
            input.ReadMessage(LoadEventZGLD);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load event profile
  /// </summary>
  public sealed partial class LoadEventProfile : pb::IMessage<LoadEventProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadEventProfile> _parser = new pb::MessageParser<LoadEventProfile>(() => new LoadEventProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadEventProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventProfile(LoadEventProfile other) : this() {
      eventMessageInfo_ = other.eventMessageInfo_ != null ? other.eventMessageInfo_.Clone() : null;
      energyConsumer_ = other.energyConsumer_ != null ? other.energyConsumer_.Clone() : null;
      loadEvent_ = other.loadEvent_ != null ? other.loadEvent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadEventProfile Clone() {
      return new LoadEventProfile(this);
    }

    /// <summary>Field number for the "eventMessageInfo" field.</summary>
    public const int EventMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.EventMessageInfo eventMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EventMessageInfo EventMessageInfo {
      get { return eventMessageInfo_; }
      set {
        eventMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "energyConsumer" field.</summary>
    public const int EnergyConsumerFieldNumber = 2;
    private global::openfmb.commonmodule.EnergyConsumer energyConsumer_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EnergyConsumer EnergyConsumer {
      get { return energyConsumer_; }
      set {
        energyConsumer_ = value;
      }
    }

    /// <summary>Field number for the "loadEvent" field.</summary>
    public const int LoadEventFieldNumber = 3;
    private global::openfmb.loadmodule.LoadEvent loadEvent_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadEvent LoadEvent {
      get { return loadEvent_; }
      set {
        loadEvent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadEventProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadEventProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventMessageInfo, other.EventMessageInfo)) return false;
      if (!object.Equals(EnergyConsumer, other.EnergyConsumer)) return false;
      if (!object.Equals(LoadEvent, other.LoadEvent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventMessageInfo_ != null) hash ^= EventMessageInfo.GetHashCode();
      if (energyConsumer_ != null) hash ^= EnergyConsumer.GetHashCode();
      if (loadEvent_ != null) hash ^= LoadEvent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadEvent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadEvent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventMessageInfo);
      }
      if (energyConsumer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnergyConsumer);
      }
      if (loadEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadEventProfile other) {
      if (other == null) {
        return;
      }
      if (other.eventMessageInfo_ != null) {
        if (eventMessageInfo_ == null) {
          EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
        }
        EventMessageInfo.MergeFrom(other.EventMessageInfo);
      }
      if (other.energyConsumer_ != null) {
        if (energyConsumer_ == null) {
          EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
        }
        EnergyConsumer.MergeFrom(other.EnergyConsumer);
      }
      if (other.loadEvent_ != null) {
        if (loadEvent_ == null) {
          LoadEvent = new global::openfmb.loadmodule.LoadEvent();
        }
        LoadEvent.MergeFrom(other.LoadEvent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadEvent_ == null) {
              LoadEvent = new global::openfmb.loadmodule.LoadEvent();
            }
            input.ReadMessage(LoadEvent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadEvent_ == null) {
              LoadEvent = new global::openfmb.loadmodule.LoadEvent();
            }
            input.ReadMessage(LoadEvent);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load reading value
  /// </summary>
  public sealed partial class LoadReading : pb::IMessage<LoadReading>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadReading> _parser = new pb::MessageParser<LoadReading>(() => new LoadReading());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadReading> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadReading() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadReading(LoadReading other) : this() {
      conductingEquipmentTerminalReading_ = other.conductingEquipmentTerminalReading_ != null ? other.conductingEquipmentTerminalReading_.Clone() : null;
      phaseMMTN_ = other.phaseMMTN_ != null ? other.phaseMMTN_.Clone() : null;
      readingMMTR_ = other.readingMMTR_ != null ? other.readingMMTR_.Clone() : null;
      readingMMXU_ = other.readingMMXU_ != null ? other.readingMMXU_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadReading Clone() {
      return new LoadReading(this);
    }

    /// <summary>Field number for the "conductingEquipmentTerminalReading" field.</summary>
    public const int ConductingEquipmentTerminalReadingFieldNumber = 1;
    private global::openfmb.commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ConductingEquipmentTerminalReading ConductingEquipmentTerminalReading {
      get { return conductingEquipmentTerminalReading_; }
      set {
        conductingEquipmentTerminalReading_ = value;
      }
    }

    /// <summary>Field number for the "phaseMMTN" field.</summary>
    public const int PhaseMMTNFieldNumber = 2;
    private global::openfmb.commonmodule.PhaseMMTN phaseMMTN_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.PhaseMMTN PhaseMMTN {
      get { return phaseMMTN_; }
      set {
        phaseMMTN_ = value;
      }
    }

    /// <summary>Field number for the "readingMMTR" field.</summary>
    public const int ReadingMMTRFieldNumber = 3;
    private global::openfmb.commonmodule.ReadingMMTR readingMMTR_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ReadingMMTR ReadingMMTR {
      get { return readingMMTR_; }
      set {
        readingMMTR_ = value;
      }
    }

    /// <summary>Field number for the "readingMMXU" field.</summary>
    public const int ReadingMMXUFieldNumber = 4;
    private global::openfmb.commonmodule.ReadingMMXU readingMMXU_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ReadingMMXU ReadingMMXU {
      get { return readingMMXU_; }
      set {
        readingMMXU_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadReading);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadReading other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConductingEquipmentTerminalReading, other.ConductingEquipmentTerminalReading)) return false;
      if (!object.Equals(PhaseMMTN, other.PhaseMMTN)) return false;
      if (!object.Equals(ReadingMMTR, other.ReadingMMTR)) return false;
      if (!object.Equals(ReadingMMXU, other.ReadingMMXU)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (conductingEquipmentTerminalReading_ != null) hash ^= ConductingEquipmentTerminalReading.GetHashCode();
      if (phaseMMTN_ != null) hash ^= PhaseMMTN.GetHashCode();
      if (readingMMTR_ != null) hash ^= ReadingMMTR.GetHashCode();
      if (readingMMXU_ != null) hash ^= ReadingMMXU.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (conductingEquipmentTerminalReading_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipmentTerminalReading);
      }
      if (phaseMMTN_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadingMMXU);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (conductingEquipmentTerminalReading_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipmentTerminalReading);
      }
      if (phaseMMTN_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadingMMXU);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (conductingEquipmentTerminalReading_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConductingEquipmentTerminalReading);
      }
      if (phaseMMTN_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMMXU);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadReading other) {
      if (other == null) {
        return;
      }
      if (other.conductingEquipmentTerminalReading_ != null) {
        if (conductingEquipmentTerminalReading_ == null) {
          ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
        }
        ConductingEquipmentTerminalReading.MergeFrom(other.ConductingEquipmentTerminalReading);
      }
      if (other.phaseMMTN_ != null) {
        if (phaseMMTN_ == null) {
          PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
        }
        PhaseMMTN.MergeFrom(other.PhaseMMTN);
      }
      if (other.readingMMTR_ != null) {
        if (readingMMTR_ == null) {
          ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
        }
        ReadingMMTR.MergeFrom(other.ReadingMMTR);
      }
      if (other.readingMMXU_ != null) {
        if (readingMMXU_ == null) {
          ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
        }
        ReadingMMXU.MergeFrom(other.ReadingMMXU);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (conductingEquipmentTerminalReading_ == null) {
              ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
            }
            input.ReadMessage(ConductingEquipmentTerminalReading);
            break;
          }
          case 18: {
            if (phaseMMTN_ == null) {
              PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
            }
            input.ReadMessage(PhaseMMTN);
            break;
          }
          case 26: {
            if (readingMMTR_ == null) {
              ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
            }
            input.ReadMessage(ReadingMMTR);
            break;
          }
          case 34: {
            if (readingMMXU_ == null) {
              ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(ReadingMMXU);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (conductingEquipmentTerminalReading_ == null) {
              ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
            }
            input.ReadMessage(ConductingEquipmentTerminalReading);
            break;
          }
          case 18: {
            if (phaseMMTN_ == null) {
              PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
            }
            input.ReadMessage(PhaseMMTN);
            break;
          }
          case 26: {
            if (readingMMTR_ == null) {
              ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
            }
            input.ReadMessage(ReadingMMTR);
            break;
          }
          case 34: {
            if (readingMMXU_ == null) {
              ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(ReadingMMXU);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load reading profile
  /// </summary>
  public sealed partial class LoadReadingProfile : pb::IMessage<LoadReadingProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadReadingProfile> _parser = new pb::MessageParser<LoadReadingProfile>(() => new LoadReadingProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadReadingProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadReadingProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadReadingProfile(LoadReadingProfile other) : this() {
      readingMessageInfo_ = other.readingMessageInfo_ != null ? other.readingMessageInfo_.Clone() : null;
      energyConsumer_ = other.energyConsumer_ != null ? other.energyConsumer_.Clone() : null;
      loadReading_ = other.loadReading_ != null ? other.loadReading_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadReadingProfile Clone() {
      return new LoadReadingProfile(this);
    }

    /// <summary>Field number for the "readingMessageInfo" field.</summary>
    public const int ReadingMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ReadingMessageInfo readingMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ReadingMessageInfo ReadingMessageInfo {
      get { return readingMessageInfo_; }
      set {
        readingMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "energyConsumer" field.</summary>
    public const int EnergyConsumerFieldNumber = 2;
    private global::openfmb.commonmodule.EnergyConsumer energyConsumer_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EnergyConsumer EnergyConsumer {
      get { return energyConsumer_; }
      set {
        energyConsumer_ = value;
      }
    }

    /// <summary>Field number for the "loadReading" field.</summary>
    public const int LoadReadingFieldNumber = 3;
    private global::openfmb.loadmodule.LoadReading loadReading_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadReading LoadReading {
      get { return loadReading_; }
      set {
        loadReading_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadReadingProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadReadingProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReadingMessageInfo, other.ReadingMessageInfo)) return false;
      if (!object.Equals(EnergyConsumer, other.EnergyConsumer)) return false;
      if (!object.Equals(LoadReading, other.LoadReading)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (readingMessageInfo_ != null) hash ^= ReadingMessageInfo.GetHashCode();
      if (energyConsumer_ != null) hash ^= EnergyConsumer.GetHashCode();
      if (loadReading_ != null) hash ^= LoadReading.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (readingMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadingMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadReading_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadReading);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (readingMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadingMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadReading_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadReading);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (readingMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMessageInfo);
      }
      if (energyConsumer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnergyConsumer);
      }
      if (loadReading_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadReading);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadReadingProfile other) {
      if (other == null) {
        return;
      }
      if (other.readingMessageInfo_ != null) {
        if (readingMessageInfo_ == null) {
          ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
        }
        ReadingMessageInfo.MergeFrom(other.ReadingMessageInfo);
      }
      if (other.energyConsumer_ != null) {
        if (energyConsumer_ == null) {
          EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
        }
        EnergyConsumer.MergeFrom(other.EnergyConsumer);
      }
      if (other.loadReading_ != null) {
        if (loadReading_ == null) {
          LoadReading = new global::openfmb.loadmodule.LoadReading();
        }
        LoadReading.MergeFrom(other.LoadReading);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (readingMessageInfo_ == null) {
              ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
            }
            input.ReadMessage(ReadingMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadReading_ == null) {
              LoadReading = new global::openfmb.loadmodule.LoadReading();
            }
            input.ReadMessage(LoadReading);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (readingMessageInfo_ == null) {
              ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
            }
            input.ReadMessage(ReadingMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadReading_ == null) {
              LoadReading = new global::openfmb.loadmodule.LoadReading();
            }
            input.ReadMessage(LoadReading);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Specialized 61850 ZGLD LN class
  /// </summary>
  public sealed partial class LoadStatusZGLD : pb::IMessage<LoadStatusZGLD>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadStatusZGLD> _parser = new pb::MessageParser<LoadStatusZGLD>(() => new LoadStatusZGLD());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadStatusZGLD> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatusZGLD() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatusZGLD(LoadStatusZGLD other) : this() {
      loadEventAndStatusZGLD_ = other.loadEventAndStatusZGLD_ != null ? other.loadEventAndStatusZGLD_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatusZGLD Clone() {
      return new LoadStatusZGLD(this);
    }

    /// <summary>Field number for the "loadEventAndStatusZGLD" field.</summary>
    public const int LoadEventAndStatusZGLDFieldNumber = 1;
    private global::openfmb.loadmodule.LoadEventAndStatusZGLD loadEventAndStatusZGLD_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadEventAndStatusZGLD LoadEventAndStatusZGLD {
      get { return loadEventAndStatusZGLD_; }
      set {
        loadEventAndStatusZGLD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadStatusZGLD);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadStatusZGLD other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LoadEventAndStatusZGLD, other.LoadEventAndStatusZGLD)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loadEventAndStatusZGLD_ != null) hash ^= LoadEventAndStatusZGLD.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (loadEventAndStatusZGLD_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LoadEventAndStatusZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (loadEventAndStatusZGLD_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LoadEventAndStatusZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loadEventAndStatusZGLD_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadEventAndStatusZGLD);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadStatusZGLD other) {
      if (other == null) {
        return;
      }
      if (other.loadEventAndStatusZGLD_ != null) {
        if (loadEventAndStatusZGLD_ == null) {
          LoadEventAndStatusZGLD = new global::openfmb.loadmodule.LoadEventAndStatusZGLD();
        }
        LoadEventAndStatusZGLD.MergeFrom(other.LoadEventAndStatusZGLD);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (loadEventAndStatusZGLD_ == null) {
              LoadEventAndStatusZGLD = new global::openfmb.loadmodule.LoadEventAndStatusZGLD();
            }
            input.ReadMessage(LoadEventAndStatusZGLD);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (loadEventAndStatusZGLD_ == null) {
              LoadEventAndStatusZGLD = new global::openfmb.loadmodule.LoadEventAndStatusZGLD();
            }
            input.ReadMessage(LoadEventAndStatusZGLD);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load status
  /// </summary>
  public sealed partial class LoadStatus : pb::IMessage<LoadStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadStatus> _parser = new pb::MessageParser<LoadStatus>(() => new LoadStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatus(LoadStatus other) : this() {
      statusValue_ = other.statusValue_ != null ? other.statusValue_.Clone() : null;
      IsUncontrollable = other.IsUncontrollable;
      loadStatusZGLD_ = other.loadStatusZGLD_ != null ? other.loadStatusZGLD_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatus Clone() {
      return new LoadStatus(this);
    }

    /// <summary>Field number for the "statusValue" field.</summary>
    public const int StatusValueFieldNumber = 1;
    private global::openfmb.commonmodule.StatusValue statusValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusValue StatusValue {
      get { return statusValue_; }
      set {
        statusValue_ = value;
      }
    }

    /// <summary>Field number for the "isUncontrollable" field.</summary>
    public const int IsUncontrollableFieldNumber = 2;
    private static readonly pb::FieldCodec<bool?> _single_isUncontrollable_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
    private bool? isUncontrollable_;
    /// <summary>
    /// True if the load is uncontrollable.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? IsUncontrollable {
      get { return isUncontrollable_; }
      set {
        isUncontrollable_ = value;
      }
    }


    /// <summary>Field number for the "loadStatusZGLD" field.</summary>
    public const int LoadStatusZGLDFieldNumber = 3;
    private global::openfmb.loadmodule.LoadStatusZGLD loadStatusZGLD_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadStatusZGLD LoadStatusZGLD {
      get { return loadStatusZGLD_; }
      set {
        loadStatusZGLD_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusValue, other.StatusValue)) return false;
      if (IsUncontrollable != other.IsUncontrollable) return false;
      if (!object.Equals(LoadStatusZGLD, other.LoadStatusZGLD)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (statusValue_ != null) hash ^= StatusValue.GetHashCode();
      if (isUncontrollable_ != null) hash ^= IsUncontrollable.GetHashCode();
      if (loadStatusZGLD_ != null) hash ^= LoadStatusZGLD.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusValue);
      }
      if (isUncontrollable_ != null) {
        _single_isUncontrollable_codec.WriteTagAndValue(output, IsUncontrollable);
      }
      if (loadStatusZGLD_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadStatusZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusValue);
      }
      if (isUncontrollable_ != null) {
        _single_isUncontrollable_codec.WriteTagAndValue(ref output, IsUncontrollable);
      }
      if (loadStatusZGLD_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadStatusZGLD);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (statusValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusValue);
      }
      if (isUncontrollable_ != null) {
        size += _single_isUncontrollable_codec.CalculateSizeWithTag(IsUncontrollable);
      }
      if (loadStatusZGLD_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadStatusZGLD);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadStatus other) {
      if (other == null) {
        return;
      }
      if (other.statusValue_ != null) {
        if (statusValue_ == null) {
          StatusValue = new global::openfmb.commonmodule.StatusValue();
        }
        StatusValue.MergeFrom(other.StatusValue);
      }
      if (other.isUncontrollable_ != null) {
        if (isUncontrollable_ == null || other.IsUncontrollable != false) {
          IsUncontrollable = other.IsUncontrollable;
        }
      }
      if (other.loadStatusZGLD_ != null) {
        if (loadStatusZGLD_ == null) {
          LoadStatusZGLD = new global::openfmb.loadmodule.LoadStatusZGLD();
        }
        LoadStatusZGLD.MergeFrom(other.LoadStatusZGLD);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusValue_ == null) {
              StatusValue = new global::openfmb.commonmodule.StatusValue();
            }
            input.ReadMessage(StatusValue);
            break;
          }
          case 18: {
            bool? value = _single_isUncontrollable_codec.Read(input);
            if (isUncontrollable_ == null || value != false) {
              IsUncontrollable = value;
            }
            break;
          }
          case 26: {
            if (loadStatusZGLD_ == null) {
              LoadStatusZGLD = new global::openfmb.loadmodule.LoadStatusZGLD();
            }
            input.ReadMessage(LoadStatusZGLD);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusValue_ == null) {
              StatusValue = new global::openfmb.commonmodule.StatusValue();
            }
            input.ReadMessage(StatusValue);
            break;
          }
          case 18: {
            bool? value = _single_isUncontrollable_codec.Read(ref input);
            if (isUncontrollable_ == null || value != false) {
              IsUncontrollable = value;
            }
            break;
          }
          case 26: {
            if (loadStatusZGLD_ == null) {
              LoadStatusZGLD = new global::openfmb.loadmodule.LoadStatusZGLD();
            }
            input.ReadMessage(LoadStatusZGLD);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Load status profile
  /// </summary>
  public sealed partial class LoadStatusProfile : pb::IMessage<LoadStatusProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LoadStatusProfile> _parser = new pb::MessageParser<LoadStatusProfile>(() => new LoadStatusProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoadStatusProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.loadmodule.LoadmoduleReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatusProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatusProfile(LoadStatusProfile other) : this() {
      statusMessageInfo_ = other.statusMessageInfo_ != null ? other.statusMessageInfo_.Clone() : null;
      energyConsumer_ = other.energyConsumer_ != null ? other.energyConsumer_.Clone() : null;
      loadStatus_ = other.loadStatus_ != null ? other.loadStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoadStatusProfile Clone() {
      return new LoadStatusProfile(this);
    }

    /// <summary>Field number for the "statusMessageInfo" field.</summary>
    public const int StatusMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.StatusMessageInfo statusMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusMessageInfo StatusMessageInfo {
      get { return statusMessageInfo_; }
      set {
        statusMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "energyConsumer" field.</summary>
    public const int EnergyConsumerFieldNumber = 2;
    private global::openfmb.commonmodule.EnergyConsumer energyConsumer_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EnergyConsumer EnergyConsumer {
      get { return energyConsumer_; }
      set {
        energyConsumer_ = value;
      }
    }

    /// <summary>Field number for the "loadStatus" field.</summary>
    public const int LoadStatusFieldNumber = 3;
    private global::openfmb.loadmodule.LoadStatus loadStatus_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.loadmodule.LoadStatus LoadStatus {
      get { return loadStatus_; }
      set {
        loadStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoadStatusProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoadStatusProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusMessageInfo, other.StatusMessageInfo)) return false;
      if (!object.Equals(EnergyConsumer, other.EnergyConsumer)) return false;
      if (!object.Equals(LoadStatus, other.LoadStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (statusMessageInfo_ != null) hash ^= StatusMessageInfo.GetHashCode();
      if (energyConsumer_ != null) hash ^= EnergyConsumer.GetHashCode();
      if (loadStatus_ != null) hash ^= LoadStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusMessageInfo);
      }
      if (energyConsumer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EnergyConsumer);
      }
      if (loadStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(LoadStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (statusMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusMessageInfo);
      }
      if (energyConsumer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnergyConsumer);
      }
      if (loadStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LoadStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoadStatusProfile other) {
      if (other == null) {
        return;
      }
      if (other.statusMessageInfo_ != null) {
        if (statusMessageInfo_ == null) {
          StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
        }
        StatusMessageInfo.MergeFrom(other.StatusMessageInfo);
      }
      if (other.energyConsumer_ != null) {
        if (energyConsumer_ == null) {
          EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
        }
        EnergyConsumer.MergeFrom(other.EnergyConsumer);
      }
      if (other.loadStatus_ != null) {
        if (loadStatus_ == null) {
          LoadStatus = new global::openfmb.loadmodule.LoadStatus();
        }
        LoadStatus.MergeFrom(other.LoadStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusMessageInfo_ == null) {
              StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
            }
            input.ReadMessage(StatusMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadStatus_ == null) {
              LoadStatus = new global::openfmb.loadmodule.LoadStatus();
            }
            input.ReadMessage(LoadStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusMessageInfo_ == null) {
              StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
            }
            input.ReadMessage(StatusMessageInfo);
            break;
          }
          case 18: {
            if (energyConsumer_ == null) {
              EnergyConsumer = new global::openfmb.commonmodule.EnergyConsumer();
            }
            input.ReadMessage(EnergyConsumer);
            break;
          }
          case 26: {
            if (loadStatus_ == null) {
              LoadStatus = new global::openfmb.loadmodule.LoadStatus();
            }
            input.ReadMessage(LoadStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
