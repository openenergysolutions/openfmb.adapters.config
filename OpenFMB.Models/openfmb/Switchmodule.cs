// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: switchmodule/switchmodule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace openfmb.switchmodule {

  /// <summary>Holder for reflection information generated from switchmodule/switchmodule.proto</summary>
  public static partial class SwitchmoduleReflection {

    #region Descriptor
    /// <summary>File descriptor for switchmodule/switchmodule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SwitchmoduleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9zd2l0Y2htb2R1bGUvc3dpdGNobW9kdWxlLnByb3RvEgxzd2l0Y2htb2R1",
            "bGUaCXVtbC5wcm90bxofY29tbW9ubW9kdWxlL2NvbW1vbm1vZHVsZS5wcm90",
            "byLDAQoZU3dpdGNoRGlzY3JldGVDb250cm9sWFNXSRJIChVsb2dpY2FsTm9k",
            "ZUZvckNvbnRyb2wYASABKAsyIy5jb21tb25tb2R1bGUuTG9naWNhbE5vZGVG",
            "b3JDb250cm9sQgSAtRgBEiMKA1BvcxgCIAEoCzIWLmNvbW1vbm1vZHVsZS5Q",
            "aGFzZURQQxI3ChVSZXNldFByb3RlY3Rpb25QaWNrdXAYAyABKAsyGC5jb21t",
            "b25tb2R1bGUuQ29udHJvbFNQQyLJAQoVU3dpdGNoRGlzY3JldGVDb250cm9s",
            "EjYKDGNvbnRyb2xWYWx1ZRgBIAEoCzIaLmNvbW1vbm1vZHVsZS5Db250cm9s",
            "VmFsdWVCBIC1GAESLAoFY2hlY2sYAiABKAsyHS5jb21tb25tb2R1bGUuQ2hl",
            "Y2tDb25kaXRpb25zEkoKGXN3aXRjaERpc2NyZXRlQ29udHJvbFhTV0kYAyAB",
            "KAsyJy5zd2l0Y2htb2R1bGUuU3dpdGNoRGlzY3JldGVDb250cm9sWFNXSSJX",
            "Cg9Qcm90ZWN0ZWRTd2l0Y2gSRAoTY29uZHVjdGluZ0VxdWlwbWVudBgBIAEo",
            "CzIhLmNvbW1vbm1vZHVsZS5Db25kdWN0aW5nRXF1aXBtZW50QgSAtRgBIvgB",
            "ChxTd2l0Y2hEaXNjcmV0ZUNvbnRyb2xQcm9maWxlEkIKEmNvbnRyb2xNZXNz",
            "YWdlSW5mbxgBIAEoCzIgLmNvbW1vbm1vZHVsZS5Db250cm9sTWVzc2FnZUlu",
            "Zm9CBIC1GAESQAoPcHJvdGVjdGVkU3dpdGNoGAIgASgLMh0uc3dpdGNobW9k",
            "dWxlLlByb3RlY3RlZFN3aXRjaEIIiLUYAZC1GAESTAoVc3dpdGNoRGlzY3Jl",
            "dGVDb250cm9sGAMgASgLMiMuc3dpdGNobW9kdWxlLlN3aXRjaERpc2NyZXRl",
            "Q29udHJvbEIIiLUYAZC1GAE6BMDzGAEixgEKD1N3aXRjaEV2ZW50WFNXSRJW",
            "Chxsb2dpY2FsTm9kZUZvckV2ZW50QW5kU3RhdHVzGAEgASgLMiouY29tbW9u",
            "bW9kdWxlLkxvZ2ljYWxOb2RlRm9yRXZlbnRBbmRTdGF0dXNCBIC1GAESNgoL",
            "RHluYW1pY1Rlc3QYAiABKAsyIS5jb21tb25tb2R1bGUuRU5TX0R5bmFtaWNU",
            "ZXN0S2luZBIjCgNQb3MYAyABKAsyFi5jb21tb25tb2R1bGUuUGhhc2VEUFMi",
            "eQoLU3dpdGNoRXZlbnQSMgoKZXZlbnRWYWx1ZRgBIAEoCzIYLmNvbW1vbm1v",
            "ZHVsZS5FdmVudFZhbHVlQgSAtRgBEjYKD3N3aXRjaEV2ZW50WFNXSRgCIAEo",
            "CzIdLnN3aXRjaG1vZHVsZS5Td2l0Y2hFdmVudFhTV0ki1gEKElN3aXRjaEV2",
            "ZW50UHJvZmlsZRI+ChBldmVudE1lc3NhZ2VJbmZvGAEgASgLMh4uY29tbW9u",
            "bW9kdWxlLkV2ZW50TWVzc2FnZUluZm9CBIC1GAESQAoPcHJvdGVjdGVkU3dp",
            "dGNoGAIgASgLMh0uc3dpdGNobW9kdWxlLlByb3RlY3RlZFN3aXRjaEIIiLUY",
            "AZC1GAESOAoLc3dpdGNoRXZlbnQYAyABKAsyGS5zd2l0Y2htb2R1bGUuU3dp",
            "dGNoRXZlbnRCCIi1GAGQtRgBOgTA8xgBIrMCCg1Td2l0Y2hSZWFkaW5nEmIK",
            "ImNvbmR1Y3RpbmdFcXVpcG1lbnRUZXJtaW5hbFJlYWRpbmcYASABKAsyMC5j",
            "b21tb25tb2R1bGUuQ29uZHVjdGluZ0VxdWlwbWVudFRlcm1pbmFsUmVhZGlu",
            "Z0IEgLUYARIyCg9kaWZmUmVhZGluZ01NWFUYAiABKAsyGS5jb21tb25tb2R1",
            "bGUuUmVhZGluZ01NWFUSKgoJcGhhc2VNTVROGAMgASgLMhcuY29tbW9ubW9k",
            "dWxlLlBoYXNlTU1UThIuCgtyZWFkaW5nTU1UUhgEIAEoCzIZLmNvbW1vbm1v",
            "ZHVsZS5SZWFkaW5nTU1UUhIuCgtyZWFkaW5nTU1YVRgFIAEoCzIZLmNvbW1v",
            "bm1vZHVsZS5SZWFkaW5nTU1YVSLkAQoUU3dpdGNoUmVhZGluZ1Byb2ZpbGUS",
            "QgoScmVhZGluZ01lc3NhZ2VJbmZvGAEgASgLMiAuY29tbW9ubW9kdWxlLlJl",
            "YWRpbmdNZXNzYWdlSW5mb0IEgLUYARJACg9wcm90ZWN0ZWRTd2l0Y2gYAiAB",
            "KAsyHS5zd2l0Y2htb2R1bGUuUHJvdGVjdGVkU3dpdGNoQgiItRgBkLUYARJA",
            "Cg1zd2l0Y2hSZWFkaW5nGAMgAygLMhsuc3dpdGNobW9kdWxlLlN3aXRjaFJl",
            "YWRpbmdCDIi1GAGQtRgBmLUYAjoEwPMYASKDAgoQU3dpdGNoU3RhdHVzWFNX",
            "SRJWChxsb2dpY2FsTm9kZUZvckV2ZW50QW5kU3RhdHVzGAEgASgLMiouY29t",
            "bW9ubW9kdWxlLkxvZ2ljYWxOb2RlRm9yRXZlbnRBbmRTdGF0dXNCBIC1GAES",
            "NgoLRHluYW1pY1Rlc3QYAiABKAsyIS5jb21tb25tb2R1bGUuRU5TX0R5bmFt",
            "aWNUZXN0S2luZBIjCgNQb3MYBCABKAsyFi5jb21tb25tb2R1bGUuUGhhc2VE",
            "UFMSOgoQUHJvdGVjdGlvblBpY2t1cBgFIAEoCzIWLmNvbW1vbm1vZHVsZS5Q",
            "aGFzZVNQU0IIiLUYAZC1GAEifgoMU3dpdGNoU3RhdHVzEjQKC3N0YXR1c1Zh",
            "bHVlGAEgASgLMhkuY29tbW9ubW9kdWxlLlN0YXR1c1ZhbHVlQgSAtRgBEjgK",
            "EHN3aXRjaFN0YXR1c1hTV0kYAiABKAsyHi5zd2l0Y2htb2R1bGUuU3dpdGNo",
            "U3RhdHVzWFNXSSLbAQoTU3dpdGNoU3RhdHVzUHJvZmlsZRJAChFzdGF0dXNN",
            "ZXNzYWdlSW5mbxgBIAEoCzIfLmNvbW1vbm1vZHVsZS5TdGF0dXNNZXNzYWdl",
            "SW5mb0IEgLUYARJACg9wcm90ZWN0ZWRTd2l0Y2gYAiABKAsyHS5zd2l0Y2ht",
            "b2R1bGUuUHJvdGVjdGVkU3dpdGNoQgiItRgBkLUYARI6Cgxzd2l0Y2hTdGF0",
            "dXMYAyABKAsyGi5zd2l0Y2htb2R1bGUuU3dpdGNoU3RhdHVzQgiItRgBkLUY",
            "AToEwPMYAUKEAQoUb3BlbmZtYi5zd2l0Y2htb2R1bGVQAVpTZ2l0bGFiLmNv",
            "bS9vcGVuZm1iL3BzbS9vcHMvcHJvdG9idWYvZ28tb3BlbmZtYi1vcHMtcHJv",
            "dG9idWYvdjIvb3BlbmZtYi9zd2l0Y2htb2R1bGWqAhRvcGVuZm1iLnN3aXRj",
            "aG1vZHVsZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::openfmb.UmlReflection.Descriptor, global::openfmb.commonmodule.CommonmoduleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchDiscreteControlXSWI), global::openfmb.switchmodule.SwitchDiscreteControlXSWI.Parser, new[]{ "LogicalNodeForControl", "Pos", "ResetProtectionPickup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchDiscreteControl), global::openfmb.switchmodule.SwitchDiscreteControl.Parser, new[]{ "ControlValue", "Check", "SwitchDiscreteControlXSWI" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.ProtectedSwitch), global::openfmb.switchmodule.ProtectedSwitch.Parser, new[]{ "ConductingEquipment" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchDiscreteControlProfile), global::openfmb.switchmodule.SwitchDiscreteControlProfile.Parser, new[]{ "ControlMessageInfo", "ProtectedSwitch", "SwitchDiscreteControl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchEventXSWI), global::openfmb.switchmodule.SwitchEventXSWI.Parser, new[]{ "LogicalNodeForEventAndStatus", "DynamicTest", "Pos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchEvent), global::openfmb.switchmodule.SwitchEvent.Parser, new[]{ "EventValue", "SwitchEventXSWI" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchEventProfile), global::openfmb.switchmodule.SwitchEventProfile.Parser, new[]{ "EventMessageInfo", "ProtectedSwitch", "SwitchEvent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchReading), global::openfmb.switchmodule.SwitchReading.Parser, new[]{ "ConductingEquipmentTerminalReading", "DiffReadingMMXU", "PhaseMMTN", "ReadingMMTR", "ReadingMMXU" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchReadingProfile), global::openfmb.switchmodule.SwitchReadingProfile.Parser, new[]{ "ReadingMessageInfo", "ProtectedSwitch", "SwitchReading" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchStatusXSWI), global::openfmb.switchmodule.SwitchStatusXSWI.Parser, new[]{ "LogicalNodeForEventAndStatus", "DynamicTest", "Pos", "ProtectionPickup" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchStatus), global::openfmb.switchmodule.SwitchStatus.Parser, new[]{ "StatusValue", "SwitchStatusXSWI" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.switchmodule.SwitchStatusProfile), global::openfmb.switchmodule.SwitchStatusProfile.Parser, new[]{ "StatusMessageInfo", "ProtectedSwitch", "SwitchStatus" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// OpenFMB specialization for switch control:  LN: Circuit switch   Name: XSWI
  /// </summary>
  public sealed partial class SwitchDiscreteControlXSWI : pb::IMessage<SwitchDiscreteControlXSWI>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchDiscreteControlXSWI> _parser = new pb::MessageParser<SwitchDiscreteControlXSWI>(() => new SwitchDiscreteControlXSWI());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchDiscreteControlXSWI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControlXSWI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControlXSWI(SwitchDiscreteControlXSWI other) : this() {
      logicalNodeForControl_ = other.logicalNodeForControl_ != null ? other.logicalNodeForControl_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      resetProtectionPickup_ = other.resetProtectionPickup_ != null ? other.resetProtectionPickup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControlXSWI Clone() {
      return new SwitchDiscreteControlXSWI(this);
    }

    /// <summary>Field number for the "logicalNodeForControl" field.</summary>
    public const int LogicalNodeForControlFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNodeForControl logicalNodeForControl_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.LogicalNodeForControl LogicalNodeForControl {
      get { return logicalNodeForControl_; }
      set {
        logicalNodeForControl_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::openfmb.commonmodule.PhaseDPC pos_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseDPC Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "ResetProtectionPickup" field.</summary>
    public const int ResetProtectionPickupFieldNumber = 3;
    private global::openfmb.commonmodule.ControlSPC resetProtectionPickup_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlSPC ResetProtectionPickup {
      get { return resetProtectionPickup_; }
      set {
        resetProtectionPickup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchDiscreteControlXSWI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchDiscreteControlXSWI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNodeForControl, other.LogicalNodeForControl)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(ResetProtectionPickup, other.ResetProtectionPickup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNodeForControl_ != null) hash ^= LogicalNodeForControl.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (resetProtectionPickup_ != null) hash ^= ResetProtectionPickup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNodeForControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForControl);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (resetProtectionPickup_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResetProtectionPickup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNodeForControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForControl);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (resetProtectionPickup_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResetProtectionPickup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logicalNodeForControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNodeForControl);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (resetProtectionPickup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResetProtectionPickup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchDiscreteControlXSWI other) {
      if (other == null) {
        return;
      }
      if (other.logicalNodeForControl_ != null) {
        if (logicalNodeForControl_ == null) {
          LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
        }
        LogicalNodeForControl.MergeFrom(other.LogicalNodeForControl);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::openfmb.commonmodule.PhaseDPC();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.resetProtectionPickup_ != null) {
        if (resetProtectionPickup_ == null) {
          ResetProtectionPickup = new global::openfmb.commonmodule.ControlSPC();
        }
        ResetProtectionPickup.MergeFrom(other.ResetProtectionPickup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNodeForControl_ == null) {
              LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
            }
            input.ReadMessage(LogicalNodeForControl);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::openfmb.commonmodule.PhaseDPC();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (resetProtectionPickup_ == null) {
              ResetProtectionPickup = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(ResetProtectionPickup);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNodeForControl_ == null) {
              LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
            }
            input.ReadMessage(LogicalNodeForControl);
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::openfmb.commonmodule.PhaseDPC();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 26: {
            if (resetProtectionPickup_ == null) {
              ResetProtectionPickup = new global::openfmb.commonmodule.ControlSPC();
            }
            input.ReadMessage(ResetProtectionPickup);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch discrete control
  /// </summary>
  public sealed partial class SwitchDiscreteControl : pb::IMessage<SwitchDiscreteControl>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchDiscreteControl> _parser = new pb::MessageParser<SwitchDiscreteControl>(() => new SwitchDiscreteControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchDiscreteControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControl(SwitchDiscreteControl other) : this() {
      controlValue_ = other.controlValue_ != null ? other.controlValue_.Clone() : null;
      check_ = other.check_ != null ? other.check_.Clone() : null;
      switchDiscreteControlXSWI_ = other.switchDiscreteControlXSWI_ != null ? other.switchDiscreteControlXSWI_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControl Clone() {
      return new SwitchDiscreteControl(this);
    }

    /// <summary>Field number for the "controlValue" field.</summary>
    public const int ControlValueFieldNumber = 1;
    private global::openfmb.commonmodule.ControlValue controlValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlValue ControlValue {
      get { return controlValue_; }
      set {
        controlValue_ = value;
      }
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 2;
    private global::openfmb.commonmodule.CheckConditions check_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.CheckConditions Check {
      get { return check_; }
      set {
        check_ = value;
      }
    }

    /// <summary>Field number for the "switchDiscreteControlXSWI" field.</summary>
    public const int SwitchDiscreteControlXSWIFieldNumber = 3;
    private global::openfmb.switchmodule.SwitchDiscreteControlXSWI switchDiscreteControlXSWI_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.SwitchDiscreteControlXSWI SwitchDiscreteControlXSWI {
      get { return switchDiscreteControlXSWI_; }
      set {
        switchDiscreteControlXSWI_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchDiscreteControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchDiscreteControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlValue, other.ControlValue)) return false;
      if (!object.Equals(Check, other.Check)) return false;
      if (!object.Equals(SwitchDiscreteControlXSWI, other.SwitchDiscreteControlXSWI)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (controlValue_ != null) hash ^= ControlValue.GetHashCode();
      if (check_ != null) hash ^= Check.GetHashCode();
      if (switchDiscreteControlXSWI_ != null) hash ^= SwitchDiscreteControlXSWI.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (switchDiscreteControlXSWI_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchDiscreteControlXSWI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlValue);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (switchDiscreteControlXSWI_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchDiscreteControlXSWI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (controlValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlValue);
      }
      if (check_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Check);
      }
      if (switchDiscreteControlXSWI_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitchDiscreteControlXSWI);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchDiscreteControl other) {
      if (other == null) {
        return;
      }
      if (other.controlValue_ != null) {
        if (controlValue_ == null) {
          ControlValue = new global::openfmb.commonmodule.ControlValue();
        }
        ControlValue.MergeFrom(other.ControlValue);
      }
      if (other.check_ != null) {
        if (check_ == null) {
          Check = new global::openfmb.commonmodule.CheckConditions();
        }
        Check.MergeFrom(other.Check);
      }
      if (other.switchDiscreteControlXSWI_ != null) {
        if (switchDiscreteControlXSWI_ == null) {
          SwitchDiscreteControlXSWI = new global::openfmb.switchmodule.SwitchDiscreteControlXSWI();
        }
        SwitchDiscreteControlXSWI.MergeFrom(other.SwitchDiscreteControlXSWI);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (switchDiscreteControlXSWI_ == null) {
              SwitchDiscreteControlXSWI = new global::openfmb.switchmodule.SwitchDiscreteControlXSWI();
            }
            input.ReadMessage(SwitchDiscreteControlXSWI);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlValue_ == null) {
              ControlValue = new global::openfmb.commonmodule.ControlValue();
            }
            input.ReadMessage(ControlValue);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (switchDiscreteControlXSWI_ == null) {
              SwitchDiscreteControlXSWI = new global::openfmb.switchmodule.SwitchDiscreteControlXSWI();
            }
            input.ReadMessage(SwitchDiscreteControlXSWI);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A ProtectedSwitch is a switching device that can be operated by ProtectionEquipment.
  /// </summary>
  public sealed partial class ProtectedSwitch : pb::IMessage<ProtectedSwitch>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtectedSwitch> _parser = new pb::MessageParser<ProtectedSwitch>(() => new ProtectedSwitch());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtectedSwitch> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtectedSwitch() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtectedSwitch(ProtectedSwitch other) : this() {
      conductingEquipment_ = other.conductingEquipment_ != null ? other.conductingEquipment_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtectedSwitch Clone() {
      return new ProtectedSwitch(this);
    }

    /// <summary>Field number for the "conductingEquipment" field.</summary>
    public const int ConductingEquipmentFieldNumber = 1;
    private global::openfmb.commonmodule.ConductingEquipment conductingEquipment_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ConductingEquipment ConductingEquipment {
      get { return conductingEquipment_; }
      set {
        conductingEquipment_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtectedSwitch);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtectedSwitch other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConductingEquipment, other.ConductingEquipment)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (conductingEquipment_ != null) hash ^= ConductingEquipment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (conductingEquipment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (conductingEquipment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (conductingEquipment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConductingEquipment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtectedSwitch other) {
      if (other == null) {
        return;
      }
      if (other.conductingEquipment_ != null) {
        if (conductingEquipment_ == null) {
          ConductingEquipment = new global::openfmb.commonmodule.ConductingEquipment();
        }
        ConductingEquipment.MergeFrom(other.ConductingEquipment);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (conductingEquipment_ == null) {
              ConductingEquipment = new global::openfmb.commonmodule.ConductingEquipment();
            }
            input.ReadMessage(ConductingEquipment);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (conductingEquipment_ == null) {
              ConductingEquipment = new global::openfmb.commonmodule.ConductingEquipment();
            }
            input.ReadMessage(ConductingEquipment);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch control profile
  /// </summary>
  public sealed partial class SwitchDiscreteControlProfile : pb::IMessage<SwitchDiscreteControlProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchDiscreteControlProfile> _parser = new pb::MessageParser<SwitchDiscreteControlProfile>(() => new SwitchDiscreteControlProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchDiscreteControlProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControlProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControlProfile(SwitchDiscreteControlProfile other) : this() {
      controlMessageInfo_ = other.controlMessageInfo_ != null ? other.controlMessageInfo_.Clone() : null;
      protectedSwitch_ = other.protectedSwitch_ != null ? other.protectedSwitch_.Clone() : null;
      switchDiscreteControl_ = other.switchDiscreteControl_ != null ? other.switchDiscreteControl_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchDiscreteControlProfile Clone() {
      return new SwitchDiscreteControlProfile(this);
    }

    /// <summary>Field number for the "controlMessageInfo" field.</summary>
    public const int ControlMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ControlMessageInfo controlMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ControlMessageInfo ControlMessageInfo {
      get { return controlMessageInfo_; }
      set {
        controlMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "protectedSwitch" field.</summary>
    public const int ProtectedSwitchFieldNumber = 2;
    private global::openfmb.switchmodule.ProtectedSwitch protectedSwitch_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.ProtectedSwitch ProtectedSwitch {
      get { return protectedSwitch_; }
      set {
        protectedSwitch_ = value;
      }
    }

    /// <summary>Field number for the "switchDiscreteControl" field.</summary>
    public const int SwitchDiscreteControlFieldNumber = 3;
    private global::openfmb.switchmodule.SwitchDiscreteControl switchDiscreteControl_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.SwitchDiscreteControl SwitchDiscreteControl {
      get { return switchDiscreteControl_; }
      set {
        switchDiscreteControl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchDiscreteControlProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchDiscreteControlProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlMessageInfo, other.ControlMessageInfo)) return false;
      if (!object.Equals(ProtectedSwitch, other.ProtectedSwitch)) return false;
      if (!object.Equals(SwitchDiscreteControl, other.SwitchDiscreteControl)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (controlMessageInfo_ != null) hash ^= ControlMessageInfo.GetHashCode();
      if (protectedSwitch_ != null) hash ^= ProtectedSwitch.GetHashCode();
      if (switchDiscreteControl_ != null) hash ^= SwitchDiscreteControl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      if (switchDiscreteControl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchDiscreteControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      if (switchDiscreteControl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchDiscreteControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (controlMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlMessageInfo);
      }
      if (protectedSwitch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtectedSwitch);
      }
      if (switchDiscreteControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitchDiscreteControl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchDiscreteControlProfile other) {
      if (other == null) {
        return;
      }
      if (other.controlMessageInfo_ != null) {
        if (controlMessageInfo_ == null) {
          ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
        }
        ControlMessageInfo.MergeFrom(other.ControlMessageInfo);
      }
      if (other.protectedSwitch_ != null) {
        if (protectedSwitch_ == null) {
          ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
        }
        ProtectedSwitch.MergeFrom(other.ProtectedSwitch);
      }
      if (other.switchDiscreteControl_ != null) {
        if (switchDiscreteControl_ == null) {
          SwitchDiscreteControl = new global::openfmb.switchmodule.SwitchDiscreteControl();
        }
        SwitchDiscreteControl.MergeFrom(other.SwitchDiscreteControl);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            if (switchDiscreteControl_ == null) {
              SwitchDiscreteControl = new global::openfmb.switchmodule.SwitchDiscreteControl();
            }
            input.ReadMessage(SwitchDiscreteControl);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            if (switchDiscreteControl_ == null) {
              SwitchDiscreteControl = new global::openfmb.switchmodule.SwitchDiscreteControl();
            }
            input.ReadMessage(SwitchDiscreteControl);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB specialization for SwitchEventProfile
  /// </summary>
  public sealed partial class SwitchEventXSWI : pb::IMessage<SwitchEventXSWI>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchEventXSWI> _parser = new pb::MessageParser<SwitchEventXSWI>(() => new SwitchEventXSWI());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchEventXSWI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEventXSWI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEventXSWI(SwitchEventXSWI other) : this() {
      logicalNodeForEventAndStatus_ = other.logicalNodeForEventAndStatus_ != null ? other.logicalNodeForEventAndStatus_.Clone() : null;
      dynamicTest_ = other.dynamicTest_ != null ? other.dynamicTest_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEventXSWI Clone() {
      return new SwitchEventXSWI(this);
    }

    /// <summary>Field number for the "logicalNodeForEventAndStatus" field.</summary>
    public const int LogicalNodeForEventAndStatusFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.LogicalNodeForEventAndStatus LogicalNodeForEventAndStatus {
      get { return logicalNodeForEventAndStatus_; }
      set {
        logicalNodeForEventAndStatus_ = value;
      }
    }

    /// <summary>Field number for the "DynamicTest" field.</summary>
    public const int DynamicTestFieldNumber = 2;
    private global::openfmb.commonmodule.ENS_DynamicTestKind dynamicTest_;
    /// <summary>
    /// Dynamic test status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ENS_DynamicTestKind DynamicTest {
      get { return dynamicTest_; }
      set {
        dynamicTest_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 3;
    private global::openfmb.commonmodule.PhaseDPS pos_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseDPS Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchEventXSWI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchEventXSWI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNodeForEventAndStatus, other.LogicalNodeForEventAndStatus)) return false;
      if (!object.Equals(DynamicTest, other.DynamicTest)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNodeForEventAndStatus_ != null) hash ^= LogicalNodeForEventAndStatus.GetHashCode();
      if (dynamicTest_ != null) hash ^= DynamicTest.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (pos_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logicalNodeForEventAndStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicTest);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchEventXSWI other) {
      if (other == null) {
        return;
      }
      if (other.logicalNodeForEventAndStatus_ != null) {
        if (logicalNodeForEventAndStatus_ == null) {
          LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
        }
        LogicalNodeForEventAndStatus.MergeFrom(other.LogicalNodeForEventAndStatus);
      }
      if (other.dynamicTest_ != null) {
        if (dynamicTest_ == null) {
          DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
        }
        DynamicTest.MergeFrom(other.DynamicTest);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::openfmb.commonmodule.PhaseDPS();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::openfmb.commonmodule.PhaseDPS();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 26: {
            if (pos_ == null) {
              Pos = new global::openfmb.commonmodule.PhaseDPS();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch event
  /// </summary>
  public sealed partial class SwitchEvent : pb::IMessage<SwitchEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchEvent> _parser = new pb::MessageParser<SwitchEvent>(() => new SwitchEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEvent(SwitchEvent other) : this() {
      eventValue_ = other.eventValue_ != null ? other.eventValue_.Clone() : null;
      switchEventXSWI_ = other.switchEventXSWI_ != null ? other.switchEventXSWI_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEvent Clone() {
      return new SwitchEvent(this);
    }

    /// <summary>Field number for the "eventValue" field.</summary>
    public const int EventValueFieldNumber = 1;
    private global::openfmb.commonmodule.EventValue eventValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.EventValue EventValue {
      get { return eventValue_; }
      set {
        eventValue_ = value;
      }
    }

    /// <summary>Field number for the "switchEventXSWI" field.</summary>
    public const int SwitchEventXSWIFieldNumber = 2;
    private global::openfmb.switchmodule.SwitchEventXSWI switchEventXSWI_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.SwitchEventXSWI SwitchEventXSWI {
      get { return switchEventXSWI_; }
      set {
        switchEventXSWI_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventValue, other.EventValue)) return false;
      if (!object.Equals(SwitchEventXSWI, other.SwitchEventXSWI)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (eventValue_ != null) hash ^= EventValue.GetHashCode();
      if (switchEventXSWI_ != null) hash ^= SwitchEventXSWI.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventValue);
      }
      if (switchEventXSWI_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SwitchEventXSWI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventValue);
      }
      if (switchEventXSWI_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SwitchEventXSWI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (eventValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventValue);
      }
      if (switchEventXSWI_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitchEventXSWI);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchEvent other) {
      if (other == null) {
        return;
      }
      if (other.eventValue_ != null) {
        if (eventValue_ == null) {
          EventValue = new global::openfmb.commonmodule.EventValue();
        }
        EventValue.MergeFrom(other.EventValue);
      }
      if (other.switchEventXSWI_ != null) {
        if (switchEventXSWI_ == null) {
          SwitchEventXSWI = new global::openfmb.switchmodule.SwitchEventXSWI();
        }
        SwitchEventXSWI.MergeFrom(other.SwitchEventXSWI);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventValue_ == null) {
              EventValue = new global::openfmb.commonmodule.EventValue();
            }
            input.ReadMessage(EventValue);
            break;
          }
          case 18: {
            if (switchEventXSWI_ == null) {
              SwitchEventXSWI = new global::openfmb.switchmodule.SwitchEventXSWI();
            }
            input.ReadMessage(SwitchEventXSWI);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventValue_ == null) {
              EventValue = new global::openfmb.commonmodule.EventValue();
            }
            input.ReadMessage(EventValue);
            break;
          }
          case 18: {
            if (switchEventXSWI_ == null) {
              SwitchEventXSWI = new global::openfmb.switchmodule.SwitchEventXSWI();
            }
            input.ReadMessage(SwitchEventXSWI);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch event profile
  /// </summary>
  public sealed partial class SwitchEventProfile : pb::IMessage<SwitchEventProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchEventProfile> _parser = new pb::MessageParser<SwitchEventProfile>(() => new SwitchEventProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchEventProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEventProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEventProfile(SwitchEventProfile other) : this() {
      eventMessageInfo_ = other.eventMessageInfo_ != null ? other.eventMessageInfo_.Clone() : null;
      protectedSwitch_ = other.protectedSwitch_ != null ? other.protectedSwitch_.Clone() : null;
      switchEvent_ = other.switchEvent_ != null ? other.switchEvent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchEventProfile Clone() {
      return new SwitchEventProfile(this);
    }

    /// <summary>Field number for the "eventMessageInfo" field.</summary>
    public const int EventMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.EventMessageInfo eventMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.EventMessageInfo EventMessageInfo {
      get { return eventMessageInfo_; }
      set {
        eventMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "protectedSwitch" field.</summary>
    public const int ProtectedSwitchFieldNumber = 2;
    private global::openfmb.switchmodule.ProtectedSwitch protectedSwitch_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.ProtectedSwitch ProtectedSwitch {
      get { return protectedSwitch_; }
      set {
        protectedSwitch_ = value;
      }
    }

    /// <summary>Field number for the "switchEvent" field.</summary>
    public const int SwitchEventFieldNumber = 3;
    private global::openfmb.switchmodule.SwitchEvent switchEvent_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.SwitchEvent SwitchEvent {
      get { return switchEvent_; }
      set {
        switchEvent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchEventProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchEventProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventMessageInfo, other.EventMessageInfo)) return false;
      if (!object.Equals(ProtectedSwitch, other.ProtectedSwitch)) return false;
      if (!object.Equals(SwitchEvent, other.SwitchEvent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (eventMessageInfo_ != null) hash ^= EventMessageInfo.GetHashCode();
      if (protectedSwitch_ != null) hash ^= ProtectedSwitch.GetHashCode();
      if (switchEvent_ != null) hash ^= SwitchEvent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      if (switchEvent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      if (switchEvent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (eventMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventMessageInfo);
      }
      if (protectedSwitch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtectedSwitch);
      }
      if (switchEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitchEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchEventProfile other) {
      if (other == null) {
        return;
      }
      if (other.eventMessageInfo_ != null) {
        if (eventMessageInfo_ == null) {
          EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
        }
        EventMessageInfo.MergeFrom(other.EventMessageInfo);
      }
      if (other.protectedSwitch_ != null) {
        if (protectedSwitch_ == null) {
          ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
        }
        ProtectedSwitch.MergeFrom(other.ProtectedSwitch);
      }
      if (other.switchEvent_ != null) {
        if (switchEvent_ == null) {
          SwitchEvent = new global::openfmb.switchmodule.SwitchEvent();
        }
        SwitchEvent.MergeFrom(other.SwitchEvent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            if (switchEvent_ == null) {
              SwitchEvent = new global::openfmb.switchmodule.SwitchEvent();
            }
            input.ReadMessage(SwitchEvent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            if (switchEvent_ == null) {
              SwitchEvent = new global::openfmb.switchmodule.SwitchEvent();
            }
            input.ReadMessage(SwitchEvent);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch reading value
  /// </summary>
  public sealed partial class SwitchReading : pb::IMessage<SwitchReading>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchReading> _parser = new pb::MessageParser<SwitchReading>(() => new SwitchReading());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchReading> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchReading() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchReading(SwitchReading other) : this() {
      conductingEquipmentTerminalReading_ = other.conductingEquipmentTerminalReading_ != null ? other.conductingEquipmentTerminalReading_.Clone() : null;
      diffReadingMMXU_ = other.diffReadingMMXU_ != null ? other.diffReadingMMXU_.Clone() : null;
      phaseMMTN_ = other.phaseMMTN_ != null ? other.phaseMMTN_.Clone() : null;
      readingMMTR_ = other.readingMMTR_ != null ? other.readingMMTR_.Clone() : null;
      readingMMXU_ = other.readingMMXU_ != null ? other.readingMMXU_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchReading Clone() {
      return new SwitchReading(this);
    }

    /// <summary>Field number for the "conductingEquipmentTerminalReading" field.</summary>
    public const int ConductingEquipmentTerminalReadingFieldNumber = 1;
    private global::openfmb.commonmodule.ConductingEquipmentTerminalReading conductingEquipmentTerminalReading_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ConductingEquipmentTerminalReading ConductingEquipmentTerminalReading {
      get { return conductingEquipmentTerminalReading_; }
      set {
        conductingEquipmentTerminalReading_ = value;
      }
    }

    /// <summary>Field number for the "diffReadingMMXU" field.</summary>
    public const int DiffReadingMMXUFieldNumber = 2;
    private global::openfmb.commonmodule.ReadingMMXU diffReadingMMXU_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMMXU DiffReadingMMXU {
      get { return diffReadingMMXU_; }
      set {
        diffReadingMMXU_ = value;
      }
    }

    /// <summary>Field number for the "phaseMMTN" field.</summary>
    public const int PhaseMMTNFieldNumber = 3;
    private global::openfmb.commonmodule.PhaseMMTN phaseMMTN_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseMMTN PhaseMMTN {
      get { return phaseMMTN_; }
      set {
        phaseMMTN_ = value;
      }
    }

    /// <summary>Field number for the "readingMMTR" field.</summary>
    public const int ReadingMMTRFieldNumber = 4;
    private global::openfmb.commonmodule.ReadingMMTR readingMMTR_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMMTR ReadingMMTR {
      get { return readingMMTR_; }
      set {
        readingMMTR_ = value;
      }
    }

    /// <summary>Field number for the "readingMMXU" field.</summary>
    public const int ReadingMMXUFieldNumber = 5;
    private global::openfmb.commonmodule.ReadingMMXU readingMMXU_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMMXU ReadingMMXU {
      get { return readingMMXU_; }
      set {
        readingMMXU_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchReading);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchReading other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ConductingEquipmentTerminalReading, other.ConductingEquipmentTerminalReading)) return false;
      if (!object.Equals(DiffReadingMMXU, other.DiffReadingMMXU)) return false;
      if (!object.Equals(PhaseMMTN, other.PhaseMMTN)) return false;
      if (!object.Equals(ReadingMMTR, other.ReadingMMTR)) return false;
      if (!object.Equals(ReadingMMXU, other.ReadingMMXU)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (conductingEquipmentTerminalReading_ != null) hash ^= ConductingEquipmentTerminalReading.GetHashCode();
      if (diffReadingMMXU_ != null) hash ^= DiffReadingMMXU.GetHashCode();
      if (phaseMMTN_ != null) hash ^= PhaseMMTN.GetHashCode();
      if (readingMMTR_ != null) hash ^= ReadingMMTR.GetHashCode();
      if (readingMMXU_ != null) hash ^= ReadingMMXU.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (conductingEquipmentTerminalReading_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipmentTerminalReading);
      }
      if (diffReadingMMXU_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DiffReadingMMXU);
      }
      if (phaseMMTN_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ReadingMMXU);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (conductingEquipmentTerminalReading_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ConductingEquipmentTerminalReading);
      }
      if (diffReadingMMXU_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DiffReadingMMXU);
      }
      if (phaseMMTN_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ReadingMMXU);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (conductingEquipmentTerminalReading_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConductingEquipmentTerminalReading);
      }
      if (diffReadingMMXU_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiffReadingMMXU);
      }
      if (phaseMMTN_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhaseMMTN);
      }
      if (readingMMTR_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMMTR);
      }
      if (readingMMXU_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMMXU);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchReading other) {
      if (other == null) {
        return;
      }
      if (other.conductingEquipmentTerminalReading_ != null) {
        if (conductingEquipmentTerminalReading_ == null) {
          ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
        }
        ConductingEquipmentTerminalReading.MergeFrom(other.ConductingEquipmentTerminalReading);
      }
      if (other.diffReadingMMXU_ != null) {
        if (diffReadingMMXU_ == null) {
          DiffReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
        }
        DiffReadingMMXU.MergeFrom(other.DiffReadingMMXU);
      }
      if (other.phaseMMTN_ != null) {
        if (phaseMMTN_ == null) {
          PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
        }
        PhaseMMTN.MergeFrom(other.PhaseMMTN);
      }
      if (other.readingMMTR_ != null) {
        if (readingMMTR_ == null) {
          ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
        }
        ReadingMMTR.MergeFrom(other.ReadingMMTR);
      }
      if (other.readingMMXU_ != null) {
        if (readingMMXU_ == null) {
          ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
        }
        ReadingMMXU.MergeFrom(other.ReadingMMXU);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (conductingEquipmentTerminalReading_ == null) {
              ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
            }
            input.ReadMessage(ConductingEquipmentTerminalReading);
            break;
          }
          case 18: {
            if (diffReadingMMXU_ == null) {
              DiffReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(DiffReadingMMXU);
            break;
          }
          case 26: {
            if (phaseMMTN_ == null) {
              PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
            }
            input.ReadMessage(PhaseMMTN);
            break;
          }
          case 34: {
            if (readingMMTR_ == null) {
              ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
            }
            input.ReadMessage(ReadingMMTR);
            break;
          }
          case 42: {
            if (readingMMXU_ == null) {
              ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(ReadingMMXU);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (conductingEquipmentTerminalReading_ == null) {
              ConductingEquipmentTerminalReading = new global::openfmb.commonmodule.ConductingEquipmentTerminalReading();
            }
            input.ReadMessage(ConductingEquipmentTerminalReading);
            break;
          }
          case 18: {
            if (diffReadingMMXU_ == null) {
              DiffReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(DiffReadingMMXU);
            break;
          }
          case 26: {
            if (phaseMMTN_ == null) {
              PhaseMMTN = new global::openfmb.commonmodule.PhaseMMTN();
            }
            input.ReadMessage(PhaseMMTN);
            break;
          }
          case 34: {
            if (readingMMTR_ == null) {
              ReadingMMTR = new global::openfmb.commonmodule.ReadingMMTR();
            }
            input.ReadMessage(ReadingMMTR);
            break;
          }
          case 42: {
            if (readingMMXU_ == null) {
              ReadingMMXU = new global::openfmb.commonmodule.ReadingMMXU();
            }
            input.ReadMessage(ReadingMMXU);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch reading profile
  /// </summary>
  public sealed partial class SwitchReadingProfile : pb::IMessage<SwitchReadingProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchReadingProfile> _parser = new pb::MessageParser<SwitchReadingProfile>(() => new SwitchReadingProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchReadingProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchReadingProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchReadingProfile(SwitchReadingProfile other) : this() {
      readingMessageInfo_ = other.readingMessageInfo_ != null ? other.readingMessageInfo_.Clone() : null;
      protectedSwitch_ = other.protectedSwitch_ != null ? other.protectedSwitch_.Clone() : null;
      switchReading_ = other.switchReading_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchReadingProfile Clone() {
      return new SwitchReadingProfile(this);
    }

    /// <summary>Field number for the "readingMessageInfo" field.</summary>
    public const int ReadingMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ReadingMessageInfo readingMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ReadingMessageInfo ReadingMessageInfo {
      get { return readingMessageInfo_; }
      set {
        readingMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "protectedSwitch" field.</summary>
    public const int ProtectedSwitchFieldNumber = 2;
    private global::openfmb.switchmodule.ProtectedSwitch protectedSwitch_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.ProtectedSwitch ProtectedSwitch {
      get { return protectedSwitch_; }
      set {
        protectedSwitch_ = value;
      }
    }

    /// <summary>Field number for the "switchReading" field.</summary>
    public const int SwitchReadingFieldNumber = 3;
    private static readonly pb::FieldCodec<global::openfmb.switchmodule.SwitchReading> _repeated_switchReading_codec
        = pb::FieldCodec.ForMessage(26, global::openfmb.switchmodule.SwitchReading.Parser);
    private readonly pbc::RepeatedField<global::openfmb.switchmodule.SwitchReading> switchReading_ = new pbc::RepeatedField<global::openfmb.switchmodule.SwitchReading>();
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::openfmb.switchmodule.SwitchReading> SwitchReading {
      get { return switchReading_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchReadingProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchReadingProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ReadingMessageInfo, other.ReadingMessageInfo)) return false;
      if (!object.Equals(ProtectedSwitch, other.ProtectedSwitch)) return false;
      if(!switchReading_.Equals(other.switchReading_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (readingMessageInfo_ != null) hash ^= ReadingMessageInfo.GetHashCode();
      if (protectedSwitch_ != null) hash ^= ProtectedSwitch.GetHashCode();
      hash ^= switchReading_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (readingMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadingMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      switchReading_.WriteTo(output, _repeated_switchReading_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (readingMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ReadingMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      switchReading_.WriteTo(ref output, _repeated_switchReading_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (readingMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReadingMessageInfo);
      }
      if (protectedSwitch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtectedSwitch);
      }
      size += switchReading_.CalculateSize(_repeated_switchReading_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchReadingProfile other) {
      if (other == null) {
        return;
      }
      if (other.readingMessageInfo_ != null) {
        if (readingMessageInfo_ == null) {
          ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
        }
        ReadingMessageInfo.MergeFrom(other.ReadingMessageInfo);
      }
      if (other.protectedSwitch_ != null) {
        if (protectedSwitch_ == null) {
          ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
        }
        ProtectedSwitch.MergeFrom(other.ProtectedSwitch);
      }
      switchReading_.Add(other.switchReading_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (readingMessageInfo_ == null) {
              ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
            }
            input.ReadMessage(ReadingMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            switchReading_.AddEntriesFrom(input, _repeated_switchReading_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (readingMessageInfo_ == null) {
              ReadingMessageInfo = new global::openfmb.commonmodule.ReadingMessageInfo();
            }
            input.ReadMessage(ReadingMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            switchReading_.AddEntriesFrom(ref input, _repeated_switchReading_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB specialization for SwitchStatusProfile
  /// </summary>
  public sealed partial class SwitchStatusXSWI : pb::IMessage<SwitchStatusXSWI>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchStatusXSWI> _parser = new pb::MessageParser<SwitchStatusXSWI>(() => new SwitchStatusXSWI());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchStatusXSWI> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatusXSWI() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatusXSWI(SwitchStatusXSWI other) : this() {
      logicalNodeForEventAndStatus_ = other.logicalNodeForEventAndStatus_ != null ? other.logicalNodeForEventAndStatus_.Clone() : null;
      dynamicTest_ = other.dynamicTest_ != null ? other.dynamicTest_.Clone() : null;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      protectionPickup_ = other.protectionPickup_ != null ? other.protectionPickup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatusXSWI Clone() {
      return new SwitchStatusXSWI(this);
    }

    /// <summary>Field number for the "logicalNodeForEventAndStatus" field.</summary>
    public const int LogicalNodeForEventAndStatusFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNodeForEventAndStatus logicalNodeForEventAndStatus_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.LogicalNodeForEventAndStatus LogicalNodeForEventAndStatus {
      get { return logicalNodeForEventAndStatus_; }
      set {
        logicalNodeForEventAndStatus_ = value;
      }
    }

    /// <summary>Field number for the "DynamicTest" field.</summary>
    public const int DynamicTestFieldNumber = 2;
    private global::openfmb.commonmodule.ENS_DynamicTestKind dynamicTest_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.ENS_DynamicTestKind DynamicTest {
      get { return dynamicTest_; }
      set {
        dynamicTest_ = value;
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 4;
    private global::openfmb.commonmodule.PhaseDPS pos_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseDPS Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "ProtectionPickup" field.</summary>
    public const int ProtectionPickupFieldNumber = 5;
    private global::openfmb.commonmodule.PhaseSPS protectionPickup_;
    /// <summary>
    /// Fault latch: LT01=51A OR 51B OR 51C
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.PhaseSPS ProtectionPickup {
      get { return protectionPickup_; }
      set {
        protectionPickup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchStatusXSWI);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchStatusXSWI other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNodeForEventAndStatus, other.LogicalNodeForEventAndStatus)) return false;
      if (!object.Equals(DynamicTest, other.DynamicTest)) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      if (!object.Equals(ProtectionPickup, other.ProtectionPickup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNodeForEventAndStatus_ != null) hash ^= LogicalNodeForEventAndStatus.GetHashCode();
      if (dynamicTest_ != null) hash ^= DynamicTest.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (protectionPickup_ != null) hash ^= ProtectionPickup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (pos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pos);
      }
      if (protectionPickup_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProtectionPickup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNodeForEventAndStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DynamicTest);
      }
      if (pos_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pos);
      }
      if (protectionPickup_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ProtectionPickup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (logicalNodeForEventAndStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNodeForEventAndStatus);
      }
      if (dynamicTest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DynamicTest);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (protectionPickup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtectionPickup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchStatusXSWI other) {
      if (other == null) {
        return;
      }
      if (other.logicalNodeForEventAndStatus_ != null) {
        if (logicalNodeForEventAndStatus_ == null) {
          LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
        }
        LogicalNodeForEventAndStatus.MergeFrom(other.LogicalNodeForEventAndStatus);
      }
      if (other.dynamicTest_ != null) {
        if (dynamicTest_ == null) {
          DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
        }
        DynamicTest.MergeFrom(other.DynamicTest);
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::openfmb.commonmodule.PhaseDPS();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.protectionPickup_ != null) {
        if (protectionPickup_ == null) {
          ProtectionPickup = new global::openfmb.commonmodule.PhaseSPS();
        }
        ProtectionPickup.MergeFrom(other.ProtectionPickup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 34: {
            if (pos_ == null) {
              Pos = new global::openfmb.commonmodule.PhaseDPS();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 42: {
            if (protectionPickup_ == null) {
              ProtectionPickup = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(ProtectionPickup);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNodeForEventAndStatus_ == null) {
              LogicalNodeForEventAndStatus = new global::openfmb.commonmodule.LogicalNodeForEventAndStatus();
            }
            input.ReadMessage(LogicalNodeForEventAndStatus);
            break;
          }
          case 18: {
            if (dynamicTest_ == null) {
              DynamicTest = new global::openfmb.commonmodule.ENS_DynamicTestKind();
            }
            input.ReadMessage(DynamicTest);
            break;
          }
          case 34: {
            if (pos_ == null) {
              Pos = new global::openfmb.commonmodule.PhaseDPS();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 42: {
            if (protectionPickup_ == null) {
              ProtectionPickup = new global::openfmb.commonmodule.PhaseSPS();
            }
            input.ReadMessage(ProtectionPickup);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch status
  /// </summary>
  public sealed partial class SwitchStatus : pb::IMessage<SwitchStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchStatus> _parser = new pb::MessageParser<SwitchStatus>(() => new SwitchStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatus(SwitchStatus other) : this() {
      statusValue_ = other.statusValue_ != null ? other.statusValue_.Clone() : null;
      switchStatusXSWI_ = other.switchStatusXSWI_ != null ? other.switchStatusXSWI_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatus Clone() {
      return new SwitchStatus(this);
    }

    /// <summary>Field number for the "statusValue" field.</summary>
    public const int StatusValueFieldNumber = 1;
    private global::openfmb.commonmodule.StatusValue statusValue_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusValue StatusValue {
      get { return statusValue_; }
      set {
        statusValue_ = value;
      }
    }

    /// <summary>Field number for the "switchStatusXSWI" field.</summary>
    public const int SwitchStatusXSWIFieldNumber = 2;
    private global::openfmb.switchmodule.SwitchStatusXSWI switchStatusXSWI_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.SwitchStatusXSWI SwitchStatusXSWI {
      get { return switchStatusXSWI_; }
      set {
        switchStatusXSWI_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusValue, other.StatusValue)) return false;
      if (!object.Equals(SwitchStatusXSWI, other.SwitchStatusXSWI)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (statusValue_ != null) hash ^= StatusValue.GetHashCode();
      if (switchStatusXSWI_ != null) hash ^= SwitchStatusXSWI.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusValue);
      }
      if (switchStatusXSWI_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SwitchStatusXSWI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusValue_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusValue);
      }
      if (switchStatusXSWI_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SwitchStatusXSWI);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (statusValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusValue);
      }
      if (switchStatusXSWI_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitchStatusXSWI);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchStatus other) {
      if (other == null) {
        return;
      }
      if (other.statusValue_ != null) {
        if (statusValue_ == null) {
          StatusValue = new global::openfmb.commonmodule.StatusValue();
        }
        StatusValue.MergeFrom(other.StatusValue);
      }
      if (other.switchStatusXSWI_ != null) {
        if (switchStatusXSWI_ == null) {
          SwitchStatusXSWI = new global::openfmb.switchmodule.SwitchStatusXSWI();
        }
        SwitchStatusXSWI.MergeFrom(other.SwitchStatusXSWI);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusValue_ == null) {
              StatusValue = new global::openfmb.commonmodule.StatusValue();
            }
            input.ReadMessage(StatusValue);
            break;
          }
          case 18: {
            if (switchStatusXSWI_ == null) {
              SwitchStatusXSWI = new global::openfmb.switchmodule.SwitchStatusXSWI();
            }
            input.ReadMessage(SwitchStatusXSWI);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusValue_ == null) {
              StatusValue = new global::openfmb.commonmodule.StatusValue();
            }
            input.ReadMessage(StatusValue);
            break;
          }
          case 18: {
            if (switchStatusXSWI_ == null) {
              SwitchStatusXSWI = new global::openfmb.switchmodule.SwitchStatusXSWI();
            }
            input.ReadMessage(SwitchStatusXSWI);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch status profile
  /// </summary>
  public sealed partial class SwitchStatusProfile : pb::IMessage<SwitchStatusProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SwitchStatusProfile> _parser = new pb::MessageParser<SwitchStatusProfile>(() => new SwitchStatusProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SwitchStatusProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.switchmodule.SwitchmoduleReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatusProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatusProfile(SwitchStatusProfile other) : this() {
      statusMessageInfo_ = other.statusMessageInfo_ != null ? other.statusMessageInfo_.Clone() : null;
      protectedSwitch_ = other.protectedSwitch_ != null ? other.protectedSwitch_.Clone() : null;
      switchStatus_ = other.switchStatus_ != null ? other.switchStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SwitchStatusProfile Clone() {
      return new SwitchStatusProfile(this);
    }

    /// <summary>Field number for the "statusMessageInfo" field.</summary>
    public const int StatusMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.StatusMessageInfo statusMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.commonmodule.StatusMessageInfo StatusMessageInfo {
      get { return statusMessageInfo_; }
      set {
        statusMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "protectedSwitch" field.</summary>
    public const int ProtectedSwitchFieldNumber = 2;
    private global::openfmb.switchmodule.ProtectedSwitch protectedSwitch_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.ProtectedSwitch ProtectedSwitch {
      get { return protectedSwitch_; }
      set {
        protectedSwitch_ = value;
      }
    }

    /// <summary>Field number for the "switchStatus" field.</summary>
    public const int SwitchStatusFieldNumber = 3;
    private global::openfmb.switchmodule.SwitchStatus switchStatus_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::openfmb.switchmodule.SwitchStatus SwitchStatus {
      get { return switchStatus_; }
      set {
        switchStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SwitchStatusProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SwitchStatusProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(StatusMessageInfo, other.StatusMessageInfo)) return false;
      if (!object.Equals(ProtectedSwitch, other.ProtectedSwitch)) return false;
      if (!object.Equals(SwitchStatus, other.SwitchStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (statusMessageInfo_ != null) hash ^= StatusMessageInfo.GetHashCode();
      if (protectedSwitch_ != null) hash ^= ProtectedSwitch.GetHashCode();
      if (switchStatus_ != null) hash ^= SwitchStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (statusMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      if (switchStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (statusMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(StatusMessageInfo);
      }
      if (protectedSwitch_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ProtectedSwitch);
      }
      if (switchStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SwitchStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (statusMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StatusMessageInfo);
      }
      if (protectedSwitch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProtectedSwitch);
      }
      if (switchStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SwitchStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SwitchStatusProfile other) {
      if (other == null) {
        return;
      }
      if (other.statusMessageInfo_ != null) {
        if (statusMessageInfo_ == null) {
          StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
        }
        StatusMessageInfo.MergeFrom(other.StatusMessageInfo);
      }
      if (other.protectedSwitch_ != null) {
        if (protectedSwitch_ == null) {
          ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
        }
        ProtectedSwitch.MergeFrom(other.ProtectedSwitch);
      }
      if (other.switchStatus_ != null) {
        if (switchStatus_ == null) {
          SwitchStatus = new global::openfmb.switchmodule.SwitchStatus();
        }
        SwitchStatus.MergeFrom(other.SwitchStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (statusMessageInfo_ == null) {
              StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
            }
            input.ReadMessage(StatusMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            if (switchStatus_ == null) {
              SwitchStatus = new global::openfmb.switchmodule.SwitchStatus();
            }
            input.ReadMessage(SwitchStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (statusMessageInfo_ == null) {
              StatusMessageInfo = new global::openfmb.commonmodule.StatusMessageInfo();
            }
            input.ReadMessage(StatusMessageInfo);
            break;
          }
          case 18: {
            if (protectedSwitch_ == null) {
              ProtectedSwitch = new global::openfmb.switchmodule.ProtectedSwitch();
            }
            input.ReadMessage(ProtectedSwitch);
            break;
          }
          case 26: {
            if (switchStatus_ == null) {
              SwitchStatus = new global::openfmb.switchmodule.SwitchStatus();
            }
            input.ReadMessage(SwitchStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
