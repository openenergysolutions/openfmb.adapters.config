// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: coordinationservicemodule/coordinationservicemodule.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace openfmb.coordinationservicemodule {

  /// <summary>Holder for reflection information generated from coordinationservicemodule/coordinationservicemodule.proto</summary>
  public static partial class CoordinationservicemoduleReflection {

    #region Descriptor
    /// <summary>File descriptor for coordinationservicemodule/coordinationservicemodule.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CoordinationservicemoduleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjljb29yZGluYXRpb25zZXJ2aWNlbW9kdWxlL2Nvb3JkaW5hdGlvbnNlcnZp",
            "Y2Vtb2R1bGUucHJvdG8SGWNvb3JkaW5hdGlvbnNlcnZpY2Vtb2R1bGUaCXVt",
            "bC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGh9jb21t",
            "b25tb2R1bGUvY29tbW9ubW9kdWxlLnByb3RvIm0KJE9wdGlvbmFsX0Nvb3Jk",
            "aW5hdGlvblNlcnZpY2VNb2RlS2luZBJFCgV2YWx1ZRgBIAEoDjI2LmNvb3Jk",
            "aW5hdGlvbnNlcnZpY2Vtb2R1bGUuQ29vcmRpbmF0aW9uU2VydmljZU1vZGVL",
            "aW5kIqoBCh9FTkdfQ29vcmRpbmF0aW9uU2VydmljZU1vZGVLaW5kElAKBnNl",
            "dFZhbBgBIAEoDjI2LmNvb3JkaW5hdGlvbnNlcnZpY2Vtb2R1bGUuQ29vcmRp",
            "bmF0aW9uU2VydmljZU1vZGVLaW5kQgiItRgBkLUYARI1Cg9zZXRWYWxFeHRl",
            "bnNpb24YAiABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUi6gEK",
            "F0Nvb3JkaW5hdGlvbkNvbnRyb2xEQ1NDEkgKFWxvZ2ljYWxOb2RlRm9yQ29u",
            "dHJvbBgBIAEoCzIjLmNvbW1vbm1vZHVsZS5Mb2dpY2FsTm9kZUZvckNvbnRy",
            "b2xCBIC1GAESWwoXQ29vcmRpbmF0aW9uU2VydmljZU1vZGUYAiABKAsyOi5j",
            "b29yZGluYXRpb25zZXJ2aWNlbW9kdWxlLkVOR19Db29yZGluYXRpb25TZXJ2",
            "aWNlTW9kZUtpbmQSKAoGSXNsYW5kGAMgASgLMhguY29tbW9ubW9kdWxlLkNv",
            "bnRyb2xEUEMi4gEKE0Nvb3JkaW5hdGlvbkNvbnRyb2wSPgoQaWRlbnRpZmll",
            "ZE9iamVjdBgBIAEoCzIeLmNvbW1vbm1vZHVsZS5JZGVudGlmaWVkT2JqZWN0",
            "QgSAtRgBEiwKBWNoZWNrGAIgASgLMh0uY29tbW9ubW9kdWxlLkNoZWNrQ29u",
            "ZGl0aW9ucxJdChdjb29yZGluYXRpb25Db250cm9sRENTQxgDIAEoCzIyLmNv",
            "b3JkaW5hdGlvbnNlcnZpY2Vtb2R1bGUuQ29vcmRpbmF0aW9uQ29udHJvbERD",
            "U0NCCIi1GAGQtRgBIoMCChpDb29yZGluYXRpb25Db250cm9sUHJvZmlsZRJC",
            "ChJjb250cm9sTWVzc2FnZUluZm8YASABKAsyIC5jb21tb25tb2R1bGUuQ29u",
            "dHJvbE1lc3NhZ2VJbmZvQgSAtRgBEkQKEWFwcGxpY2F0aW9uU3lzdGVtGAIg",
            "ASgLMh8uY29tbW9ubW9kdWxlLkFwcGxpY2F0aW9uU3lzdGVtQgiItRgBkLUY",
            "ARJVChNjb29yZGluYXRpb25Db250cm9sGAMgASgLMi4uY29vcmRpbmF0aW9u",
            "c2VydmljZW1vZHVsZS5Db29yZGluYXRpb25Db250cm9sQgiItRgBkLUYAToE",
            "wPMYASLTAwoVQ29vcmRpbmF0aW9uRXZlbnREQ1NDEjQKC2xvZ2ljYWxOb2Rl",
            "GAEgASgLMhkuY29tbW9ubW9kdWxlLkxvZ2ljYWxOb2RlQgSAtRgBElsKF0Nv",
            "b3JkaW5hdGlvblNlcnZpY2VNb2RlGAIgASgLMjouY29vcmRpbmF0aW9uc2Vy",
            "dmljZW1vZHVsZS5FTkdfQ29vcmRpbmF0aW9uU2VydmljZU1vZGVLaW5kEicK",
            "BklzbGFuZBgDIAEoCzIXLmNvbW1vbm1vZHVsZS5TdGF0dXNTUFMSMAoPUGVy",
            "bWlzc2libGVBdXRvGAQgASgLMhcuY29tbW9ubW9kdWxlLlN0YXR1c1NQUxIy",
            "ChFQZXJtaXNzaWJsZU1hbnVhbBgFIAEoCzIXLmNvbW1vbm1vZHVsZS5TdGF0",
            "dXNTUFMSMwoSUGVybWlzc2libGVOZXR6ZXJvGAYgASgLMhcuY29tbW9ubW9k",
            "dWxlLlN0YXR1c1NQUxIxChBQZXJtaXNzaWJsZVN0YXJ0GAcgASgLMhcuY29t",
            "bW9ubW9kdWxlLlN0YXR1c1NQUxIwCg9QZXJtaXNzaWJsZVN0b3AYCCABKAsy",
            "Fy5jb21tb25tb2R1bGUuU3RhdHVzU1BTIq4BChFDb29yZGluYXRpb25FdmVu",
            "dBI+ChBpZGVudGlmaWVkT2JqZWN0GAEgASgLMh4uY29tbW9ubW9kdWxlLklk",
            "ZW50aWZpZWRPYmplY3RCBIC1GAESWQoVY29vcmRpbmF0aW9uRXZlbnREQ1ND",
            "GAIgASgLMjAuY29vcmRpbmF0aW9uc2VydmljZW1vZHVsZS5Db29yZGluYXRp",
            "b25FdmVudERDU0NCCIi1GAGQtRgBIvkBChhDb29yZGluYXRpb25FdmVudFBy",
            "b2ZpbGUSPgoQZXZlbnRNZXNzYWdlSW5mbxgBIAEoCzIeLmNvbW1vbm1vZHVs",
            "ZS5FdmVudE1lc3NhZ2VJbmZvQgSAtRgBEkQKEWFwcGxpY2F0aW9uU3lzdGVt",
            "GAIgASgLMh8uY29tbW9ubW9kdWxlLkFwcGxpY2F0aW9uU3lzdGVtQgiItRgB",
            "kLUYARJRChFjb29yZGluYXRpb25FdmVudBgDIAEoCzIsLmNvb3JkaW5hdGlv",
            "bnNlcnZpY2Vtb2R1bGUuQ29vcmRpbmF0aW9uRXZlbnRCCIi1GAGQtRgBOgTA",
            "8xgBItQDChZDb29yZGluYXRpb25TdGF0dXNEQ1NDEjQKC2xvZ2ljYWxOb2Rl",
            "GAEgASgLMhkuY29tbW9ubW9kdWxlLkxvZ2ljYWxOb2RlQgSAtRgBElsKF0Nv",
            "b3JkaW5hdGlvblNlcnZpY2VNb2RlGAIgASgLMjouY29vcmRpbmF0aW9uc2Vy",
            "dmljZW1vZHVsZS5FTkdfQ29vcmRpbmF0aW9uU2VydmljZU1vZGVLaW5kEicK",
            "BklzbGFuZBgDIAEoCzIXLmNvbW1vbm1vZHVsZS5TdGF0dXNEUFMSMAoPUGVy",
            "bWlzc2libGVBdXRvGAQgASgLMhcuY29tbW9ubW9kdWxlLlN0YXR1c1NQUxIy",
            "ChFQZXJtaXNzaWJsZU1hbnVhbBgFIAEoCzIXLmNvbW1vbm1vZHVsZS5TdGF0",
            "dXNTUFMSMwoSUGVybWlzc2libGVOZXR6ZXJvGAYgASgLMhcuY29tbW9ubW9k",
            "dWxlLlN0YXR1c1NQUxIxChBQZXJtaXNzaWJsZVN0YXJ0GAcgASgLMhcuY29t",
            "bW9ubW9kdWxlLlN0YXR1c1NQUxIwCg9QZXJtaXNzaWJsZVN0b3AYCCABKAsy",
            "Fy5jb21tb25tb2R1bGUuU3RhdHVzU1BTIrEBChJDb29yZGluYXRpb25TdGF0",
            "dXMSPgoQaWRlbnRpZmllZE9iamVjdBgBIAEoCzIeLmNvbW1vbm1vZHVsZS5J",
            "ZGVudGlmaWVkT2JqZWN0QgSAtRgBElsKFmNvb3JkaW5hdGlvblN0YXR1c0RD",
            "U0MYAiABKAsyMS5jb29yZGluYXRpb25zZXJ2aWNlbW9kdWxlLkNvb3JkaW5h",
            "dGlvblN0YXR1c0RDU0NCCIi1GAGQtRgBIvwBChlDb29yZGluYXRpb25TdGF0",
            "dXNQcm9maWxlEj4KEGV2ZW50TWVzc2FnZUluZm8YASABKAsyHi5jb21tb25t",
            "b2R1bGUuRXZlbnRNZXNzYWdlSW5mb0IEgLUYARJEChFhcHBsaWNhdGlvblN5",
            "c3RlbRgCIAEoCzIfLmNvbW1vbm1vZHVsZS5BcHBsaWNhdGlvblN5c3RlbUII",
            "iLUYAZC1GAESUwoSY29vcmRpbmF0aW9uU3RhdHVzGAMgASgLMi0uY29vcmRp",
            "bmF0aW9uc2VydmljZW1vZHVsZS5Db29yZGluYXRpb25TdGF0dXNCCIi1GAGQ",
            "tRgBOgTA8xgBKrICChtDb29yZGluYXRpb25TZXJ2aWNlTW9kZUtpbmQSKQol",
            "Q29vcmRpbmF0aW9uU2VydmljZU1vZGVLaW5kX1VOREVGSU5FRBAAEiQKIENv",
            "b3JkaW5hdGlvblNlcnZpY2VNb2RlS2luZF9ub25lEAESJAogQ29vcmRpbmF0",
            "aW9uU2VydmljZU1vZGVLaW5kX2F1dG8QAhImCiJDb29yZGluYXRpb25TZXJ2",
            "aWNlTW9kZUtpbmRfbWFudWFsEAMSJwojQ29vcmRpbmF0aW9uU2VydmljZU1v",
            "ZGVLaW5kX25ldHplcm8QBBIlCiFDb29yZGluYXRpb25TZXJ2aWNlTW9kZUtp",
            "bmRfc3RhcnQQBRIkCiBDb29yZGluYXRpb25TZXJ2aWNlTW9kZUtpbmRfc3Rv",
            "cBAGQqsBCiFvcGVuZm1iLmNvb3JkaW5hdGlvbnNlcnZpY2Vtb2R1bGVQAVpg",
            "Z2l0bGFiLmNvbS9vcGVuZm1iL3BzbS9vcHMvcHJvdG9idWYvZ28tb3BlbmZt",
            "Yi1vcHMtcHJvdG9idWYvdjIvb3BlbmZtYi9jb29yZGluYXRpb25zZXJ2aWNl",
            "bW9kdWxlqgIhb3BlbmZtYi5jb29yZGluYXRpb25zZXJ2aWNlbW9kdWxlYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::openfmb.UmlReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::openfmb.commonmodule.CommonmoduleReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::openfmb.coordinationservicemodule.CoordinationServiceModeKind), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.Optional_CoordinationServiceModeKind), global::openfmb.coordinationservicemodule.Optional_CoordinationServiceModeKind.Parser, new[]{ "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind), global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind.Parser, new[]{ "SetVal", "SetValExtension" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationControlDCSC), global::openfmb.coordinationservicemodule.CoordinationControlDCSC.Parser, new[]{ "LogicalNodeForControl", "CoordinationServiceMode", "Island" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationControl), global::openfmb.coordinationservicemodule.CoordinationControl.Parser, new[]{ "IdentifiedObject", "Check", "CoordinationControlDCSC" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationControlProfile), global::openfmb.coordinationservicemodule.CoordinationControlProfile.Parser, new[]{ "ControlMessageInfo", "ApplicationSystem", "CoordinationControl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationEventDCSC), global::openfmb.coordinationservicemodule.CoordinationEventDCSC.Parser, new[]{ "LogicalNode", "CoordinationServiceMode", "Island", "PermissibleAuto", "PermissibleManual", "PermissibleNetzero", "PermissibleStart", "PermissibleStop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationEvent), global::openfmb.coordinationservicemodule.CoordinationEvent.Parser, new[]{ "IdentifiedObject", "CoordinationEventDCSC" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationEventProfile), global::openfmb.coordinationservicemodule.CoordinationEventProfile.Parser, new[]{ "EventMessageInfo", "ApplicationSystem", "CoordinationEvent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationStatusDCSC), global::openfmb.coordinationservicemodule.CoordinationStatusDCSC.Parser, new[]{ "LogicalNode", "CoordinationServiceMode", "Island", "PermissibleAuto", "PermissibleManual", "PermissibleNetzero", "PermissibleStart", "PermissibleStop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationStatus), global::openfmb.coordinationservicemodule.CoordinationStatus.Parser, new[]{ "IdentifiedObject", "CoordinationStatusDCSC" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::openfmb.coordinationservicemodule.CoordinationStatusProfile), global::openfmb.coordinationservicemodule.CoordinationStatusProfile.Parser, new[]{ "EventMessageInfo", "ApplicationSystem", "CoordinationStatus" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// State kind
  /// </summary>
  public enum CoordinationServiceModeKind {
    /// <summary>
    /// Undefined
    /// </summary>
    [pbr::OriginalName("CoordinationServiceModeKind_UNDEFINED")] Undefined = 0,
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [pbr::OriginalName("CoordinationServiceModeKind_none")] None = 1,
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [pbr::OriginalName("CoordinationServiceModeKind_auto")] Auto = 2,
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [pbr::OriginalName("CoordinationServiceModeKind_manual")] Manual = 3,
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [pbr::OriginalName("CoordinationServiceModeKind_netzero")] Netzero = 4,
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [pbr::OriginalName("CoordinationServiceModeKind_start")] Start = 5,
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [pbr::OriginalName("CoordinationServiceModeKind_stop")] Stop = 6,
  }

  #endregion

  #region Messages
  public sealed partial class Optional_CoordinationServiceModeKind : pb::IMessage<Optional_CoordinationServiceModeKind>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Optional_CoordinationServiceModeKind> _parser = new pb::MessageParser<Optional_CoordinationServiceModeKind>(() => new Optional_CoordinationServiceModeKind());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Optional_CoordinationServiceModeKind> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optional_CoordinationServiceModeKind() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optional_CoordinationServiceModeKind(Optional_CoordinationServiceModeKind other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Optional_CoordinationServiceModeKind Clone() {
      return new Optional_CoordinationServiceModeKind(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private global::openfmb.coordinationservicemodule.CoordinationServiceModeKind value_ = global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationServiceModeKind Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Optional_CoordinationServiceModeKind);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Optional_CoordinationServiceModeKind other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Optional_CoordinationServiceModeKind other) {
      if (other == null) {
        return;
      }
      if (other.Value != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = (global::openfmb.coordinationservicemodule.CoordinationServiceModeKind) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Value = (global::openfmb.coordinationservicemodule.CoordinationServiceModeKind) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Coordination service mode kind
  /// </summary>
  public sealed partial class ENG_CoordinationServiceModeKind : pb::IMessage<ENG_CoordinationServiceModeKind>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ENG_CoordinationServiceModeKind> _parser = new pb::MessageParser<ENG_CoordinationServiceModeKind>(() => new ENG_CoordinationServiceModeKind());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ENG_CoordinationServiceModeKind> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ENG_CoordinationServiceModeKind() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ENG_CoordinationServiceModeKind(ENG_CoordinationServiceModeKind other) : this() {
      setVal_ = other.setVal_;
      SetValExtension = other.SetValExtension;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ENG_CoordinationServiceModeKind Clone() {
      return new ENG_CoordinationServiceModeKind(this);
    }

    /// <summary>Field number for the "setVal" field.</summary>
    public const int SetValFieldNumber = 1;
    private global::openfmb.coordinationservicemodule.CoordinationServiceModeKind setVal_ = global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined;
    /// <summary>
    /// The value of the coordination service mode.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationServiceModeKind SetVal {
      get { return setVal_; }
      set {
        setVal_ = value;
      }
    }

    /// <summary>Field number for the "setValExtension" field.</summary>
    public const int SetValExtensionFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_setValExtension_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string setValExtension_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SetValExtension {
      get { return setValExtension_; }
      set {
        setValExtension_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ENG_CoordinationServiceModeKind);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ENG_CoordinationServiceModeKind other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SetVal != other.SetVal) return false;
      if (SetValExtension != other.SetValExtension) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SetVal != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) hash ^= SetVal.GetHashCode();
      if (setValExtension_ != null) hash ^= SetValExtension.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SetVal != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SetVal);
      }
      if (setValExtension_ != null) {
        _single_setValExtension_codec.WriteTagAndValue(output, SetValExtension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SetVal != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SetVal);
      }
      if (setValExtension_ != null) {
        _single_setValExtension_codec.WriteTagAndValue(ref output, SetValExtension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SetVal != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SetVal);
      }
      if (setValExtension_ != null) {
        size += _single_setValExtension_codec.CalculateSizeWithTag(SetValExtension);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ENG_CoordinationServiceModeKind other) {
      if (other == null) {
        return;
      }
      if (other.SetVal != global::openfmb.coordinationservicemodule.CoordinationServiceModeKind.Undefined) {
        SetVal = other.SetVal;
      }
      if (other.setValExtension_ != null) {
        if (setValExtension_ == null || other.SetValExtension != "") {
          SetValExtension = other.SetValExtension;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SetVal = (global::openfmb.coordinationservicemodule.CoordinationServiceModeKind) input.ReadEnum();
            break;
          }
          case 18: {
            string value = _single_setValExtension_codec.Read(input);
            if (setValExtension_ == null || value != "") {
              SetValExtension = value;
            }
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SetVal = (global::openfmb.coordinationservicemodule.CoordinationServiceModeKind) input.ReadEnum();
            break;
          }
          case 18: {
            string value = _single_setValExtension_codec.Read(ref input);
            if (setValExtension_ == null || value != "") {
              SetValExtension = value;
            }
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB specialization for coordination service control, DCSC (Distributed Coordination Service
  /// Control), following 61850 naming convention.
  /// </summary>
  public sealed partial class CoordinationControlDCSC : pb::IMessage<CoordinationControlDCSC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationControlDCSC> _parser = new pb::MessageParser<CoordinationControlDCSC>(() => new CoordinationControlDCSC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationControlDCSC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControlDCSC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControlDCSC(CoordinationControlDCSC other) : this() {
      logicalNodeForControl_ = other.logicalNodeForControl_ != null ? other.logicalNodeForControl_.Clone() : null;
      coordinationServiceMode_ = other.coordinationServiceMode_ != null ? other.coordinationServiceMode_.Clone() : null;
      island_ = other.island_ != null ? other.island_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControlDCSC Clone() {
      return new CoordinationControlDCSC(this);
    }

    /// <summary>Field number for the "logicalNodeForControl" field.</summary>
    public const int LogicalNodeForControlFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNodeForControl logicalNodeForControl_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.LogicalNodeForControl LogicalNodeForControl {
      get { return logicalNodeForControl_; }
      set {
        logicalNodeForControl_ = value;
      }
    }

    /// <summary>Field number for the "CoordinationServiceMode" field.</summary>
    public const int CoordinationServiceModeFieldNumber = 2;
    private global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind coordinationServiceMode_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode {
      get { return coordinationServiceMode_; }
      set {
        coordinationServiceMode_ = value;
      }
    }

    /// <summary>Field number for the "Island" field.</summary>
    public const int IslandFieldNumber = 3;
    private global::openfmb.commonmodule.ControlDPC island_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlDPC Island {
      get { return island_; }
      set {
        island_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationControlDCSC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationControlDCSC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNodeForControl, other.LogicalNodeForControl)) return false;
      if (!object.Equals(CoordinationServiceMode, other.CoordinationServiceMode)) return false;
      if (!object.Equals(Island, other.Island)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNodeForControl_ != null) hash ^= LogicalNodeForControl.GetHashCode();
      if (coordinationServiceMode_ != null) hash ^= CoordinationServiceMode.GetHashCode();
      if (island_ != null) hash ^= Island.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNodeForControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForControl);
      }
      if (coordinationServiceMode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationServiceMode);
      }
      if (island_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Island);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNodeForControl_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNodeForControl);
      }
      if (coordinationServiceMode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationServiceMode);
      }
      if (island_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Island);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (logicalNodeForControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNodeForControl);
      }
      if (coordinationServiceMode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationServiceMode);
      }
      if (island_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Island);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationControlDCSC other) {
      if (other == null) {
        return;
      }
      if (other.logicalNodeForControl_ != null) {
        if (logicalNodeForControl_ == null) {
          LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
        }
        LogicalNodeForControl.MergeFrom(other.LogicalNodeForControl);
      }
      if (other.coordinationServiceMode_ != null) {
        if (coordinationServiceMode_ == null) {
          CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
        }
        CoordinationServiceMode.MergeFrom(other.CoordinationServiceMode);
      }
      if (other.island_ != null) {
        if (island_ == null) {
          Island = new global::openfmb.commonmodule.ControlDPC();
        }
        Island.MergeFrom(other.Island);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNodeForControl_ == null) {
              LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
            }
            input.ReadMessage(LogicalNodeForControl);
            break;
          }
          case 18: {
            if (coordinationServiceMode_ == null) {
              CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
            }
            input.ReadMessage(CoordinationServiceMode);
            break;
          }
          case 26: {
            if (island_ == null) {
              Island = new global::openfmb.commonmodule.ControlDPC();
            }
            input.ReadMessage(Island);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNodeForControl_ == null) {
              LogicalNodeForControl = new global::openfmb.commonmodule.LogicalNodeForControl();
            }
            input.ReadMessage(LogicalNodeForControl);
            break;
          }
          case 18: {
            if (coordinationServiceMode_ == null) {
              CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
            }
            input.ReadMessage(CoordinationServiceMode);
            break;
          }
          case 26: {
            if (island_ == null) {
              Island = new global::openfmb.commonmodule.ControlDPC();
            }
            input.ReadMessage(Island);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch discrete control
  /// </summary>
  public sealed partial class CoordinationControl : pb::IMessage<CoordinationControl>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationControl> _parser = new pb::MessageParser<CoordinationControl>(() => new CoordinationControl());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationControl> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControl() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControl(CoordinationControl other) : this() {
      identifiedObject_ = other.identifiedObject_ != null ? other.identifiedObject_.Clone() : null;
      check_ = other.check_ != null ? other.check_.Clone() : null;
      coordinationControlDCSC_ = other.coordinationControlDCSC_ != null ? other.coordinationControlDCSC_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControl Clone() {
      return new CoordinationControl(this);
    }

    /// <summary>Field number for the "identifiedObject" field.</summary>
    public const int IdentifiedObjectFieldNumber = 1;
    private global::openfmb.commonmodule.IdentifiedObject identifiedObject_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.IdentifiedObject IdentifiedObject {
      get { return identifiedObject_; }
      set {
        identifiedObject_ = value;
      }
    }

    /// <summary>Field number for the "check" field.</summary>
    public const int CheckFieldNumber = 2;
    private global::openfmb.commonmodule.CheckConditions check_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.CheckConditions Check {
      get { return check_; }
      set {
        check_ = value;
      }
    }

    /// <summary>Field number for the "coordinationControlDCSC" field.</summary>
    public const int CoordinationControlDCSCFieldNumber = 3;
    private global::openfmb.coordinationservicemodule.CoordinationControlDCSC coordinationControlDCSC_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationControlDCSC CoordinationControlDCSC {
      get { return coordinationControlDCSC_; }
      set {
        coordinationControlDCSC_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationControl);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationControl other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(IdentifiedObject, other.IdentifiedObject)) return false;
      if (!object.Equals(Check, other.Check)) return false;
      if (!object.Equals(CoordinationControlDCSC, other.CoordinationControlDCSC)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identifiedObject_ != null) hash ^= IdentifiedObject.GetHashCode();
      if (check_ != null) hash ^= Check.GetHashCode();
      if (coordinationControlDCSC_ != null) hash ^= CoordinationControlDCSC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (identifiedObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdentifiedObject);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (coordinationControlDCSC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationControlDCSC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (identifiedObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdentifiedObject);
      }
      if (check_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Check);
      }
      if (coordinationControlDCSC_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationControlDCSC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identifiedObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentifiedObject);
      }
      if (check_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Check);
      }
      if (coordinationControlDCSC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationControlDCSC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationControl other) {
      if (other == null) {
        return;
      }
      if (other.identifiedObject_ != null) {
        if (identifiedObject_ == null) {
          IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
        }
        IdentifiedObject.MergeFrom(other.IdentifiedObject);
      }
      if (other.check_ != null) {
        if (check_ == null) {
          Check = new global::openfmb.commonmodule.CheckConditions();
        }
        Check.MergeFrom(other.Check);
      }
      if (other.coordinationControlDCSC_ != null) {
        if (coordinationControlDCSC_ == null) {
          CoordinationControlDCSC = new global::openfmb.coordinationservicemodule.CoordinationControlDCSC();
        }
        CoordinationControlDCSC.MergeFrom(other.CoordinationControlDCSC);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (identifiedObject_ == null) {
              IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
            }
            input.ReadMessage(IdentifiedObject);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (coordinationControlDCSC_ == null) {
              CoordinationControlDCSC = new global::openfmb.coordinationservicemodule.CoordinationControlDCSC();
            }
            input.ReadMessage(CoordinationControlDCSC);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (identifiedObject_ == null) {
              IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
            }
            input.ReadMessage(IdentifiedObject);
            break;
          }
          case 18: {
            if (check_ == null) {
              Check = new global::openfmb.commonmodule.CheckConditions();
            }
            input.ReadMessage(Check);
            break;
          }
          case 26: {
            if (coordinationControlDCSC_ == null) {
              CoordinationControlDCSC = new global::openfmb.coordinationservicemodule.CoordinationControlDCSC();
            }
            input.ReadMessage(CoordinationControlDCSC);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch control profile
  /// </summary>
  public sealed partial class CoordinationControlProfile : pb::IMessage<CoordinationControlProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationControlProfile> _parser = new pb::MessageParser<CoordinationControlProfile>(() => new CoordinationControlProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationControlProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControlProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControlProfile(CoordinationControlProfile other) : this() {
      controlMessageInfo_ = other.controlMessageInfo_ != null ? other.controlMessageInfo_.Clone() : null;
      applicationSystem_ = other.applicationSystem_ != null ? other.applicationSystem_.Clone() : null;
      coordinationControl_ = other.coordinationControl_ != null ? other.coordinationControl_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationControlProfile Clone() {
      return new CoordinationControlProfile(this);
    }

    /// <summary>Field number for the "controlMessageInfo" field.</summary>
    public const int ControlMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.ControlMessageInfo controlMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ControlMessageInfo ControlMessageInfo {
      get { return controlMessageInfo_; }
      set {
        controlMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "applicationSystem" field.</summary>
    public const int ApplicationSystemFieldNumber = 2;
    private global::openfmb.commonmodule.ApplicationSystem applicationSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ApplicationSystem ApplicationSystem {
      get { return applicationSystem_; }
      set {
        applicationSystem_ = value;
      }
    }

    /// <summary>Field number for the "coordinationControl" field.</summary>
    public const int CoordinationControlFieldNumber = 3;
    private global::openfmb.coordinationservicemodule.CoordinationControl coordinationControl_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationControl CoordinationControl {
      get { return coordinationControl_; }
      set {
        coordinationControl_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationControlProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationControlProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ControlMessageInfo, other.ControlMessageInfo)) return false;
      if (!object.Equals(ApplicationSystem, other.ApplicationSystem)) return false;
      if (!object.Equals(CoordinationControl, other.CoordinationControl)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (controlMessageInfo_ != null) hash ^= ControlMessageInfo.GetHashCode();
      if (applicationSystem_ != null) hash ^= ApplicationSystem.GetHashCode();
      if (coordinationControl_ != null) hash ^= CoordinationControl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (applicationSystem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationSystem);
      }
      if (coordinationControl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (controlMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ControlMessageInfo);
      }
      if (applicationSystem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationSystem);
      }
      if (coordinationControl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationControl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (controlMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControlMessageInfo);
      }
      if (applicationSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationSystem);
      }
      if (coordinationControl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationControl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationControlProfile other) {
      if (other == null) {
        return;
      }
      if (other.controlMessageInfo_ != null) {
        if (controlMessageInfo_ == null) {
          ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
        }
        ControlMessageInfo.MergeFrom(other.ControlMessageInfo);
      }
      if (other.applicationSystem_ != null) {
        if (applicationSystem_ == null) {
          ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
        }
        ApplicationSystem.MergeFrom(other.ApplicationSystem);
      }
      if (other.coordinationControl_ != null) {
        if (coordinationControl_ == null) {
          CoordinationControl = new global::openfmb.coordinationservicemodule.CoordinationControl();
        }
        CoordinationControl.MergeFrom(other.CoordinationControl);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (applicationSystem_ == null) {
              ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
            }
            input.ReadMessage(ApplicationSystem);
            break;
          }
          case 26: {
            if (coordinationControl_ == null) {
              CoordinationControl = new global::openfmb.coordinationservicemodule.CoordinationControl();
            }
            input.ReadMessage(CoordinationControl);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (controlMessageInfo_ == null) {
              ControlMessageInfo = new global::openfmb.commonmodule.ControlMessageInfo();
            }
            input.ReadMessage(ControlMessageInfo);
            break;
          }
          case 18: {
            if (applicationSystem_ == null) {
              ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
            }
            input.ReadMessage(ApplicationSystem);
            break;
          }
          case 26: {
            if (coordinationControl_ == null) {
              CoordinationControl = new global::openfmb.coordinationservicemodule.CoordinationControl();
            }
            input.ReadMessage(CoordinationControl);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB specialization for coordination service control, DCSC (Distributed Coordination Service
  /// Control), following 61850 naming convention.
  /// </summary>
  public sealed partial class CoordinationEventDCSC : pb::IMessage<CoordinationEventDCSC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationEventDCSC> _parser = new pb::MessageParser<CoordinationEventDCSC>(() => new CoordinationEventDCSC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationEventDCSC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEventDCSC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEventDCSC(CoordinationEventDCSC other) : this() {
      logicalNode_ = other.logicalNode_ != null ? other.logicalNode_.Clone() : null;
      coordinationServiceMode_ = other.coordinationServiceMode_ != null ? other.coordinationServiceMode_.Clone() : null;
      island_ = other.island_ != null ? other.island_.Clone() : null;
      permissibleAuto_ = other.permissibleAuto_ != null ? other.permissibleAuto_.Clone() : null;
      permissibleManual_ = other.permissibleManual_ != null ? other.permissibleManual_.Clone() : null;
      permissibleNetzero_ = other.permissibleNetzero_ != null ? other.permissibleNetzero_.Clone() : null;
      permissibleStart_ = other.permissibleStart_ != null ? other.permissibleStart_.Clone() : null;
      permissibleStop_ = other.permissibleStop_ != null ? other.permissibleStop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEventDCSC Clone() {
      return new CoordinationEventDCSC(this);
    }

    /// <summary>Field number for the "logicalNode" field.</summary>
    public const int LogicalNodeFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNode logicalNode_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.LogicalNode LogicalNode {
      get { return logicalNode_; }
      set {
        logicalNode_ = value;
      }
    }

    /// <summary>Field number for the "CoordinationServiceMode" field.</summary>
    public const int CoordinationServiceModeFieldNumber = 2;
    private global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind coordinationServiceMode_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode {
      get { return coordinationServiceMode_; }
      set {
        coordinationServiceMode_ = value;
      }
    }

    /// <summary>Field number for the "Island" field.</summary>
    public const int IslandFieldNumber = 3;
    private global::openfmb.commonmodule.StatusSPS island_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS Island {
      get { return island_; }
      set {
        island_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleAuto" field.</summary>
    public const int PermissibleAutoFieldNumber = 4;
    private global::openfmb.commonmodule.StatusSPS permissibleAuto_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleAuto {
      get { return permissibleAuto_; }
      set {
        permissibleAuto_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleManual" field.</summary>
    public const int PermissibleManualFieldNumber = 5;
    private global::openfmb.commonmodule.StatusSPS permissibleManual_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleManual {
      get { return permissibleManual_; }
      set {
        permissibleManual_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleNetzero" field.</summary>
    public const int PermissibleNetzeroFieldNumber = 6;
    private global::openfmb.commonmodule.StatusSPS permissibleNetzero_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleNetzero {
      get { return permissibleNetzero_; }
      set {
        permissibleNetzero_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleStart" field.</summary>
    public const int PermissibleStartFieldNumber = 7;
    private global::openfmb.commonmodule.StatusSPS permissibleStart_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleStart {
      get { return permissibleStart_; }
      set {
        permissibleStart_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleStop" field.</summary>
    public const int PermissibleStopFieldNumber = 8;
    private global::openfmb.commonmodule.StatusSPS permissibleStop_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleStop {
      get { return permissibleStop_; }
      set {
        permissibleStop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationEventDCSC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationEventDCSC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNode, other.LogicalNode)) return false;
      if (!object.Equals(CoordinationServiceMode, other.CoordinationServiceMode)) return false;
      if (!object.Equals(Island, other.Island)) return false;
      if (!object.Equals(PermissibleAuto, other.PermissibleAuto)) return false;
      if (!object.Equals(PermissibleManual, other.PermissibleManual)) return false;
      if (!object.Equals(PermissibleNetzero, other.PermissibleNetzero)) return false;
      if (!object.Equals(PermissibleStart, other.PermissibleStart)) return false;
      if (!object.Equals(PermissibleStop, other.PermissibleStop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNode_ != null) hash ^= LogicalNode.GetHashCode();
      if (coordinationServiceMode_ != null) hash ^= CoordinationServiceMode.GetHashCode();
      if (island_ != null) hash ^= Island.GetHashCode();
      if (permissibleAuto_ != null) hash ^= PermissibleAuto.GetHashCode();
      if (permissibleManual_ != null) hash ^= PermissibleManual.GetHashCode();
      if (permissibleNetzero_ != null) hash ^= PermissibleNetzero.GetHashCode();
      if (permissibleStart_ != null) hash ^= PermissibleStart.GetHashCode();
      if (permissibleStop_ != null) hash ^= PermissibleStop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNode);
      }
      if (coordinationServiceMode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationServiceMode);
      }
      if (island_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Island);
      }
      if (permissibleAuto_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PermissibleAuto);
      }
      if (permissibleManual_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PermissibleManual);
      }
      if (permissibleNetzero_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PermissibleNetzero);
      }
      if (permissibleStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PermissibleStart);
      }
      if (permissibleStop_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PermissibleStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNode);
      }
      if (coordinationServiceMode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationServiceMode);
      }
      if (island_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Island);
      }
      if (permissibleAuto_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PermissibleAuto);
      }
      if (permissibleManual_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PermissibleManual);
      }
      if (permissibleNetzero_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PermissibleNetzero);
      }
      if (permissibleStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PermissibleStart);
      }
      if (permissibleStop_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PermissibleStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (logicalNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNode);
      }
      if (coordinationServiceMode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationServiceMode);
      }
      if (island_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Island);
      }
      if (permissibleAuto_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleAuto);
      }
      if (permissibleManual_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleManual);
      }
      if (permissibleNetzero_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleNetzero);
      }
      if (permissibleStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleStart);
      }
      if (permissibleStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleStop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationEventDCSC other) {
      if (other == null) {
        return;
      }
      if (other.logicalNode_ != null) {
        if (logicalNode_ == null) {
          LogicalNode = new global::openfmb.commonmodule.LogicalNode();
        }
        LogicalNode.MergeFrom(other.LogicalNode);
      }
      if (other.coordinationServiceMode_ != null) {
        if (coordinationServiceMode_ == null) {
          CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
        }
        CoordinationServiceMode.MergeFrom(other.CoordinationServiceMode);
      }
      if (other.island_ != null) {
        if (island_ == null) {
          Island = new global::openfmb.commonmodule.StatusSPS();
        }
        Island.MergeFrom(other.Island);
      }
      if (other.permissibleAuto_ != null) {
        if (permissibleAuto_ == null) {
          PermissibleAuto = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleAuto.MergeFrom(other.PermissibleAuto);
      }
      if (other.permissibleManual_ != null) {
        if (permissibleManual_ == null) {
          PermissibleManual = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleManual.MergeFrom(other.PermissibleManual);
      }
      if (other.permissibleNetzero_ != null) {
        if (permissibleNetzero_ == null) {
          PermissibleNetzero = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleNetzero.MergeFrom(other.PermissibleNetzero);
      }
      if (other.permissibleStart_ != null) {
        if (permissibleStart_ == null) {
          PermissibleStart = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleStart.MergeFrom(other.PermissibleStart);
      }
      if (other.permissibleStop_ != null) {
        if (permissibleStop_ == null) {
          PermissibleStop = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleStop.MergeFrom(other.PermissibleStop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNode_ == null) {
              LogicalNode = new global::openfmb.commonmodule.LogicalNode();
            }
            input.ReadMessage(LogicalNode);
            break;
          }
          case 18: {
            if (coordinationServiceMode_ == null) {
              CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
            }
            input.ReadMessage(CoordinationServiceMode);
            break;
          }
          case 26: {
            if (island_ == null) {
              Island = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(Island);
            break;
          }
          case 34: {
            if (permissibleAuto_ == null) {
              PermissibleAuto = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleAuto);
            break;
          }
          case 42: {
            if (permissibleManual_ == null) {
              PermissibleManual = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleManual);
            break;
          }
          case 50: {
            if (permissibleNetzero_ == null) {
              PermissibleNetzero = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleNetzero);
            break;
          }
          case 58: {
            if (permissibleStart_ == null) {
              PermissibleStart = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStart);
            break;
          }
          case 66: {
            if (permissibleStop_ == null) {
              PermissibleStop = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStop);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNode_ == null) {
              LogicalNode = new global::openfmb.commonmodule.LogicalNode();
            }
            input.ReadMessage(LogicalNode);
            break;
          }
          case 18: {
            if (coordinationServiceMode_ == null) {
              CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
            }
            input.ReadMessage(CoordinationServiceMode);
            break;
          }
          case 26: {
            if (island_ == null) {
              Island = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(Island);
            break;
          }
          case 34: {
            if (permissibleAuto_ == null) {
              PermissibleAuto = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleAuto);
            break;
          }
          case 42: {
            if (permissibleManual_ == null) {
              PermissibleManual = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleManual);
            break;
          }
          case 50: {
            if (permissibleNetzero_ == null) {
              PermissibleNetzero = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleNetzero);
            break;
          }
          case 58: {
            if (permissibleStart_ == null) {
              PermissibleStart = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStart);
            break;
          }
          case 66: {
            if (permissibleStop_ == null) {
              PermissibleStop = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStop);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch event
  /// </summary>
  public sealed partial class CoordinationEvent : pb::IMessage<CoordinationEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationEvent> _parser = new pb::MessageParser<CoordinationEvent>(() => new CoordinationEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEvent(CoordinationEvent other) : this() {
      identifiedObject_ = other.identifiedObject_ != null ? other.identifiedObject_.Clone() : null;
      coordinationEventDCSC_ = other.coordinationEventDCSC_ != null ? other.coordinationEventDCSC_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEvent Clone() {
      return new CoordinationEvent(this);
    }

    /// <summary>Field number for the "identifiedObject" field.</summary>
    public const int IdentifiedObjectFieldNumber = 1;
    private global::openfmb.commonmodule.IdentifiedObject identifiedObject_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.IdentifiedObject IdentifiedObject {
      get { return identifiedObject_; }
      set {
        identifiedObject_ = value;
      }
    }

    /// <summary>Field number for the "coordinationEventDCSC" field.</summary>
    public const int CoordinationEventDCSCFieldNumber = 2;
    private global::openfmb.coordinationservicemodule.CoordinationEventDCSC coordinationEventDCSC_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationEventDCSC CoordinationEventDCSC {
      get { return coordinationEventDCSC_; }
      set {
        coordinationEventDCSC_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(IdentifiedObject, other.IdentifiedObject)) return false;
      if (!object.Equals(CoordinationEventDCSC, other.CoordinationEventDCSC)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identifiedObject_ != null) hash ^= IdentifiedObject.GetHashCode();
      if (coordinationEventDCSC_ != null) hash ^= CoordinationEventDCSC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (identifiedObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdentifiedObject);
      }
      if (coordinationEventDCSC_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationEventDCSC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (identifiedObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdentifiedObject);
      }
      if (coordinationEventDCSC_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationEventDCSC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identifiedObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentifiedObject);
      }
      if (coordinationEventDCSC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationEventDCSC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationEvent other) {
      if (other == null) {
        return;
      }
      if (other.identifiedObject_ != null) {
        if (identifiedObject_ == null) {
          IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
        }
        IdentifiedObject.MergeFrom(other.IdentifiedObject);
      }
      if (other.coordinationEventDCSC_ != null) {
        if (coordinationEventDCSC_ == null) {
          CoordinationEventDCSC = new global::openfmb.coordinationservicemodule.CoordinationEventDCSC();
        }
        CoordinationEventDCSC.MergeFrom(other.CoordinationEventDCSC);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (identifiedObject_ == null) {
              IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
            }
            input.ReadMessage(IdentifiedObject);
            break;
          }
          case 18: {
            if (coordinationEventDCSC_ == null) {
              CoordinationEventDCSC = new global::openfmb.coordinationservicemodule.CoordinationEventDCSC();
            }
            input.ReadMessage(CoordinationEventDCSC);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (identifiedObject_ == null) {
              IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
            }
            input.ReadMessage(IdentifiedObject);
            break;
          }
          case 18: {
            if (coordinationEventDCSC_ == null) {
              CoordinationEventDCSC = new global::openfmb.coordinationservicemodule.CoordinationEventDCSC();
            }
            input.ReadMessage(CoordinationEventDCSC);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch event profile
  /// </summary>
  public sealed partial class CoordinationEventProfile : pb::IMessage<CoordinationEventProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationEventProfile> _parser = new pb::MessageParser<CoordinationEventProfile>(() => new CoordinationEventProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationEventProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEventProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEventProfile(CoordinationEventProfile other) : this() {
      eventMessageInfo_ = other.eventMessageInfo_ != null ? other.eventMessageInfo_.Clone() : null;
      applicationSystem_ = other.applicationSystem_ != null ? other.applicationSystem_.Clone() : null;
      coordinationEvent_ = other.coordinationEvent_ != null ? other.coordinationEvent_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationEventProfile Clone() {
      return new CoordinationEventProfile(this);
    }

    /// <summary>Field number for the "eventMessageInfo" field.</summary>
    public const int EventMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.EventMessageInfo eventMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EventMessageInfo EventMessageInfo {
      get { return eventMessageInfo_; }
      set {
        eventMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "applicationSystem" field.</summary>
    public const int ApplicationSystemFieldNumber = 2;
    private global::openfmb.commonmodule.ApplicationSystem applicationSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ApplicationSystem ApplicationSystem {
      get { return applicationSystem_; }
      set {
        applicationSystem_ = value;
      }
    }

    /// <summary>Field number for the "coordinationEvent" field.</summary>
    public const int CoordinationEventFieldNumber = 3;
    private global::openfmb.coordinationservicemodule.CoordinationEvent coordinationEvent_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationEvent CoordinationEvent {
      get { return coordinationEvent_; }
      set {
        coordinationEvent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationEventProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationEventProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventMessageInfo, other.EventMessageInfo)) return false;
      if (!object.Equals(ApplicationSystem, other.ApplicationSystem)) return false;
      if (!object.Equals(CoordinationEvent, other.CoordinationEvent)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventMessageInfo_ != null) hash ^= EventMessageInfo.GetHashCode();
      if (applicationSystem_ != null) hash ^= ApplicationSystem.GetHashCode();
      if (coordinationEvent_ != null) hash ^= CoordinationEvent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (applicationSystem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationSystem);
      }
      if (coordinationEvent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (applicationSystem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationSystem);
      }
      if (coordinationEvent_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationEvent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventMessageInfo);
      }
      if (applicationSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationSystem);
      }
      if (coordinationEvent_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationEvent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationEventProfile other) {
      if (other == null) {
        return;
      }
      if (other.eventMessageInfo_ != null) {
        if (eventMessageInfo_ == null) {
          EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
        }
        EventMessageInfo.MergeFrom(other.EventMessageInfo);
      }
      if (other.applicationSystem_ != null) {
        if (applicationSystem_ == null) {
          ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
        }
        ApplicationSystem.MergeFrom(other.ApplicationSystem);
      }
      if (other.coordinationEvent_ != null) {
        if (coordinationEvent_ == null) {
          CoordinationEvent = new global::openfmb.coordinationservicemodule.CoordinationEvent();
        }
        CoordinationEvent.MergeFrom(other.CoordinationEvent);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (applicationSystem_ == null) {
              ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
            }
            input.ReadMessage(ApplicationSystem);
            break;
          }
          case 26: {
            if (coordinationEvent_ == null) {
              CoordinationEvent = new global::openfmb.coordinationservicemodule.CoordinationEvent();
            }
            input.ReadMessage(CoordinationEvent);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (applicationSystem_ == null) {
              ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
            }
            input.ReadMessage(ApplicationSystem);
            break;
          }
          case 26: {
            if (coordinationEvent_ == null) {
              CoordinationEvent = new global::openfmb.coordinationservicemodule.CoordinationEvent();
            }
            input.ReadMessage(CoordinationEvent);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// OpenFMB specialization for coordination service control, DCSC (Distributed Coordination Service
  /// Control), following 61850 naming convention.
  /// </summary>
  public sealed partial class CoordinationStatusDCSC : pb::IMessage<CoordinationStatusDCSC>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationStatusDCSC> _parser = new pb::MessageParser<CoordinationStatusDCSC>(() => new CoordinationStatusDCSC());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationStatusDCSC> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatusDCSC() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatusDCSC(CoordinationStatusDCSC other) : this() {
      logicalNode_ = other.logicalNode_ != null ? other.logicalNode_.Clone() : null;
      coordinationServiceMode_ = other.coordinationServiceMode_ != null ? other.coordinationServiceMode_.Clone() : null;
      island_ = other.island_ != null ? other.island_.Clone() : null;
      permissibleAuto_ = other.permissibleAuto_ != null ? other.permissibleAuto_.Clone() : null;
      permissibleManual_ = other.permissibleManual_ != null ? other.permissibleManual_.Clone() : null;
      permissibleNetzero_ = other.permissibleNetzero_ != null ? other.permissibleNetzero_.Clone() : null;
      permissibleStart_ = other.permissibleStart_ != null ? other.permissibleStart_.Clone() : null;
      permissibleStop_ = other.permissibleStop_ != null ? other.permissibleStop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatusDCSC Clone() {
      return new CoordinationStatusDCSC(this);
    }

    /// <summary>Field number for the "logicalNode" field.</summary>
    public const int LogicalNodeFieldNumber = 1;
    private global::openfmb.commonmodule.LogicalNode logicalNode_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.LogicalNode LogicalNode {
      get { return logicalNode_; }
      set {
        logicalNode_ = value;
      }
    }

    /// <summary>Field number for the "CoordinationServiceMode" field.</summary>
    public const int CoordinationServiceModeFieldNumber = 2;
    private global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind coordinationServiceMode_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind CoordinationServiceMode {
      get { return coordinationServiceMode_; }
      set {
        coordinationServiceMode_ = value;
      }
    }

    /// <summary>Field number for the "Island" field.</summary>
    public const int IslandFieldNumber = 3;
    private global::openfmb.commonmodule.StatusDPS island_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusDPS Island {
      get { return island_; }
      set {
        island_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleAuto" field.</summary>
    public const int PermissibleAutoFieldNumber = 4;
    private global::openfmb.commonmodule.StatusSPS permissibleAuto_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleAuto {
      get { return permissibleAuto_; }
      set {
        permissibleAuto_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleManual" field.</summary>
    public const int PermissibleManualFieldNumber = 5;
    private global::openfmb.commonmodule.StatusSPS permissibleManual_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleManual {
      get { return permissibleManual_; }
      set {
        permissibleManual_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleNetzero" field.</summary>
    public const int PermissibleNetzeroFieldNumber = 6;
    private global::openfmb.commonmodule.StatusSPS permissibleNetzero_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleNetzero {
      get { return permissibleNetzero_; }
      set {
        permissibleNetzero_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleStart" field.</summary>
    public const int PermissibleStartFieldNumber = 7;
    private global::openfmb.commonmodule.StatusSPS permissibleStart_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleStart {
      get { return permissibleStart_; }
      set {
        permissibleStart_ = value;
      }
    }

    /// <summary>Field number for the "PermissibleStop" field.</summary>
    public const int PermissibleStopFieldNumber = 8;
    private global::openfmb.commonmodule.StatusSPS permissibleStop_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.StatusSPS PermissibleStop {
      get { return permissibleStop_; }
      set {
        permissibleStop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationStatusDCSC);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationStatusDCSC other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LogicalNode, other.LogicalNode)) return false;
      if (!object.Equals(CoordinationServiceMode, other.CoordinationServiceMode)) return false;
      if (!object.Equals(Island, other.Island)) return false;
      if (!object.Equals(PermissibleAuto, other.PermissibleAuto)) return false;
      if (!object.Equals(PermissibleManual, other.PermissibleManual)) return false;
      if (!object.Equals(PermissibleNetzero, other.PermissibleNetzero)) return false;
      if (!object.Equals(PermissibleStart, other.PermissibleStart)) return false;
      if (!object.Equals(PermissibleStop, other.PermissibleStop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (logicalNode_ != null) hash ^= LogicalNode.GetHashCode();
      if (coordinationServiceMode_ != null) hash ^= CoordinationServiceMode.GetHashCode();
      if (island_ != null) hash ^= Island.GetHashCode();
      if (permissibleAuto_ != null) hash ^= PermissibleAuto.GetHashCode();
      if (permissibleManual_ != null) hash ^= PermissibleManual.GetHashCode();
      if (permissibleNetzero_ != null) hash ^= PermissibleNetzero.GetHashCode();
      if (permissibleStart_ != null) hash ^= PermissibleStart.GetHashCode();
      if (permissibleStop_ != null) hash ^= PermissibleStop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (logicalNode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNode);
      }
      if (coordinationServiceMode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationServiceMode);
      }
      if (island_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Island);
      }
      if (permissibleAuto_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PermissibleAuto);
      }
      if (permissibleManual_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PermissibleManual);
      }
      if (permissibleNetzero_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PermissibleNetzero);
      }
      if (permissibleStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PermissibleStart);
      }
      if (permissibleStop_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PermissibleStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (logicalNode_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LogicalNode);
      }
      if (coordinationServiceMode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationServiceMode);
      }
      if (island_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Island);
      }
      if (permissibleAuto_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PermissibleAuto);
      }
      if (permissibleManual_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PermissibleManual);
      }
      if (permissibleNetzero_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PermissibleNetzero);
      }
      if (permissibleStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(PermissibleStart);
      }
      if (permissibleStop_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PermissibleStop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (logicalNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LogicalNode);
      }
      if (coordinationServiceMode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationServiceMode);
      }
      if (island_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Island);
      }
      if (permissibleAuto_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleAuto);
      }
      if (permissibleManual_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleManual);
      }
      if (permissibleNetzero_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleNetzero);
      }
      if (permissibleStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleStart);
      }
      if (permissibleStop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PermissibleStop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationStatusDCSC other) {
      if (other == null) {
        return;
      }
      if (other.logicalNode_ != null) {
        if (logicalNode_ == null) {
          LogicalNode = new global::openfmb.commonmodule.LogicalNode();
        }
        LogicalNode.MergeFrom(other.LogicalNode);
      }
      if (other.coordinationServiceMode_ != null) {
        if (coordinationServiceMode_ == null) {
          CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
        }
        CoordinationServiceMode.MergeFrom(other.CoordinationServiceMode);
      }
      if (other.island_ != null) {
        if (island_ == null) {
          Island = new global::openfmb.commonmodule.StatusDPS();
        }
        Island.MergeFrom(other.Island);
      }
      if (other.permissibleAuto_ != null) {
        if (permissibleAuto_ == null) {
          PermissibleAuto = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleAuto.MergeFrom(other.PermissibleAuto);
      }
      if (other.permissibleManual_ != null) {
        if (permissibleManual_ == null) {
          PermissibleManual = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleManual.MergeFrom(other.PermissibleManual);
      }
      if (other.permissibleNetzero_ != null) {
        if (permissibleNetzero_ == null) {
          PermissibleNetzero = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleNetzero.MergeFrom(other.PermissibleNetzero);
      }
      if (other.permissibleStart_ != null) {
        if (permissibleStart_ == null) {
          PermissibleStart = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleStart.MergeFrom(other.PermissibleStart);
      }
      if (other.permissibleStop_ != null) {
        if (permissibleStop_ == null) {
          PermissibleStop = new global::openfmb.commonmodule.StatusSPS();
        }
        PermissibleStop.MergeFrom(other.PermissibleStop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (logicalNode_ == null) {
              LogicalNode = new global::openfmb.commonmodule.LogicalNode();
            }
            input.ReadMessage(LogicalNode);
            break;
          }
          case 18: {
            if (coordinationServiceMode_ == null) {
              CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
            }
            input.ReadMessage(CoordinationServiceMode);
            break;
          }
          case 26: {
            if (island_ == null) {
              Island = new global::openfmb.commonmodule.StatusDPS();
            }
            input.ReadMessage(Island);
            break;
          }
          case 34: {
            if (permissibleAuto_ == null) {
              PermissibleAuto = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleAuto);
            break;
          }
          case 42: {
            if (permissibleManual_ == null) {
              PermissibleManual = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleManual);
            break;
          }
          case 50: {
            if (permissibleNetzero_ == null) {
              PermissibleNetzero = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleNetzero);
            break;
          }
          case 58: {
            if (permissibleStart_ == null) {
              PermissibleStart = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStart);
            break;
          }
          case 66: {
            if (permissibleStop_ == null) {
              PermissibleStop = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStop);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (logicalNode_ == null) {
              LogicalNode = new global::openfmb.commonmodule.LogicalNode();
            }
            input.ReadMessage(LogicalNode);
            break;
          }
          case 18: {
            if (coordinationServiceMode_ == null) {
              CoordinationServiceMode = new global::openfmb.coordinationservicemodule.ENG_CoordinationServiceModeKind();
            }
            input.ReadMessage(CoordinationServiceMode);
            break;
          }
          case 26: {
            if (island_ == null) {
              Island = new global::openfmb.commonmodule.StatusDPS();
            }
            input.ReadMessage(Island);
            break;
          }
          case 34: {
            if (permissibleAuto_ == null) {
              PermissibleAuto = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleAuto);
            break;
          }
          case 42: {
            if (permissibleManual_ == null) {
              PermissibleManual = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleManual);
            break;
          }
          case 50: {
            if (permissibleNetzero_ == null) {
              PermissibleNetzero = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleNetzero);
            break;
          }
          case 58: {
            if (permissibleStart_ == null) {
              PermissibleStart = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStart);
            break;
          }
          case 66: {
            if (permissibleStop_ == null) {
              PermissibleStop = new global::openfmb.commonmodule.StatusSPS();
            }
            input.ReadMessage(PermissibleStop);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch event
  /// </summary>
  public sealed partial class CoordinationStatus : pb::IMessage<CoordinationStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationStatus> _parser = new pb::MessageParser<CoordinationStatus>(() => new CoordinationStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatus(CoordinationStatus other) : this() {
      identifiedObject_ = other.identifiedObject_ != null ? other.identifiedObject_.Clone() : null;
      coordinationStatusDCSC_ = other.coordinationStatusDCSC_ != null ? other.coordinationStatusDCSC_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatus Clone() {
      return new CoordinationStatus(this);
    }

    /// <summary>Field number for the "identifiedObject" field.</summary>
    public const int IdentifiedObjectFieldNumber = 1;
    private global::openfmb.commonmodule.IdentifiedObject identifiedObject_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.IdentifiedObject IdentifiedObject {
      get { return identifiedObject_; }
      set {
        identifiedObject_ = value;
      }
    }

    /// <summary>Field number for the "coordinationStatusDCSC" field.</summary>
    public const int CoordinationStatusDCSCFieldNumber = 2;
    private global::openfmb.coordinationservicemodule.CoordinationStatusDCSC coordinationStatusDCSC_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationStatusDCSC CoordinationStatusDCSC {
      get { return coordinationStatusDCSC_; }
      set {
        coordinationStatusDCSC_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(IdentifiedObject, other.IdentifiedObject)) return false;
      if (!object.Equals(CoordinationStatusDCSC, other.CoordinationStatusDCSC)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identifiedObject_ != null) hash ^= IdentifiedObject.GetHashCode();
      if (coordinationStatusDCSC_ != null) hash ^= CoordinationStatusDCSC.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (identifiedObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdentifiedObject);
      }
      if (coordinationStatusDCSC_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationStatusDCSC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (identifiedObject_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(IdentifiedObject);
      }
      if (coordinationStatusDCSC_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CoordinationStatusDCSC);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identifiedObject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdentifiedObject);
      }
      if (coordinationStatusDCSC_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationStatusDCSC);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationStatus other) {
      if (other == null) {
        return;
      }
      if (other.identifiedObject_ != null) {
        if (identifiedObject_ == null) {
          IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
        }
        IdentifiedObject.MergeFrom(other.IdentifiedObject);
      }
      if (other.coordinationStatusDCSC_ != null) {
        if (coordinationStatusDCSC_ == null) {
          CoordinationStatusDCSC = new global::openfmb.coordinationservicemodule.CoordinationStatusDCSC();
        }
        CoordinationStatusDCSC.MergeFrom(other.CoordinationStatusDCSC);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (identifiedObject_ == null) {
              IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
            }
            input.ReadMessage(IdentifiedObject);
            break;
          }
          case 18: {
            if (coordinationStatusDCSC_ == null) {
              CoordinationStatusDCSC = new global::openfmb.coordinationservicemodule.CoordinationStatusDCSC();
            }
            input.ReadMessage(CoordinationStatusDCSC);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (identifiedObject_ == null) {
              IdentifiedObject = new global::openfmb.commonmodule.IdentifiedObject();
            }
            input.ReadMessage(IdentifiedObject);
            break;
          }
          case 18: {
            if (coordinationStatusDCSC_ == null) {
              CoordinationStatusDCSC = new global::openfmb.coordinationservicemodule.CoordinationStatusDCSC();
            }
            input.ReadMessage(CoordinationStatusDCSC);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Switch event profile
  /// </summary>
  public sealed partial class CoordinationStatusProfile : pb::IMessage<CoordinationStatusProfile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CoordinationStatusProfile> _parser = new pb::MessageParser<CoordinationStatusProfile>(() => new CoordinationStatusProfile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CoordinationStatusProfile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::openfmb.coordinationservicemodule.CoordinationservicemoduleReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatusProfile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatusProfile(CoordinationStatusProfile other) : this() {
      eventMessageInfo_ = other.eventMessageInfo_ != null ? other.eventMessageInfo_.Clone() : null;
      applicationSystem_ = other.applicationSystem_ != null ? other.applicationSystem_.Clone() : null;
      coordinationStatus_ = other.coordinationStatus_ != null ? other.coordinationStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CoordinationStatusProfile Clone() {
      return new CoordinationStatusProfile(this);
    }

    /// <summary>Field number for the "eventMessageInfo" field.</summary>
    public const int EventMessageInfoFieldNumber = 1;
    private global::openfmb.commonmodule.EventMessageInfo eventMessageInfo_;
    /// <summary>
    /// UML inherited base object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.EventMessageInfo EventMessageInfo {
      get { return eventMessageInfo_; }
      set {
        eventMessageInfo_ = value;
      }
    }

    /// <summary>Field number for the "applicationSystem" field.</summary>
    public const int ApplicationSystemFieldNumber = 2;
    private global::openfmb.commonmodule.ApplicationSystem applicationSystem_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.commonmodule.ApplicationSystem ApplicationSystem {
      get { return applicationSystem_; }
      set {
        applicationSystem_ = value;
      }
    }

    /// <summary>Field number for the "coordinationStatus" field.</summary>
    public const int CoordinationStatusFieldNumber = 3;
    private global::openfmb.coordinationservicemodule.CoordinationStatus coordinationStatus_;
    /// <summary>
    /// MISSING DOCUMENTATION!!!
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::openfmb.coordinationservicemodule.CoordinationStatus CoordinationStatus {
      get { return coordinationStatus_; }
      set {
        coordinationStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CoordinationStatusProfile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CoordinationStatusProfile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(EventMessageInfo, other.EventMessageInfo)) return false;
      if (!object.Equals(ApplicationSystem, other.ApplicationSystem)) return false;
      if (!object.Equals(CoordinationStatus, other.CoordinationStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (eventMessageInfo_ != null) hash ^= EventMessageInfo.GetHashCode();
      if (applicationSystem_ != null) hash ^= ApplicationSystem.GetHashCode();
      if (coordinationStatus_ != null) hash ^= CoordinationStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (applicationSystem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationSystem);
      }
      if (coordinationStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (eventMessageInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(EventMessageInfo);
      }
      if (applicationSystem_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ApplicationSystem);
      }
      if (coordinationStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CoordinationStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (eventMessageInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventMessageInfo);
      }
      if (applicationSystem_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApplicationSystem);
      }
      if (coordinationStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CoordinationStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CoordinationStatusProfile other) {
      if (other == null) {
        return;
      }
      if (other.eventMessageInfo_ != null) {
        if (eventMessageInfo_ == null) {
          EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
        }
        EventMessageInfo.MergeFrom(other.EventMessageInfo);
      }
      if (other.applicationSystem_ != null) {
        if (applicationSystem_ == null) {
          ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
        }
        ApplicationSystem.MergeFrom(other.ApplicationSystem);
      }
      if (other.coordinationStatus_ != null) {
        if (coordinationStatus_ == null) {
          CoordinationStatus = new global::openfmb.coordinationservicemodule.CoordinationStatus();
        }
        CoordinationStatus.MergeFrom(other.CoordinationStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (applicationSystem_ == null) {
              ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
            }
            input.ReadMessage(ApplicationSystem);
            break;
          }
          case 26: {
            if (coordinationStatus_ == null) {
              CoordinationStatus = new global::openfmb.coordinationservicemodule.CoordinationStatus();
            }
            input.ReadMessage(CoordinationStatus);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (eventMessageInfo_ == null) {
              EventMessageInfo = new global::openfmb.commonmodule.EventMessageInfo();
            }
            input.ReadMessage(EventMessageInfo);
            break;
          }
          case 18: {
            if (applicationSystem_ == null) {
              ApplicationSystem = new global::openfmb.commonmodule.ApplicationSystem();
            }
            input.ReadMessage(ApplicationSystem);
            break;
          }
          case 26: {
            if (coordinationStatus_ == null) {
              CoordinationStatus = new global::openfmb.coordinationservicemodule.CoordinationStatus();
            }
            input.ReadMessage(CoordinationStatus);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
